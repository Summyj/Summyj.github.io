<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>我的2022</title>
    <url>/2022-review/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/12/31/enty7zF1Hx9aqlJ.png">

<div class="note primary"><p>2022，我25岁。</p>
<p>常听人说，25岁是人生的一道坎。过了这个年纪，身体机能开始走下坡路，也总得在事业或者生活方面有所成就。</p>
<p>咦，好像这些说的是30岁那道坎，没关系，反正文案都一样。</p>
<p>我以为，每个人的人生都不该被一道道「坎」定义，就像电影《心灵奇旅》讲述的那样，活着本身就是人生的意义，要学会感受生活中每一刻的美好，去经历，去体验。</p>
<p>这一年，我体验了很多事，学会了骑摩托(虽然技术很烂)，养了猫(逆子)，也有了甜甜的恋爱(小甜甜)。上半年，我琐事缠身，厄运连连，下半年倒挺顺利，有种欲扬先抑，先苦后甜的意思。</p>
<p>工作四年半，今年是在一个全年965的项目上，认识了很多有趣的同事，非常开心。没有升职，可能是我还没学会如何从一个worker变成一个talker，加薪更是没有指望，按照明年经济衰退的趋势，裁员也不无可能。</p>
<p>事实上，各种大厂在下半年已经裁过几波了，公司的社招早就停掉了，校招的简历也都是国外名校留学生和国内985研究生的内卷，果然是行业寒冬，当务之急还是要保住自己的饭碗。</p>
<p>然后是疫情，3年的管控终于结束了，又一次见证了历史。</p>
<p>我是乐见其成的，毕竟不能一直这样封下去，放开是早晚的事。只是放开的太突然，大家又开始抢占各种资源，最近爆出的很多重症和老年人的死亡案例，也让人心惊，只能尽力保护好自己和家人，不要成为政策的牺牲品。</p>
<p>从10月份开始，我就断断续续的在家办公了，最初是因为管控公司不时被封，后来放开了，同事也陆续被感染，更加不敢去，上一次去办公室已经是一个月前了。</p>
<p>也许是得益于此，又或是身体免疫力强，到现在我都还没被感染过，今天最后一天，可以说是安稳度过了2022。</p>
<p>2023，我的开局还是不错的，也没有什么目标，只想继续保持对生活的热爱走下去，也希望在保住饭碗的同时，还能找到在工作中「自得其乐」的方式。</p>
<p>下面我要骄傲的往前走了！</p>
</div>




]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>2022</tag>
      </tags>
  </entry>
  <entry>
    <title>20岁光阴不再来</title>
    <url>/20%E5%B2%81%E5%85%89%E9%98%B4%E4%B8%8D%E5%86%8D%E6%9D%A5/</url>
    <content><![CDATA[<p>时间啊，你慢点走。</p>
<span id="more"></span>

<p>这个TED演讲是博主几年前看过的，留下了很深的印象。今天又重温了一遍，感触更深了。所以推荐给大家，TED名字叫做”<strong>20岁光阴不再来</strong>“，亲们也可以在网易公开课里看到。</p>
<p><object width="640" height="360"><param name="movie" value="http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1"><param name="allowScriptAccess" value="always"><param name="wmode" value="transparent"><embed src="http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1" type="application/x-shockwave-flash" width="640" height="360" allowfullscreen="true" wmode="transparent" allowscriptaccess="always"></object></p>
<h2 id="我的观后感"><a href="#我的观后感" class="headerlink" title="我的观后感"></a>我的观后感</h2><p>在这个TED中，演讲者给出了一些对20多岁年轻人的忠告和建议，可以概括为以下几点：</p>
<p><strong>忠告</strong></p>
<ul>
<li>30岁不是新的20岁，所以不要挥霍你时间，而是应该用这些时间去做一些有意义的事。年长者总会对20岁的年轻人说“你们还年轻，未来会有的”，实际上这不是一种激励，而是麻痹了年轻人的奋斗激情，助长他们的拖延症。如果我们真的听从了这些年长者的话，30岁才开始建立事业、家庭，可那个时候你又凭什么做到这些呢？</li>
<li>不要坐井观天，不要做无谓的探索，因为更多的时候你不是在探索未来，你只是想拖延。</li>
<li>不要等到该结婚的年龄才随便找个人建立婚姻关系。就像演讲者说的：20岁时谈恋爱就像玩抢椅子，每个人都东奔西跑的玩乐，但是在30岁左右时音乐停止了。每个人都开始坐下，我不想只有我站着，所以我才想嫁给我的丈夫，因为他是我30岁时离我最近的椅子。</li>
</ul>
<p><strong>建议</strong></p>
<ul>
<li>对自己进行投资，投资的目标是成为你想成为的人。包括未来工作所需和生活精神需要。比如健身、读书、学习专业知识等等。</li>
<li>学会利用身边的弱关系，扩大交际范围，而不是只跟与自己年岁、思维方式相差不多的人交往。比如演讲者提到了一个患者通过室友的表亲找到了心仪的工作。</li>
<li>从现在开始选择自己的家人，你以后想跟谁生活在一起，想拥有什么样的婚姻。而不是等到30岁才思考这个问题。</li>
</ul>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>TED</tag>
        <tag>告别拖延</tag>
      </tags>
  </entry>
  <entry>
    <title>五一青海三日游</title>
    <url>/5-1-travel/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<p>五一假期和朋友一起报团去青海三日游，以下内容转载自 <a href="http://www.mafengwo.cn/i/12619946.html">朋友写的语文课代表式游记</a> ，加了一些自己拍的照片和感想。</p>

</blockquote>

<h2 id="日期加花费"><a href="#日期加花费" class="headerlink" title="日期加花费"></a>日期加花费</h2><div class="note info"><p>出行日期： 5.1-5.3<br>出行方式： 报团 649/人<br>个人花费：往返车票232.5*2+团费649+餐饮门票502 = 1616<br>出发地： 西安<br>集合地： 西宁</p>
</div>

<h2 id="Day-0-抵达西宁"><a href="#Day-0-抵达西宁" class="headerlink" title="Day 0: 抵达西宁"></a>Day 0: 抵达西宁</h2><p>4.30和朋友一起坐高铁，下午抵达西宁站，在西宁街头转了一会，还吃了一顿火锅，整体感觉西宁宗教氛围比较浓厚，可能海拔较高的原因，这里的人肤色也较黑。</p>
<img data-src="https://i.loli.net/2021/06/27/3WJZDb6szXiOejo.jpg" alt="西宁站"><span class="image-caption">西宁站</span>
<img data-src="https://i.loli.net/2021/06/27/4hOczMsTLGHjfXm.jpg" width="400" height="600" alt="西宁街头"><span class="image-caption">西宁街头</span>
<img data-src="https://i.loli.net/2021/06/27/SWIDVYjUtRa5Zb6.jpg" alt="西宁街头的白色建筑"><span class="image-caption">西宁街头的白色建筑</span>
<img data-src="https://i.loli.net/2021/06/27/l3PwVLcGf5AEaOF.jpg" alt="大天朝哪里都有火锅"><span class="image-caption">大天朝哪里都有火锅</span>

<h2 id="Day-1-塔尔寺与青海湖"><a href="#Day-1-塔尔寺与青海湖" class="headerlink" title="Day 1: 塔尔寺与青海湖"></a>Day 1: 塔尔寺与青海湖</h2><h3 id="塔尔寺"><a href="#塔尔寺" class="headerlink" title="塔尔寺"></a>塔尔寺</h3><blockquote>
<p>观光车:20 门票:70</p>
</blockquote>
<p>塔尔寺景致颇多，主要是藏传佛教的佛像供奉和宗喀巴大师不同时期的故事。<br>一路上可见不同的院落供奉着各种佛像，有供人祈求长寿的佛，有掌管智慧的文殊菩萨 ，有笑口常开的弥勒佛，佛案上灯火长明。更引人关注的是关于宗喀巴大师的，在他出生的地方有茂盛的菩提树，依树而建饱含思子之念的白塔，于白塔侧又建寺，先有塔后有寺，故名塔尔寺。</p>
<img data-src="https://i.loli.net/2021/06/27/stZiMUacekAnET9.jpg" width="400" height="600" alt="寺中的白塔"><span class="image-caption">寺中的白塔</span>
在佛殿前的走廊处，有虔诚礼敬的信徒，用身体力行去祈求宗教功德，这里是一座活着的寺院。

<p><img data-src="https://i.loli.net/2021/06/27/xoBW4aiJRTrhjg3.jpg" alt="寺外的经幡"><span class="image-caption">寺外的经幡</span></p>
<h3 id="旅途中的景致-雪山"><a href="#旅途中的景致-雪山" class="headerlink" title="旅途中的景致: 雪山"></a>旅途中的景致: 雪山</h3><p>在路上，大巴车绕着山路起起伏伏，我看到覆盖着冬雪的山峦，远在天际，神秘而高洁。在路的两侧，有着平缓的山丘，山丘上有悠闲觅食的牦牛群，羊群。</p>
<p><img data-src="https://i.loli.net/2021/06/27/cf8dre56o2HwaQZ.png" alt="山上的残雪"><span class="image-caption">山上的残雪</span><br><img data-src="https://i.loli.net/2021/06/27/H2JskP9hnbiC5Sy.jpg" width="400" height="600" alt="层叠的山峦和腾飞的云朵"><span class="image-caption">层叠的山峦和腾飞的云朵</span></p>
<h3 id="青海湖"><a href="#青海湖" class="headerlink" title="青海湖"></a>青海湖</h3><p>如果青海湖是一幅画作，那我目之所及应该是画作边缘的一处而已。<br>泛着涟漪的雾蓝的湖与有着棉绒状白云点缀的薄蓝天空一定有分界线，但我却寻觅不到这水天一线，眼前的画作是如此的浑然一体，就像一块沁蓝的玉一般，密不可分。</p>
<p><img data-src="https://i.loli.net/2021/06/27/moUF41gnjXlJM7B.jpg" alt="天水相接的青海湖"><span class="image-caption">天水相接的青海湖</span><br>湖上空，那低就的簇簇云彩，用周边的蓝衬出自己的亮色，顺着湖岸线而走，只要抬头，它都是最耀目的所在。</p>
<p><img data-src="https://i.loli.net/2021/06/27/d8aLfrJATn6icM3.jpg" alt="清澈的湖水"><span class="image-caption">清澈的湖水</span><br>湖水很清澈，湖面上除却几只供游人拍摄入画的水鸟外，再无一物。之所以说是水鸟，是因为我不知它们的名字，若信口说说是鸳鸯，那是自欺欺人，若随意说是白鸭，只能说是词穷，因而只能称作水鸟了，这里有着暖春的气息。</p>
<p><img data-src="https://i.loli.net/2021/06/27/HQEWVow8DJPdUKl.jpg" alt="湖水上休憩的鸟儿"><span class="image-caption">湖水上休憩的鸟儿</span></p>
<h2 id="Day-2-茶卡尔盐湖与大树垭口"><a href="#Day-2-茶卡尔盐湖与大树垭口" class="headerlink" title="Day 2: 茶卡尔盐湖与大树垭口"></a>Day 2: 茶卡尔盐湖与大树垭口</h2><h3 id="茶卡盐湖"><a href="#茶卡盐湖" class="headerlink" title="茶卡盐湖"></a>茶卡盐湖</h3><blockquote>
<p>门票:59 小火车:50</p>
</blockquote>
<p>茶卡盐湖景区有小火车直通终点景观，可以看到远处的盐雕，铁轨将由盐的结晶体铺成的白色道路分为两条，一起向前延伸。</p>
<img data-src="https://i.loli.net/2021/06/27/y2If7q8umFg6Yvr.png" width="400" height="600" alt="向前延伸的铁轨和两边的结晶"><span class="image-caption">向前延伸的铁轨和两边的结晶</span>

<p>在路的尽头处，天际的雪山巍峨神秘，茶卡盐湖清澈明亮。<br><img data-src="https://i.loli.net/2021/06/27/ydpLNjwcFnl2UZA.png" alt="远处朦胧的雪山"><span class="image-caption">远处朦胧的雪山</span><br><img data-src="https://i.loli.net/2021/06/27/jXtfD4xawYsBJHv.jpg" alt="岸边清澈的茶卡盐湖"><span class="image-caption">岸边清澈的茶卡盐湖</span></p>
<p>在湖边看起来盐滩好似一段白丝带，沐浴在阳光下，洁白高亮。<br><img data-src="https://i.loli.net/2021/06/27/mEuZdgKQo2c19xM.jpg" alt="与蓝天交汇的茶卡盐湖"><span class="image-caption">与蓝天交汇的茶卡盐湖</span></p>
<p>站立在浅滩上，身边的一切都是那么的明亮耀眼，晴空白云，天际雪山，足下浅滩，四周浅蓝环绕，“天空之境”，美不胜收。<br><img data-src="https://i.loli.net/2021/06/27/D74phe8Uogr5uZn.jpg" alt="盐堆和远处的浅滩"><span class="image-caption">盐堆和远处的浅滩</span></p>
<p>脚踩在岸边的结晶上，触感好像掉进了盐罐里。<br><img data-src="https://i.loli.net/2021/06/27/KbUcyzxTWCadvRp.jpg" alt="脚下的结晶"><span class="image-caption">脚下的结晶</span></p>
<p>洁白的结晶和清澈的湖水让来游玩的人们不得不带上墨镜，否则看久了会对眼睛造成伤害，穿上景区的鞋套去湖水中行走，也是别有趣味，远处还有来拍婚纱照的新人们。<br><img data-src="https://i.loli.net/2021/06/27/takbizyoEq9lXcZ.jpg" alt="湖水和水下的结晶"><span class="image-caption">湖水和水下的结晶</span><br><img data-src="https://i.loli.net/2021/06/27/KZjAsIYrk9vtR2J.jpg" width="300" height="500" alt="随手抓起的湖底结晶"><span class="image-caption">随手抓起的湖底结晶</span><br><img data-src="https://i.loli.net/2021/06/27/tpHBxA2Xcv5yEqo.jpg" alt="在岸边洁白的结晶上留下自己的剪影"><span class="image-caption">在岸边洁白的结晶上留下自己的剪影</span></p>
<h3 id="旅途中的景致-湖水和草原"><a href="#旅途中的景致-湖水和草原" class="headerlink" title="旅途中的景致: 湖水和草原"></a>旅途中的景致: 湖水和草原</h3><p>游览完了茶卡盐湖，我们又坐上大巴去下一个景点，旅途漫长，但路边的景致却丝毫不差。大巴车停在路边休息时，也足够让我们一饱眼福。比如路边的湖岸，虽然我忘记了它的名字，但它的清澈绝不逊于青海湖。<br><img data-src="https://i.loli.net/2021/06/27/owBtN9J2xefUvb6.jpg" alt="马路边的湖岸"><span class="image-caption">马路边的湖岸</span></p>
<p>还有草原雪山，在蓝天白云的映衬下显得更加广袤，远处朦胧的雪山也增添了一丝神秘感：<br><img data-src="https://i.loli.net/2021/06/27/SfdDprUF32E4eOb.jpg" alt="蓝天白云下的草原雪山"><span class="image-caption">蓝天白云下的草原雪山</span><br><img data-src="https://i.loli.net/2021/06/27/CjE2sgdqNvLa1eD.jpg" alt="身披白雪的草原好像一匹斑马"><span class="image-caption">身披白雪的草原好像一匹斑马</span></p>
<h3 id="大树垭口"><a href="#大树垭口" class="headerlink" title="大树垭口"></a>大树垭口</h3><p>大树垭口，这是附近海拔最高的地方，在这里停留时，天还在下雪，可见度不高，雾蒙蒙的。好多人都没有下车，我和朋友下去拍照时也被风雪迷的睁不开眼睛，所以拍到的图也有点糊。这种风雪交加的场景，让我在五月也触摸到了浓冬的气息，地上的雪是冻硬了的，伴着微微飘雪，走起路来一步一沙沙，声音悦耳动听。<br><img data-src="https://i.loli.net/2021/06/27/emh6Spz1rE9gukR.jpg" alt="风雪中的大树垭口"><span class="image-caption">风雪中的大树垭口</span><br>下山时天有些暗了，山路是之字型的，顺路而下，可以看到山侧的雪如同洁白的磨砂画布，正在等候神秘力量的创作。大巴之后尾随了许多私家车，大都开着车前灯，一路逶迤而下，在灰蒙蒙的夜色下，好似一个个会移动的机械化红灯笼，点缀着暗夜下的雪山。</p>
<h2 id="Day-3-：卓尔山与祁连山脉"><a href="#Day-3-：卓尔山与祁连山脉" class="headerlink" title="Day 3 ：卓尔山与祁连山脉"></a>Day 3 ：卓尔山与祁连山脉</h2><h3 id="卓尔山"><a href="#卓尔山" class="headerlink" title="卓尔山"></a>卓尔山</h3><blockquote>
<p>门票+观光车:80 </p>
</blockquote>
<p>顺路而上，四周都是景，远处雪山上漂浮腾飞的云朵给人一种极强视觉震撼。<br><img data-src="https://i.loli.net/2021/06/27/HrNJghK3VwaStAo.png" alt="近处的山脉和远处的雪山"><span class="image-caption">近处的山脉和远处的雪山</span><br><img data-src="https://i.loli.net/2021/06/27/LRZoDIfh6pUJudk.jpg" width="400" height="600" alt="爬山途中"><span class="image-caption">爬山途中</span><br><img data-src="https://i.loli.net/2021/06/27/CG7PTaZg89Fj3qi.png" alt="一路所见皆是景"><span class="image-caption">一路所见皆是景</span></p>
<p>眼前是白色的雪顶，墨绿的古松林，在青黄的牧场自由觅食的羊群，里山势起伏平缓，是闲适与悠然雕琢的作品，旷远深邃。另一侧有平缓的牧场将红色的天然肌肤置于晴空之下，与雪顶相应成彰。<br><img data-src="https://i.loli.net/2021/06/27/ay8oqPQlRZ7kWrH.jpg" alt="雪顶的白与山脉的红"><span class="image-caption">雪顶的白与山脉的红</span></p>
<p>在山顶的白塔俯看山下，几何状排列的城镇建筑坐落在几座山中间的平缓地带，红色的屋顶，灰色的墙面，绿色的草坪，褐色流淌的河水以及车流不息的道路，适宜的连接起周围的阡陌交通，是大师的杰作。<br><img data-src="https://i.loli.net/2021/06/27/XLeHJctCNh4PWp7.png" alt="城镇"><span class="image-caption">城镇</span><br><img data-src="https://i.loli.net/2021/06/27/WKHdMUEGDfuBqbV.jpg" width="400" height="600" alt="雪山下的城镇"><span class="image-caption">雪山下的城镇</span><br><img data-src="https://i.loli.net/2021/06/27/CvBIxift1lJsaGm.png" alt="城镇远景"><span class="image-caption">城镇远景</span></p>
<p>每向上前进一步，看到的风景都与之前的有些不同，登高望远，于何时何地都是很好的指引，走在卓尔山上，眺望远处的风景，仿佛行走在云端。<br><img data-src="https://i.loli.net/2021/06/27/zUK9vquLHWklb5F.jpg" width="400" height="600" alt="走在卓尔山"><span class="image-caption">走在卓尔山</span></p>
<p>卓尔山上也有和塔尔寺一样的白塔，在旅程的三天里，很多地方都有这样的白塔，足可见这里宗教氛围的浓厚。<br><img data-src="https://i.loli.net/2021/06/27/zYiKRfM8XAPL5al.jpg" alt="卓尔山上的白塔"><span class="image-caption">卓尔山上的白塔</span></p>
<h3 id="旅途中的景致-草原雪地"><a href="#旅途中的景致-草原雪地" class="headerlink" title="旅途中的景致: 草原雪地"></a>旅途中的景致: 草原雪地</h3><p>爬完️卓尔山，坐上大巴继续旅途，途中突然看到了一片白茫茫的雪地，远处的雪山也仿佛藏匿在这篇雪地后，浑然一体。大家都想下去玩雪，于是大巴停在路边，我和朋友也下车欣赏这难得一见的雪景，脚踩在厚厚的雪上咯吱的响，想到小时候家乡的雪也有这么大，但长大后天气变暖，就很难看到这样的雪景了。<br><img data-src="https://i.loli.net/2021/06/27/Y2hFWo3ZCcMeGpN.jpg" alt="茫茫的雪地"><span class="image-caption">茫茫的雪地</span></p>
<p>置身于这样的雪景，突然就想堆个雪人⛄️，于是动手喜滋滋的做了一个可爱的小雪人出来，还跟它合了张影。<br><img data-src="https://i.loli.net/2021/06/27/lLSMzXsKiq8jQen.jpg" width="400" height="600" alt="堆雪人"><span class="image-caption">堆雪人</span><br><img data-src="https://i.loli.net/2021/06/27/4IXsnlZKF296ypY.jpg" alt="小雪人完成啦"><span class="image-caption">小雪人完成啦</span></p>
<h3 id="祁连山脉"><a href="#祁连山脉" class="headerlink" title="祁连山脉"></a>祁连山脉</h3><p>下午在回程的路上远观了祁连山脉，真的是蔚为壮观。<br><img data-src="https://i.loli.net/2021/06/27/hXv2E9eGjyP4xYL.png" alt="远处的山脉"><span class="image-caption">远处的山脉</span></p>
<p>碧蓝的天空下白云长列，似乎是伞伞相连，为云底的雪峰遮蔽住金色的阳光，千年万年的陪伴。横看，从眼眸中的这一侧到那一侧，山与山连绵不绝，竖看，云下有山，山顶积雪，传说中那是仙人居住的地方。<br><img data-src="https://i.loli.net/2021/06/27/vH8bFwyUleOoB5M.png" alt="与白云相接的祁连山脉"><span class="image-caption">与白云相接的祁连山脉</span></p>
<h3 id="再见西宁"><a href="#再见西宁" class="headerlink" title="再见西宁"></a>再见西宁</h3><p>旅途结束后，又和朋友一起在西宁的街头散步，夜风中的西宁静谧安然，自有它自己的特色。<br><img data-src="https://i.loli.net/2021/06/27/gR2cwxCHUkuODG7.jpg" alt="窗外的西宁"><span class="image-caption">窗外的西宁</span><br><img data-src="https://i.loli.net/2021/06/27/Kr4atIkjuYFzh3m.jpg" alt="夜晚的西宁"><span class="image-caption">夜晚的西宁</span><br><img data-src="https://i.loli.net/2021/06/27/ukeDpNiGMHbTSj1.jpg" alt="夜风中的西宁"><span class="image-caption">夜风中的西宁</span></p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>端午色达四日游</title>
    <url>/6-6-travel/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<p>端午节假期又和朋友一起报团去四川色达旅游，以下内容还是转载自 <a href="http://www.mafengwo.cn/i/13623502.html">朋友写的语文课代表式游记</a> ，加了一些自己拍的照片和感想，这次是三人行啦，由于来去匆忙，这次没有时间去成都街头走走。</p>

</blockquote>

<h2 id="日期加花费"><a href="#日期加花费" class="headerlink" title="日期加花费"></a>日期加花费</h2><div class="note info"><p>出行日期： 6.6-6.9<br>出行方式： 报团 899/人<br>个人花费：团费899+餐饮门票331+往返车票263*2 = 1756<br>出发地： 西安<br>集合地： 成都</p>
</div>

<h2 id="Day-1-桃坪羌寨"><a href="#Day-1-桃坪羌寨" class="headerlink" title="Day 1: 桃坪羌寨"></a>Day 1: 桃坪羌寨</h2><blockquote>
<p>门票：60元</p>
</blockquote>
<p>到达的第一站是桃坪羌寨，据说是黄渤主演电影「杀生」的取景地，这里有新寨和旧寨之分，我们参观的重点是旧寨。旧寨依山而建，寨子看起来浑为一体。<br><img data-src="https://i.loli.net/2021/06/28/xhYr2LFnjOdv4PA.png" alt="羌寨"><span class="image-caption">羌寨</span></p>
<p>走进之后，里面小路四通八达，通向家家户户，幸而寨子的面积不是很大，否则外来者很容易迷路。阴天又有下雨的趋势，倒给原本古朴的寨子增添了神秘的色彩。<br><img data-src="https://i.loli.net/2021/06/28/6dn3CbMiZr7g5Qs.jpg" width="400" height="500" alt="从寨内小路向上望"><span class="image-caption">从寨内小路向上望</span></p>
<p>寨中的房子以石头为主要的建筑材料。石头可以就地取材，可以保持室内温度，是最合适不过的。<br><img data-src="https://i.loli.net/2021/06/28/CqA9ZreQpR6z5mB.png" alt="寨内房屋"><span class="image-caption">寨内房屋</span></p>
<p>我在寨子中爬上了最高的碉堡，碉堡下宽上窄，有七层，通过厚重的木质楼梯连接，到最顶层时，只能容下三四人站立，极目远眺可以将寨中的风景一览无余。<br><img data-src="https://i.loli.net/2021/06/28/swrIP1NJ3dczUK8.jpg" alt="碉堡内的木质楼梯"><span class="image-caption">碉堡内的木质楼梯</span><br><img data-src="https://i.loli.net/2021/06/28/ORw9ANsZreKcSyu.jpg" width="400" height="500" alt="在碉堡顶层眺望的游客们"><span class="image-caption">在碉堡顶层眺望的游客们</span></p>
<p>走在寨中树荫遮蔽的石板路上，脚下水声潺潺而过，若是在盛夏，那酷暑之感都消了大半。这里地下水系交罗密织，可以为寨中人提供生活用水，消防用水，再者可以调节室温，更可以在紧急时作为逃生通道，真是充满智慧的设计。<br><img data-src="https://i.loli.net/2021/06/28/gJ3x2LTMvZkNrRp.png" width="400" height="500" alt="寨中的石板路"><span class="image-caption">寨中的石板路</span><br><img data-src="https://i.loli.net/2021/06/28/nuQF7JNT1qtCesO.png" alt="寨中小桥"><span class="image-caption">寨中小桥</span><br><img data-src="https://i.loli.net/2021/06/28/i7h4gUGkTFS1tN8.jpg" width="400" height="500" alt="桥边写生的人们"><span class="image-caption">桥边写生的人们</span></p>
<p>新寨处有许多卖车厘子的人，一番游览之后，在这里会不由自主的被那颜色艳丽的车厘子夺去目光，自然慷慨解囊。在等候午餐的间隙，品尝着清甜的车厘子，美事一桩。<br><img data-src="https://i.loli.net/2021/06/28/r2dQpoM8FB7VOJP.jpg" width="400" height="500" alt="午餐时间"><span class="image-caption">午餐时间</span></p>
<p>结束游览后，在大巴车上也随处可见树木葱郁的林山，白云浮在山顶亦如仙境。<br><img data-src="https://i.loli.net/2021/06/28/VZnLdPHioelI3Fy.jpg" alt="林山"><span class="image-caption">林山</span></p>
<h2 id="Day-2-天葬台与佛学院"><a href="#Day-2-天葬台与佛学院" class="headerlink" title="Day 2: 天葬台与佛学院"></a>Day 2: 天葬台与佛学院</h2><p>早上从观音桥出发，坐着大巴在路上，我们被几只猴子挡住了去路，只好停车。司机说我们得给这些猴子一点「过路费」他们才会走开，于是有游客给它们投喂了很多面包零食之类。这些猴子也不怕我们，甚至在大巴门口拍打窗户，还在游客窗边讨要食物，大家都感慨这些猴子也太聪明了。<br>过了一阵，到了一个休息区，在这里看到了更多猴子，喂食的人也很多，它们好似知道这是游客的休息区一样，成群结队的在这里讨要食物。天气很好，我捕捉到了山间彩虹。<br><img data-src="https://i.loli.net/2021/06/28/I3g7qOXavZeK4dA.jpg" alt="彩虹和讨食的猴子"><span class="image-caption">彩虹和讨食的猴子</span></p>
<p>中午一点，我们抵达了天葬台。<br>天葬是藏族的习俗，他们相信秃鹫食用了故去的人的骨肉后，会把他们的灵魂带到更接近天际的地方。天葬台位于1/3山高的地方，去往天葬台的路上会看到很多石堆、石刻的建筑，多用骷髅头作装饰，显得更加肃穆。<br><img data-src="https://i.loli.net/2021/06/28/wnHo2lPbVjN7XWv.jpg" width="400" height="500" alt="天葬台下的肃穆建筑"><span class="image-caption">天葬台下的肃穆建筑</span></p>
<p>天葬台右侧是一层层的阶梯，供游客们坐下观看天葬仪式。举行天葬在下午一点到三点间，不到一点我们就在看台上等待了。一点多，有一只秃鹫从天空中慢慢低旋停在了看台侧的山地上，有了第一只，后续的就陆续而至，抬眼望去，湛蓝的天空中许多的秃鹫回旋，大大小小的约有两百多只，场面甚是震感，这也是我第一次近距离看到秃鹫。<br><img data-src="https://i.loli.net/2021/06/28/F3U6KElOn8oAr9h.png" alt="空中回旋等待的秃鹫"><span class="image-caption">空中回旋等待的秃鹫</span></p>
<p>天葬仪式在一点半开始，我看到陆续有僧人和工人抬着一袋袋麻袋放在天葬台上，有游客说这就是供秃鹫们食用的尸体。<br>之后他们先用帘子挡住麻袋，这样游客们就看不到秃鹫进食时血腥的场面，虽然看不到，但从天葬台上黑压压盘飞的秃鹫来看，也不难想象到他们已经从麻袋中取出了尸体。不一会，空气中就弥漫着浓重的血腥气味，大概10分钟左右，秃鹫散开，各自飞离，天葬台又恢复了平静。<br>整个过程庄严肃穆，让我想到了佛祖割肉喂鹰的故事，万物有灵。</p>
<p>离开了天葬台，下一站就是我们此次的重点–佛学院。<br>我们在佛学院的入口处下了大巴，这里有去往山上佛学院的公交，然后乘坐公交车到达终点—坛城。<br><img data-src="https://i.loli.net/2021/06/28/4cUBNm8jWvsGuVD.jpg" width="300" height="400" alt="佛学院公交牌"><span class="image-caption">佛学院公交牌</span></p>
<p>带着一份惊喜，我们一步步的走到了观景台，从最高处的观景台俯瞰佛国，最中心是大学模样的佛学院，四周是层层渐进的红房子，用来休息住宿。远处青山平缓，高处天际湛蓝，簇簇云彩之下，是红色的佛国，这样宁心舒缓的红，伴着声声梵音，圣洁高贵。<br><img data-src="https://i.loli.net/2021/06/28/KXsCn92tJLjb7OR.jpg" alt="俯瞰色达"><span class="image-caption">俯瞰色达</span><br><img data-src="https://i.loli.net/2021/06/28/Jc2i4oEp8u75lyR.jpg" alt="换个角度俯瞰色达"><span class="image-caption">换个角度俯瞰色达</span></p>
<p>原本打算顺着蜿蜒曲折的路迤逦而下，谁知刚刚没走几步，头顶的乌云就不辞辛劳的开始了工作。雨点簌簌而下，我们只好去屋下躲避，我本来想说有一句歌词很合景–“爱就是晴空万里突然暴风雨”，正当我为自己反应迅速而努力喝彩时，经旁人说起才发觉原来是在下冰雹，我已经好些年有没有看到过下冰雹了，小小的白色晶状体砸在手上还是有些痛感的。</p>
<h2 id="Day-3-色达佛学院"><a href="#Day-3-色达佛学院" class="headerlink" title="Day 3: 色达佛学院"></a>Day 3: 色达佛学院</h2><p>今天早上的行程还是去色达佛学院，昨天因为天气的缘故匆匆一览，今天天气凉爽，适合缓行。<br>因为节假日的缘故，公交车只行至山腰处，剩下的路要步行。本着上下决不走同一条路的原则，我们挑了一处比较陡峭的台阶，打算沿台阶而上，到达山顶之后可以从公交车行驶的大道缓步而下。从下而上仰视色达，密集的红房子也是一种视觉震撼。<br><img data-src="https://i.loli.net/2021/06/28/XKHE5Pj1SIBaYmV.jpg" width="400" height="500" alt="仰视角度的色达"><span class="image-caption">仰视角度的色达</span></p>
<p>沿台阶而上比较费力，所幸每走一段就会有长椅可以休息。由于这里海拔比较高，我们还买了氧气瓶以备不虞，边吸氧边拾级而上也是一种奇妙的体验。<br><img data-src="https://i.loli.net/2021/06/28/UVm4DB2IK3Qtivk.jpg" width="300" height="400" alt="累了就吸会氧"><span class="image-caption">累了就吸会氧</span></p>
<p>越往上走，视野越开阔，所见的风景越深邃悠远。我们看到了身侧有许多的佛学院的学生，身着红色的衣裳，虔诚的去往课堂，一时间我想起了大学时同舍友结伴去上课的场景，轻快愉悦。<br><img data-src="https://i.loli.net/2021/06/28/yHXIYDBEUFrKxq4.jpg" width="300" height="400" alt="山顶的佛堂"><span class="image-caption">山顶的佛堂</span></p>
<p>我们到达山顶之后，略作休息就缓步下山。一路上挑着小路而下，光顾了佛学院里的水果摊、杂货铺、早餐店、纪念品商店，这时我发觉这是一座有着生活气息的佛学院，不是一座不食人间烟火的清冷殿堂，也不是一处只供游人赏玩的旅游胜地。<br>对于那些虔诚学习的学生而言，这里是佛学的殿堂。<br><img data-src="https://i.loli.net/2021/06/28/jXkHOSP2h8iw3V1.jpg" alt="山脚下的风光"><span class="image-caption">山脚下的风光</span></p>
<p>旅途结束后回到住所，和同游的朋友们一起吃串串，打麻将也是一番趣味，卸去一天的疲惫。<br><img data-src="https://i.loli.net/2021/06/28/hjxZqYviBHO9EXU.jpg" alt="串串吃起来"><span class="image-caption">串串吃起来</span><br><img data-src="https://i.loli.net/2021/06/28/3SeNyiBXpWIzC72.jpg" alt="麻将搓起来"><span class="image-caption">麻将搓起来</span></p>
<h2 id="Day-4-西索民居与卓克基官寨"><a href="#Day-4-西索民居与卓克基官寨" class="headerlink" title="Day 4: 西索民居与卓克基官寨"></a>Day 4: 西索民居与卓克基官寨</h2><p><img data-src="https://i.loli.net/2021/06/28/1TXF9pyRxe3lsLK.jpg" alt="西索民居"><span class="image-caption">西索民居</span><br>西索民居，清晨走在略带湿意的青石小路上，周边静谧安逸，我从村庄中部穿插而过，有一瞬间，觉得这条路，路两侧的石制小屋，屋前的各色盆植鲜花似乎只供我一人独赏，这是何等的惬意。<br><img data-src="https://i.loli.net/2021/06/28/QNthEAfP1BWCU2J.png" alt="民居小路"><span class="image-caption">民居小路</span><br><img data-src="https://i.loli.net/2021/06/28/8EbLmRhvSOoidIA.jpg" alt="远眺西索民居"><span class="image-caption">远眺西索民居</span></p>
<blockquote>
<p>卓克基官寨 门票 ： 60 元，部分图片来源于：<a href="http://blog.sina.com.cn/s/blog_8b4d9d180102yj09.html">卓克基土司官寨：毛主席曾经住过的嘉绒藏族城堡</a></p>
</blockquote>
<p>卓克基官寨前有一条青石台阶路，曲折而上直至寨前。石阶的里侧是片片山石垒起的石壁，石壁之上是木制的围栏，木栏外侧悬挂着各色花卉，颜色艳丽，不一而同。石壁之内乔木茂密，树荫于木栏之外为青石台阶遮蔽艳阳。走在这样诗意的石阶上，哪里还有什么忧愁。<br><img data-src="https://i.loli.net/2021/06/28/5cYmSDCEjbdtN8W.png" width="400" height="500" alt="石阶"><span class="image-caption">石阶</span></p>
<p>卓克基官寨这样有特色的建筑我还是第一次见到。它是一个正方形的建筑，外侧是石砌的，里面大都是木制结构。由正门而入，东南 西北 四侧都建有房屋，彼此相连。<br><img data-src="https://i.loli.net/2021/06/28/HFPgUS45fZDChpx.png" alt="官寨大门"><span class="image-caption">官寨大门</span></p>
<p>除了出入的正门侧有三层高外，其余的四侧都是五层高。一层是储物用的地方，二层是革命者的曾经的居所，三层是土司居住的地方，卧室，厨房，餐厅，管家的住所，议事的厅堂一应俱全。四层是供奉佛像金身的所在，五层有乞求长生的供奉处和僧众祷告的场所。一处官寨，涵盖万千。真的是匠心独运。<br><img data-src="https://i.loli.net/2021/06/28/wCMR5gquNOi6zJT.png" alt="官寨内部"><span class="image-caption">官寨内部</span><br><img data-src="https://i.loli.net/2021/06/28/yg3Gw8nZIxSpTdK.png" alt="四楼远望"><span class="image-caption">四楼远望</span></p>
<p>当我在四层参观供奉佛像的大殿时，只觉得经幡高悬，佛像高大庄严，壁画精美，不由得怀揣一颗虔诚的心。走到五楼相同的位置时，想推门而入看一下这处的设置，却发觉这里没有门，只有窗。透过窗看到了与四楼同样的风景，这时才发觉四楼与五楼是打通了的，否则何以有那么高大的佛像，只是身处四楼的时候只沉浸在殿堂的威严肃穆中，忽略了其他，到了五楼才后知后觉。<br><img data-src="https://i.loli.net/2021/06/28/viK9INcxEVns3By.png" alt="官寨佛像"><span class="image-caption">官寨佛像</span></p>
<p>官寨之外设有囚室三间。第一间有一扇正常大小的窗户，屋内还算明亮；第二间有一扇小窗户，屋内顿觉昏暗不少；第三间只有一个通气口，屋内暗黑压抑，不能视物。这三间分别关押罪行由轻至重的人，看这囚室的设计，单是被关押到第三间中，无错也会觉得自己有罪的。被剥夺光明真是一件很恐怖的事情。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>网络无障碍</title>
    <url>/Accessibility-test/</url>
    <content><![CDATA[<p><img data-src="https://i.loli.net/2020/01/19/LBdwixRJcjbS7NK.png" alt="Accessibility"><span class="image-caption">Accessibility</span></p>
<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于工作原因，博主最近在做<mark class="label info">网络无障碍测试</mark>，之前也听说过，但是没有实践。深入了解之后才发现网络无障碍已经有很成熟的标准和实践了，研究了一天，所以想把自己的发现跟大家分享一下(所以说公司真是一个涨姿势的好地方)。</p>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><h3 id="温情版定义"><a href="#温情版定义" class="headerlink" title="温情版定义"></a>温情版定义</h3><p>这个世界上，有一些人听不见，有的人看不见，也有人肢体有障碍。<br>互联网时代，手机不离身。娱乐、交流、还有许多生活应用都可以通过网络进行。在网络给我们带来快乐和便利的同时，是否也会想到上述特殊人群也需要这些呢？所以，<mark class="label info">网络无障碍要求所有人都可以平等、无障碍的访问互联网应用和内容，让世界充满爱<span class="emoji" alias="blush" style="fallback-src=https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span></mark></p>
<h3 id="专业版定义"><a href="#专业版定义" class="headerlink" title="专业版定义"></a>专业版定义</h3><p>网络无障碍听起来是很温情，然而作为一名IT民工，温情之余，也还是要干(ban)活(zhuan)的。<br>所以要支持网络无障碍，在开发互联网应用时，就必须得加上这么一个功能<span class="emoji" alias="point_down" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f447.png?v8">👇</span></p>
<blockquote>
<p>网络无障碍辅助功能（Accessibility，也被称为 <mark class="label danger">a11y</mark>，因为以 A 开头，以 Y 结尾，中间一共 11 个字母，这种命名方式可以说很想不到了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>）是一种可以帮助所有人获得服务的设计和创造。无障碍辅助功能是使得辅助技术正确解读网页的必要条件。</p>
</blockquote>
<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>上边提到了网络无障碍辅助功能，那么在做功能之前我们需要干什么呢？当然是了解需求。</p>
<div class="note info"><p><a href="https://www.w3.org/Translations/WCAG21-zh-20190311/">WCAG标准(Web Content Accessibility Guidelines)</a> 是由权威组织 <strong>W3C(万维网联盟)</strong> 于1999年推出的网络无障碍指南。目前已经更新到了2.1版本，此版本最近的更新在2019/3/11。<br>里边提出了Web内容应当遵守的4大准则，并且根据网站对这些准则的实施情况分为<strong>A、AA、AAA</strong> 3种一致性水平。</p>
</div>

<p>WCAG标准相当于一个网络无障碍相关的需求集合，但在实际工作中，网络无障碍的需求要根据具体情况而定，一般会从这两个角度出发提出需求：</p>
<ul>
<li>需求1: 从WCAG标准的一致性水平角度出发，要求实现A/AA/AAA水平。</li>
<li>需求2: 从人类本体对无障碍访问的需求角度出发，要求实现有看不见/听不见/色弱等身体缺陷人群，也能访问页面。</li>
</ul>
<p>有时候也会把这两种角度结合在一起提出需求，比如实现A水平，也要实现身体缺陷人群的访问，所以需求是可定制的。</p>
<h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>对于开发而言，网络无障碍的支持主要由<mark class="label info">前端童鞋</mark>们来实现。<br>在实际项目中，一般来说无障碍不会作为网站的原始需求，更多是作为一种改进，但无论是否原始需求，开发童鞋需要做的是：</p>
<div class="tabs" id="step"><ul class="nav-tabs"><li class="tab active"><a href="#step-1">Step 1</a></li><li class="tab"><a href="#step-2">Step 2</a></li><li class="tab"><a href="#step-3">Step 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="step-1"><p>非原始需求跳到第二步。了解一些基础的WCAG编码实践，可以参考<a href="https://zh-hans.reactjs.org/docs/accessibility.html">React官方网站</a>给出的编码建议。</p></div><div class="tab-pane" id="step-2"><p>使用下文的开发辅助工具和浏览器检测工具改代码。</p></div><div class="tab-pane" id="step-3"><p>交给测试仙女姐姐之前，自己做做下文中的简易手工测试。</p></div></div></div>

<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><div class="note warning"><p>在测试之前，我们需要谨记：任何工具都不能告诉我们web内容是否真的做到了网络无障碍，只有<strong>人</strong>才能确定真正的无障碍性。但这些工具可以帮助我们<strong>评估</strong>网页内容的无障碍性。</p>
</div>
<h3 id="测试工具"><a href="#测试工具" class="headerlink" title="测试工具"></a>测试工具</h3><h4 id="可在IDE使用的开发辅助工具"><a href="#可在IDE使用的开发辅助工具" class="headerlink" title="可在IDE使用的开发辅助工具"></a>可在IDE使用的开发辅助工具</h4><p><span id="inline-toc">1.</span>IDE智能检测<br><span id="inline-toc">2.</span><a href="https://github.com/evcohen/eslint-plugin-jsx-a11y">eslint-plugin-jsx-a11y 插件</a><br><span id="inline-toc">3.</span><a href="https://github.com/dequelabs/react-axe">react-axe组件</a>，可以直接把无障碍访问的发现显示在控制台中</p>
<h4 id="浏览器检测工具"><a href="#浏览器检测工具" class="headerlink" title="浏览器检测工具"></a>浏览器检测工具</h4><p>凡是浏览器中检测网络无障碍的测试工具，都离不开<a href="https://github.com/dequelabs/axe-core">aXe-core</a>，它可以对应用进行自动及端至端无障碍性测试，还包含了对Selenium的集成。可以选择下列工具的一个或多个测试。</p>
<p><span id="inline-toc">1.</span><a href="https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#pane">浏览器的无障碍辅助功能检测器Audits/LightHouse(基于aXe引擎)</a></p>
<img data-src="https://i.loli.net/2020/04/22/FLf2MhVHe4lBR7S.png" width="300" height="400">

<p><span id="inline-toc">2.</span>无障碍访问性检测器aXe(基于aXe-core组件)，可以添加<a href="https://chrome.google.com/webstore/detail/axe-web-accessibility-tes/lhdoppojpmngadmnindnejefpokejbdd">浏览器插件</a>，也可以下载<a href="https://www.deque.com/axe/">安装包</a>。相比较Audits检测报告更详细。</p>
<p><span id="inline-toc">3.</span>无障碍辅助的<a href="https://chrome.google.com/webstore/detail/wave-evaluation-tool/jbbplnpkjmmeebjpijfedlgcdilocofh">浏览器插件WebAIM WAVE</a>(Web Accessibility Evaluation Tool)</p>
<p><span id="inline-toc">4.</span>无障碍测试工具<a href="https://pa11y.org/">Pa11y</a>，可以自己配置测试基于的WCAG版本和一致性水平，也可以用来做持续集成。</p>
<h4 id="简易手工测试"><a href="#简易手工测试" class="headerlink" title="简易手工测试"></a>简易手工测试</h4><p>已经有了上面的自动化检测工具，为什么还需要手工测试呢？如果你认为在LightHouse得到100分或者aXe/WAVE检测无error就意味着网站已经完全做到访问无障碍。那就Too Young Too Simple了。因为自动化工具只会返回那些最常见和最容易修复的可访问性问题的检测报告。正如axe引擎开发团队DequeLabs提到的那样：</p>
<div class="note info"><p>The downside of the DevTools accessibility audit is that’s only half of the story. Your page may have scored a 94 in accessibility according to Lighthouse, but it’s only telling you the results of automated testing. You also have to perform manual accessibility testing to really know where you stand.</p>
</div>
<p>简易的无障碍手工测试，主要用到下面两种工具：<br><span id="inline-toc">1.</span>键盘<br>使用 Tab 和 Shift+Tab 来切换页面元素，用空格/enter键定位元素，比如下拉框等等。从而实现浏览整个页面。<br><span id="inline-toc">2.</span>屏幕阅读器</p>
<div class="note primary"><p>在使用屏幕阅读器之前，先想想自己是否为屏幕阅读器正确标记了页面的元素？屏幕阅读器通过识别页面上的无障碍辅助对象来帮助用户浏览页面，这些对象均包含在无障碍辅助功能树中，它是DOM树的一个子集：</p>
</div>
<img data-src="https://i.loli.net/2020/04/22/dEF7fwu1TxXbtWg.jpg">
不同设备，不同浏览器都有内置的屏幕阅读器设备，自己根据需求百度下<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>

<h3 id="持续集成"><a href="#持续集成" class="headerlink" title="持续集成"></a>持续集成</h3><p><span id="inline-toc">1.</span>将像<a href="https://github.com/dequelabs/axe-core">axe-core</a>这样的库合并到自动化测试套件中，集成到pipeline。<br><span id="inline-toc">2.</span><a href="https://cruft.io/posts/automated-accessibility-testing-node-travis-ci-pa11y/">将Pa11y集成到pipeline</a></p>
<h3 id="专业测试机构"><a href="#专业测试机构" class="headerlink" title="专业测试机构"></a>专业测试机构</h3><p>除了开发团队，也有一些专业的网络无障碍测试机构，这些机构的员工大多都是有身体缺陷的人，他们会用自己的测试设备和个人体验帮助提升网站的可访问性。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><span id="inline-toc">1.</span><a href="https://www.w3.org/Translations/WCAG21-zh-20190311/">W3C-Web Content Accessibility Guidelines</a><br><span id="inline-toc">2.</span><a href="https://zh-hans.reactjs.org/docs/accessibility.html">React-无障碍辅助功能</a><br><span id="inline-toc">3.</span><a href="https://developers.google.com/web/tools/chrome-devtools/accessibility/reference#pane">Accessibility Reference</a><br><span id="inline-toc">4.</span><a href="https://developers.google.com/web/fundamentals/accessibility/how-to-review">How To Do an Accessibility Review</a><br><span id="inline-toc">5.</span><a href="https://pa11y.org/tutorials/">Pa11y tutorials</a><br><span id="inline-toc">6.</span><a href="https://bitsofco.de/pa11y/">Accessibility Testing with pa11y</a><br><span id="inline-toc">7.</span>同事在项目Space的文档&gt;.&lt;</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>网络无障碍</tag>
      </tags>
  </entry>
  <entry>
    <title>AppUI自动化测试第二弹</title>
    <url>/AppUI-AutoTest-1/</url>
    <content><![CDATA[<p><img data-src="https://i.loli.net/2021/05/24/BaDFwHCvbWk8g1x.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>上篇博客我们创建好了测试项目，本篇博客就带大家编写测试代码，然后利用模拟器运行。</p>
<h2 id="Appium-Desktop"><a href="#Appium-Desktop" class="headerlink" title="Appium Desktop"></a>Appium Desktop</h2><p>熟悉了测试项目的结构后，我们就可以按照相同的代码格式编写自己的测试代码啦。<br>首先我们想一想，UI测试的第一步是什么呢？当然是定位元素。<br>对于Web应用，我们可以直接使用浏览器的开发者工具inspector定位页面元素：<br><img data-src="https://i.loli.net/2021/05/20/LWRPKYaSbQji4yH.png" alt="image.png"><span class="image-caption">image.png</span><br>然而我们的测试对象是App，怎么定位App里的元素呢？答案是利用Appium和模拟器。<br>打开我们下载的Appium desktop应用：<br><img data-src="https://i.loli.net/2021/05/20/Xb2R1rJf3PNDEkV.png" width="350" height="300"><br>选择 Start Server, Appium Server就运行起来啦:<br><img data-src="https://i.loli.net/2021/05/20/r27GjW6cAdwHtSK.png" alt="image.png"><span class="image-caption">image.png</span><br>鼠标hover到右上角的🔍图标，出现tip提示 <strong>Start Inspector Session</strong>，很明显这就是我们用来定位App元素的工具啦，点击之后出现下图窗口：<br><img data-src="https://i.loli.net/2021/05/20/t3b2iRPjNBOpW8x.png" alt="image.png"><span class="image-caption">image.png</span><br>这里我们只关注当前的Tab窗口，其它部分不做介绍。在这个窗口中，我们可以通过设置 <strong>Desired Capabilities</strong> 来启动一个iOS/Android模拟器，Desired Capabilities是一系列模拟器配置项的集合，分为iOS和Android两个平台，有很多配置项，有两个平台公共的也有各平台单独的配置，完整的配置项列表在这里：<a href="http://appium.io/docs/en/writing-running-appium/caps/index.html#appium-desired-capabilities">Appium Desired Capabilities</a>。</p>
<p>下边我们使用5个公共的Desired Capabilities配置项分别启动iOS和Android的模拟器：platformName、platformVersion、deviceName、automationName、app，他们分别代表操作系统名称、操作系统版本、设备名称、自动化引擎名称、app路径，想更多的了解这五个配置项可以看上边的配置项列表。</p>
<h2 id="iOS"><a href="#iOS" class="headerlink" title="iOS"></a>iOS</h2><h3 id="启动iOS-Simulator"><a href="#启动iOS-Simulator" class="headerlink" title="启动iOS Simulator"></a>启动iOS Simulator</h3><p>首先执行 <strong>xcrun instruments -s</strong> 命令来查看Xcode提供给我们所有的iOS模拟器种类，包括设备名称和操作系统版本等等：</p>
<p><img data-src="https://i.loli.net/2021/05/20/eJZMpn3ayOgB78i.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>然后选择一个模拟设备，按照json格式新增一个Desired Capabilities，这里我们以iPhone 11为例，粘贴下边的Desired Capabilities到Appium Start Inspector窗口，然后点击Save As按钮保存这个配置，这里我把它保存为iOS：<br><img data-src="https://i.loli.net/2021/05/20/VdDgGbmSFpCOUea.png" alt="image.png"><span class="image-caption">image.png</span></p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">{
  "platformName": "iOS",
  "platformVersion": "14.0",
  "deviceName": "iPhone 11",
  "automationName": "XCUITest",
  "app": ""
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后它就可以在 Saved Capability Sets 窗口里看到啦，以后可以单独对它做修改。<br>然而我们还缺少一个app字段，它是我们测试app的绝对路径，WebdriverIO给初学者提供了iOS和Android两个平台的 <a href="https://github.com/webdriverio/native-demo-app/releases">demo app</a>，它们具有现代App的代码结构，非常适合用来做App测试：<br><img data-src="https://i.loli.net/2021/05/20/Ayx3YSEpuZlFc8a.png" alt="image.png"><span class="image-caption">image.png</span><br>下载完成后，把.apk文件和解压后的.app文件都放入项目的app文件夹中，之后修改Desired Capabilities里的app路径为绝对路径，然后保存：<br><img data-src="https://i.loli.net/2021/05/20/wJlyN5mUjLFdXeM.png" alt="image.png"><span class="image-caption">image.png</span><br>点击Start Session后，稍等片刻，就能看到模拟器启动并出现元素定位窗口，测试app已被打开：<br><img data-src="https://i.loli.net/2021/05/20/kTL578EawBCpRno.png" alt="image.png"><span class="image-caption">image.png</span><br>元素定位窗口由两部分组成，左侧为App视图，右侧为代码和元素视图，在左侧视图中点击App元素，对应的元素信息就会出现在右侧视图，比较常用的是Xpath，但也可以用id/class来定位元素：<br><img data-src="https://i.loli.net/2021/05/20/cDygiatb1qG3EX2.png" alt="image.png"><span class="image-caption">image.png</span><br>元素定位窗口的App视图只能展示一个页面，不能通过点击直接切换App页面。要做到这一点，我们只能先切换模拟器页面，之后点击元素定位窗口上方的刷新图标，新的页面视图才会出现：<br><img data-src="https://i.loli.net/2021/05/20/ihJ7OZzbE2rFXYV.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><p>到这里，我们已经能够定位iOS平台的App元素了，然后我们来编写测试代码，这里我们来编写最简单的两个Case，登录和注册。</p>
<div class="note info"><p>首先是登录，要实现登录操作，我们首先要切换到上边的登录页面，之后输入邮箱和密码，再点击登录即可。<br>然后是注册，需要切换到上边的登录页面，然后切换到注册tab页，之后输入邮箱、密码、确认密码字段，最后点击注册即可。</p>
</div>

<p>回到VSCode，登录页面已被定义，且已有示例的selector写法，通过定位元素，我们可以按照示例定义页面元素的selector，再新增方法对元素进行操作，最后在e2e.js中调用页面方法完成测试。</p>
<p><img data-src="https://i.loli.net/2021/05/20/MLUTP2BbmGR76Op.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>大家可以按照这个思路自己编写测试代码，这里我就不贴代码了，不过可以访问 <a href="https://github.com/Summyj/AppUI-AutoTest">我的代码库</a> 看到示例代码，将内容copy到对应文件夹(results文件夹只用copy result.txt)，其中ios.conf.js就是我们上边设置的Desired Capabilities，要在编辑器里运行代码我们必须得加上它，将其修改成你本地的配置即可，这里我有两个app路径，其中一个(没注释的)与后边集成CI步骤有关，可以先注释掉：<br><img data-src="https://i.loli.net/2021/05/26/SrQML96uvleWqBX.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>最后运行 <strong>npm run test:ios</strong>(这是我的自定义命令，可以在package.json文件里看到它的定义) 执行测试，运行前请确保Appium desktop已退出，运行视频：</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNTE1ODA3OTk3Ng==" frameborder="0" 'allowfullscreen'=""></iframe>

<p>测试报告是利用junit做的，可以在 wdio.conf.js 文件里查看：<br><img data-src="https://i.loli.net/2021/05/26/nhUuXidOpwWzZ9G.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h2 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h2><h3 id="启动Android-Emulator"><a href="#启动Android-Emulator" class="headerlink" title="启动Android Emulator"></a>启动Android Emulator</h3><p>打开我们下载的Android Studio，进入编辑页面，点击右上角AVD Manager图标打开模拟器窗口：<br><img data-src="https://i.loli.net/2021/05/20/wiFyJgqWZXbDAmG.png" alt="image.png"><span class="image-caption">image.png</span><br>这里会列出所有可以使用的安卓模拟器，初次打开时，可能没有Virtual Device，可以通过“Create Virtual Device”来创建一个，创建时下载OS版本需要一些时间哦，如果有默认的Virtual Device就不用下载了。然后启动你的安卓模拟器：</p>
<p><img data-src="https://i.loli.net/2021/05/24/n1865FmjlbKyupU.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>安卓模拟器右侧是一些菜单项，包括开关机、音量、旋转等等，以及一些高级设置，可以访问 <a href="https://developer.android.com/studio/run/emulator">在Android模拟器上运行应用</a> 了解更多。</p>
<p>接着和iOS一样，在Appium desktop里新增Virtual Device对应的Desired Capabilities，然后Save as保存它，下边是我保存的配置，需要修改成和你的模拟器一致：</p>
<p><img data-src="https://i.loli.net/2021/05/24/TM3skJ47iDX8l9b.png" alt="image.png"><span class="image-caption">image.png</span></p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">{
  "platformName": "Android",
  "platformVersion": "10.0",
  "deviceName": "Pixel_3_XL_API_29",
  "automationName": "UiAutomator2",
  "app": "你的安卓app绝对路径，应该在app文件夹里"
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>保持你的安卓模拟器启动状态，然后Start Session，就会看到和刚才iOS一样的元素定位窗口，测试app已在模拟器中打开：</p>
<p><img data-src="https://i.loli.net/2021/05/24/MoekacB4D9TAtsu.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>事实上，你可以同时打开iOS和Android的模拟器和元素定位窗口，一起定位iOS和Android的元素：</p>
<p><img data-src="https://i.loli.net/2021/05/24/R6yJCZVgfUNwQB5.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="编写代码-1"><a href="#编写代码-1" class="headerlink" title="编写代码"></a>编写代码</h3><p>到这里，我们已经能够定位Android平台的App元素了，同样可以按照之前的思路自己编写登录注册的测试代码，事实上只需要修改上边iOS的Selector为Android格式即可。<br>也可以访问 <a href="https://github.com/Summyj/AppUI-AutoTest">我的代码库</a> 看到示例代码，将android.conf.js内容修改成你本地的配置即可，这里我有两个app路径和两个deviceName，多出的两个(没注释的)同样与后边集成CI步骤有关，可以先注释掉：<br><img data-src="https://i.loli.net/2021/05/26/dvgs5SKQrHXEkUh.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>最后运行 <strong>npm run test:android</strong>(这是我的自定义命令，可以在package.json文件里看到它的定义) 执行测试，运行前请确保Appium desktop已退出，也要确保安卓模拟器为启动状态，运行视频：</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNTE1ODA3NzE4MA==" frameborder="0" 'allowfullscreen'=""></iframe>

<h2 id="更多内容"><a href="#更多内容" class="headerlink" title="更多内容"></a>更多内容</h2><p>上面我们使用模拟器和两个demo app，利用Appium inspector完成了登录注册功能的自动化测试。当然，只懂得这些是远远不够的，首先我们知道，当代App有几种类型：<strong>Native app</strong>、<strong>Web app</strong>以及<strong>Hybrid app</strong>，这三者的区别是什么、如何测试显然是一个重要的课题，网上已经有许多文章讲述它们的区别，比如 <a href="https://www.jianshu.com/p/a40fefcadc94">这篇文章</a> ，所以我就不再赘述了。</p>
<p>而除了login页面，demo app也提供了其它不同类型的页面，比如WebView、Swipe等生活中常见的页面类型。同样，针对于此demo app，WebDriverIO提供了 <a href="https://github.com/webdriverio/appium-boilerplate">示例代码库</a>，也包括iOS和Android两个平台，里面有包含以下类型的测试示例代码：</p>
<ul>
<li>测试native app</li>
<li>测试webview</li>
<li>在手机端利用Safari/Chrome执行浏览器测试</li>
<li>利用Sauce Labs Service、BrowserStack两个云服务平台提供的真机/模拟器执行测试</li>
</ul>
<p>每一种测试类型都有对应的config文件，但此代码库用的不是mocha框架，而是jasmine框架。而且虽然它测试了两个平台，但由于只是selector不同，所以通过配置不用重复定义页面，一个页面可以被两个平台调用，感兴趣的同学可以深入学习。</p>
<p>完成后别忘了把代码推送到Github哦，方便进行下一步的CI集成。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Appium</tag>
      </tags>
  </entry>
  <entry>
    <title>AppUI自动化测试第三弹-iOS篇</title>
    <url>/AppUI-AutoTest-2/</url>
    <content><![CDATA[<p><img data-src="https://i.loli.net/2021/05/24/C63wHlmUE5o4Nh8.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>通过前两篇博客我们有了一个测试代码库，没有的话可以直接fork <a href="https://github.com/Summyj/AppUI-AutoTest">我的代码库</a> 到你的github账户，之后就可以进行CI集成啦，本来是想iOS和Android一起讲的，但篇幅太长，就分开了，多图预警。。。</p>
<h2 id="Bitrise介绍"><a href="#Bitrise介绍" class="headerlink" title="Bitrise介绍"></a>Bitrise介绍</h2><p><a href="https://www.bitrise.io/">Bitrise</a> 是一款CI工具，与同领域其它工具，比如Jenkins/GoCD/Travis CI的不同在于它是专门用来部署手机应用的，它内置了很多手机应用开发的插件，可以帮助开发团队快速搭建环境、构建部署应用，并执行测试。此外，简洁易懂的UI也是它的一大优势。</p>
<p>由于Bitrise是一个部署App的工具，所以我们需要一个App开发代码库，Bitrise提供给我们两个可以使用的代码库，把它们fork到你的github就行：<a href="https://github.com/bitrise-io/sample-apps-ios-simple-objc">iOS</a> 和 <a href="https://github.com/bitrise-io/sample-apps-android-sdk22">Android</a>。</p>
<p>由于步骤不尽相同，所以两个平台分开讲，开始之前请先注册一个Bitrise账号，然后登录，选择standard plan，你会看到如下页面：<br><img data-src="https://i.loli.net/2021/05/24/ivXJu7KHpICV6Ay.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h2 id="创建iOS应用"><a href="#创建iOS应用" class="headerlink" title="创建iOS应用"></a>创建iOS应用</h2><p>选择 add first app，会进入创建应用页面，选择自己的Bitrise账号，然后选择Private后继续：<br><img data-src="https://i.loli.net/2021/05/24/7JP2ti1xsuGfvDE.png" alt="image.png"><span class="image-caption">image.png</span><br>下一步是连接代码库，按照提示 Connect Github，连接之后你会看到自己所有的代码库：<br><img data-src="https://i.loli.net/2021/05/24/ZjReaio4EVXcyYl.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/05/24/RD9NF4ZMaQ2zwc6.png" alt="image.png"><span class="image-caption">image.png</span><br>我们选择之前fork的iOS应用代码库 <strong>sample-apps-ios-simple-objc</strong>，然后继续：<br><img data-src="https://i.loli.net/2021/05/24/835XDmsRhif7PCl.png" alt="image.png"><span class="image-caption">image.png</span><br>由于我们之后还需要Bitrise下载测试代码库，所以选择 I need to, 复制Bitrise提供给我们的SSH key添加到你的github setting里：<br><img data-src="https://i.loli.net/2021/05/24/XJkaPhegf62cK1Y.png" alt="image.png"><span class="image-caption">image.png</span><br>保存之后选择i’ve added the SSH key，下一步将部署应用的分支命名为master后继续,此时Bitrise会配置你的App(如果有报错就再次选择master分支再部署):<br><img data-src="https://i.loli.net/2021/05/26/HV53lg6SA8bmLpj.png" alt="image.png"><span class="image-caption">image.png</span><br>之后出现iOS图标，说明它被识别为一个iOS app，完成后我们选择 app-store 为导出方式：<br><img data-src="https://i.loli.net/2021/05/24/XuqvxZcNVnSl5LE.png" alt="image.png"><span class="image-caption">image.png</span><br>编辑以下设置，然后点击confirm后继续：<br><img data-src="https://i.loli.net/2021/05/24/lvsUiuCqImEkZga.png" alt="image.png"><span class="image-caption">image.png</span><br>跳过app icon和webhook步骤，点击页面右上角finish按钮完成设置：<br><img data-src="https://i.loli.net/2021/05/24/zNgWhZAep1suL8t.png" alt="image.png"><span class="image-caption">image.png</span><br>之后页面跳转到Dashboard，Bitrise会跑第一次build，在页面右侧会看到你的App：<br><img data-src="https://i.loli.net/2021/05/24/R1lQBKVOtpTN9JX.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h2 id="添加e2e-workflow"><a href="#添加e2e-workflow" class="headerlink" title="添加e2e workflow"></a>添加e2e workflow</h2><p>依次点击页面右侧App -&gt; Workflow ，进入Workflow编辑页面，点击 “+ Workflow” 新增一个名为e2e的 workflow：<br><img data-src="https://i.loli.net/2021/05/24/pDifPg2hGw9ROcl.png" alt="image.png"><span class="image-caption">image.png</span><br>然后自动进入该workflow的编辑页面，我们将在此workflow下载测试代码库并执行测试，页面左侧为该workflow的执行步骤和内容，Bitrise可能会默认预置一些步骤，点击左侧 + 号可以打开新增步骤页面，搜索你想要的步骤然后点击，它就会被添加到workflow里：<br><img data-src="https://i.loli.net/2021/05/24/N6P28sGVBMnU3T9.png" alt="image.png"><span class="image-caption">image.png</span><br>接下来请依次添加以下步骤。</p>
<h3 id="Activate-SSH-key-Git-Clone"><a href="#Activate-SSH-key-Git-Clone" class="headerlink" title="Activate SSH key&amp; Git Clone"></a>Activate SSH key&amp; Git Clone</h3><p>这两步不需要做任何改动，保持默认的配置就好，这两步通常为每个workflow最开始的两个步骤，是用SSH的方式下载主代码库，这里是指 <strong>sample-apps-ios-simple-objc</strong> 这个代码库。</p>
<h3 id="添加Simulator"><a href="#添加Simulator" class="headerlink" title="添加Simulator"></a>添加Simulator</h3><p>第三步是启动模拟器，就像在本地运行测试一样，我们需要用模拟器执行测试。由于模拟器启动很慢，所以把它放在第三步，可以利用上面的方法搜索到这一步，然后修改Device Model、OS version、Platform，这三个值分别对应测试代码库文件 ios.conf.js 里的deviceName、platformVersion、platformName，在我的代码库里它就对应下图的值:<br><img data-src="https://i.loli.net/2021/05/24/Qr9CitX4TwjNEae.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>我们先保留以上三步，点击右上角保存按钮，之后回到应用页面，选择开始build，选择e2e workflow，然后开始Build:<br><img data-src="https://i.loli.net/2021/05/24/eJPU6g3AQf52cHy.png" alt="image.png"><span class="image-caption">image.png</span><br>请确保运行成功，一般不会有问题的哈，否则自行搜索解决哦：<br><img data-src="https://i.loli.net/2021/05/24/6bvo2qVZQJiLUrM.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="克隆测试代码库"><a href="#克隆测试代码库" class="headerlink" title="克隆测试代码库"></a>克隆测试代码库</h3><p>然后我们来下载测试代码库，搜索并添加一个Script步骤，内容如下，repo地址请换成自己的哦：<br><img data-src="https://i.loli.net/2021/05/24/YJTKr2nZFby1P6j.png" alt="image.png"><span class="image-caption">image.png</span><br>然后进入上个build成功的详情页，直接点击rebuild即可：<br><img data-src="https://i.loli.net/2021/05/24/FWTqsZHCjLbR3p5.png" alt="image.png"><span class="image-caption">image.png</span><br>这里加上pwd的原因是要找到代码库在Bitrise服务器上的路径，这样就可以知道app的绝对路径了，同时也方便进行下边的步骤：<br><img data-src="https://i.loli.net/2021/05/24/mzqBDbnFk3ew2rx.png" alt="image.png"><span class="image-caption">image.png</span><br>然后需要改一下代码库里ios.conf.js的app路径，这里我的代码库也已经改好了：<br><img data-src="https://i.loli.net/2021/05/24/pFK1HIQv2aDBmiR.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="下载代码库依赖"><a href="#下载代码库依赖" class="headerlink" title="下载代码库依赖"></a>下载代码库依赖</h3><p>同样搜索并添加一个Script步骤，内容如下：<br><img data-src="https://i.loli.net/2021/05/24/HSrBmEPCRUysTuD.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="配置WebDriver-Agent"><a href="#配置WebDriver-Agent" class="headerlink" title="配置WebDriver Agent"></a>配置WebDriver Agent</h3><p>还是搜索并添加一个Script步骤，内容如下：<br><img data-src="https://i.loli.net/2021/05/24/XBCVvrxsTWOpLIl.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><p>终于到了关键的一步了，执行测试，添加Script步骤，内容如下：<br><img data-src="https://i.loli.net/2021/05/24/D1iT3QGEnmtxu4d.png" alt="image.png"><span class="image-caption">image.png</span><br>其实上边几步是可以合到一步的，但为了方便定位错误，我们分的越细越好。这次我们不直接运行rebuild，而是选择“Rebuild with remote access”，这样我们就可以通过Terminal或者Screen sharing连接到Bitrise的远程机器了，在此机器上会运行我们的workflow：<br><img data-src="https://i.loli.net/2021/05/24/HLoqAcZhWnmKfTv.png" alt="image.png"><span class="image-caption">image.png</span></p>
<ul>
<li>Screen Sharing方式<br>Mac电脑搜索Screen Sharing，然后按照上图提供的地址和用户名密码连接即可，不用保存密码，因为每次运行地址和密码信息都不一样：<br><img data-src="https://i.loli.net/2021/05/24/LkcajHwsOi2NGdJ.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/05/24/2XTuhMC4RzvL1dj.png" alt="image.png"><span class="image-caption">image.png</span><br>连接成功后，可以看到模拟器已经启动并安装好了测试app：<br><img data-src="https://i.loli.net/2021/05/24/owjWUS7AJXz2CcO.png" alt="image.png"><span class="image-caption">image.png</span></li>
<li>Terminal方式<br>按照Bitrise提供的地址和密码连接即可，但只能通过命令行访问，不能直观的看到机器：<br><img data-src="https://i.loli.net/2021/05/24/UClrYfRTsPz9pvN.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/05/24/8tuIP7OLKgi5b3R.png" alt="image.png"><span class="image-caption">image.png</span></li>
</ul>
<p>可以看到测试已经开始运行，并尝试连接模拟器：<br><img data-src="https://i.loli.net/2021/05/24/SqhAMYJP6HG91KL.png" alt="image.png"><span class="image-caption">image.png</span><br>然而，在Bitrise远程机器上启动模拟器太慢了，即使我们把初始化simulator的步骤放在第三步，但无法确定它是否成功启动，所以在执行测试时也经常连不上模拟器。只能延长等待时间或者重试次数(这里会重试前10次，每次5分钟左右)，但也还是经常连不上，然后测试就会挂掉，目前我没找到解决方式(也可能是我网络太差或者bitrise免费版会有一些限制)，这算是一个痛点了，在我之前的Build里，只有两次测试执行成功：<br><img data-src="https://i.loli.net/2021/05/24/reWRbGQHMacCt72.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="导出测试报告-部署到Bitrise"><a href="#导出测试报告-部署到Bitrise" class="headerlink" title="导出测试报告&amp;部署到Bitrise"></a>导出测试报告&amp;部署到Bitrise</h3><p>之后搜索添加test report和deploy步骤，就可以在每次运行后看到测试报告了，这里要改路径为下图：<br><img data-src="https://i.loli.net/2021/05/24/4ZJHWCGgRUzjb8m.png" alt="image.png"><span class="image-caption">image.png</span><br>这个就用系统默认的输入，不用改啥：<br><img data-src="https://i.loli.net/2021/05/24/k1DOBazSQie7v2R.png" alt="image.png"><span class="image-caption">image.png</span><br>运行后查看：<br><img data-src="https://i.loli.net/2021/05/24/RuSqzrx4bZyPcN5.png" alt="image.png"><span class="image-caption">image.png</span><br>成功：<br><img data-src="https://i.loli.net/2021/05/24/qQFKNkY5IfhjuTO.png" alt="image.png"><span class="image-caption">image.png</span><br>失败：<br><img data-src="https://i.loli.net/2021/05/24/wvBzbI3ya4tWUHQ.png" alt="image.png"><span class="image-caption">image.png</span></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Bitrise</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>浅谈自动化测试框架</title>
    <url>/AutoTest-FrameWork/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/15/yHdcTpMbsvJB2zh.jpg">


<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>去年公司有资深测试同事分享了如何搭建一个好的自动化测试框架Session，听了以后特别受启发。<br>入职以来一直都是用着项目上现成的框架使用，平时也只是写写测试代码，搬搬砖。虽然也有想过深入了解一下，但因为拖(lan)延(ai)症一直没实践<span class="emoji" alias="see_no_evil" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8">🙈</span><br>恰好最近QA小姐姐们组织了一个搭建自动化测试框架的workshop，自己走了一下流程，感触更深了，所以想结合去年的Session内容总结一下，这样以后也可以参考。</p>
<h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><p>写过自动化测试的小伙伴们一定接触过诸如Selenium/Appium/..的自动化测试工具，这类UI测试工具提供了定位、操控页面元素的功能，从而实现UI自动化。<br>这些工具也内嵌了失败重试、智能等待机制，所以它们也叫做<mark class="label default">"自动化测试框架"</mark>，但一个完善的自动化测试框架，仅仅做到这些是远远不够的，所以它们只是<strong>自动化测试框架的MVP版本</strong>。</p>
<h3 id="自动化测试框架的MVP版本"><a href="#自动化测试框架的MVP版本" class="headerlink" title="自动化测试框架的MVP版本"></a>自动化测试框架的MVP版本</h3><p>怎么理解自动化测试框架的MVP版本呢？</p>
<p>试想要生产一辆交通工具，从造轮子开始到成品需要下边几个过程，这样才能成功：</p>
<im src="https://i.loli.net/2020/05/14/sVS2y3nXflDgowB.png">

<p>如果把搭建自动化框架类比成生产交通工具的过程，那上述的Selenium/Appium/..等<mark class="label default">"自动化测试框架"</mark>相当于只是一辆自行车，离我们想要的大货车(完善的自动化测试框架)差距还比较大：</p>
<img data-src="https://i.loli.net/2020/05/14/jCBKgVplGJZkM1n.png">

<p>以Web UI自动化为例，一般来说，MVP版本的自动化测试框架结构如下：</p>
<img data-src="https://i.loli.net/2020/05/14/3iMYrD2jC8R7O5U.png" alt="题图" height="370" width="400"><span class="image-caption">题图</span>

<div class="note info"><p>基本做法是：写好一条test case, 里面定位了页面元素，定义元素行为。最后利用WebDriver 实现测试目标。</p>
</div>

<p>比如下面利用Selenium在百度搜索selenium字符串的代码：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">public void searchSelenium() { 
       System.setProperty("webdriver.gecko.driver", "drivers/geckodriver");

       WebDriver driver = new FirefoxDriver();

       driver.manage().window().maximize();
       driver.get("https://www.baidu.com/");
       driver.findElement(By.id("kw")).clear();
       driver.findElement(By.id("kw")).sendKeys("selenium");
       driver.findElement(By.id("su")).click();
       driver.quit();
   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<br>

<h3 id="自动化测试框架的完善版本"><a href="#自动化测试框架的完善版本" class="headerlink" title="自动化测试框架的完善版本"></a>自动化测试框架的完善版本</h3><br>
<br>

<p>还是以Web UI自动化为例，一般来说，相对完善的自动化测试框架结构如下：</p>
<img data-src="https://i.loli.net/2020/05/14/tTnUyI9VsHY4N1q.png">

<p>可以看到，跟MVP版本相比，相对完善的自动化测试框架结构还多了Test Suite/Middle layer等元素，下面我们来说一下这些元素指的是什么。<br><br></p>
<br>


<p><span id="inline-toc">1.</span> Test Suite</p>
<br>

<p>允许将测试代码中公用的数据比如浏览器，测试url等等提出来放在单独的文件中，便于进行测试环境转换、DDT(Data<br>Driven Testing)、KDT(Keyword Driven Testing)等Good<br>practice，TestNG等工具就可以实现这一点，还可以利用Page Object实现结构化目录。</p>
<br>
<br>

<p><span id="inline-toc">2.</span> TestCase&amp;MiddleLayer</p>
<br>

<p>好的框架也需要支持易用的Assertion、Error handling、Preposition &amp;<br>Postposition机制。还应该实现BDD(Business/Behavior Driven<br>Development)，写出更语义化的测试代码，Cucumber就是一个支持BDD的测试工具。</p>
<br>
<br>


<p><span id="inline-toc">3.</span> Element Object/Locator definition</p>
<br>

<p>测试框架应该支持多种定位页面元素的方法，比如根据元素属性(Id, CSS,<br>xPath…)定位，也有支持图像识别/像素识别来定位元素的工具，比如网易就有开发一些此类型的工具，常用于游戏测试。</p>
<br>
<br>

<p><span id="inline-toc">4.</span> Operation Driver</p>
<br>

<p>UI测试工具经常用到WebDriver来操控页面元素，所以一个好的测试框架应该提供稳定的操作WebDriver的方法，还需要兼容不同的浏览器和操作系统。并能提供开放接口，允许用户添加自定义的WebDriver操作方法。</p>
<br>
<br>

<p><span id="inline-toc">5.</span> Utilities</p>
<br>

<p>需要提供一些实用的机制和工具，比如提供日志、智能等待机制，还有对文件/数据库/网络/OS的操作，此外，还要支持模拟器和截图功能。</p>
<br>
<br>


<p><span id="inline-toc">6.</span> Assistance</p>
<br>

<p>自动化框架还需要有更多辅助功能，比如CI/CD的集成、并行机制、失败重试机制，以及输出漂亮的测试报告。</p>
<br>
<br>


<div class="note primary"><p>总的来说，一个完善的自动化测试框架应该是灵活的、稳定的，而且是容易维护的，全面考虑上边这6个元素会帮助我们达到这个目的。<br>然而，现在我们熟知的一些“自动化测试框架”比如selenium, Cucumber, TestNG等等，都只涵盖了这6大要素的部分功能。所以更多的时候，一个完善的自动化测试框架会是多个工具的集合，比如Selenium+Cucumber+GoCD, Selenium+TestNG+Jenkins等等，具体选择什么工具要看实际情况。<br>这样我们就能生产出拉风的大货车啦：</p>
</div>

<img data-src="https://i.loli.net/2020/05/14/8xZPSG624mRkAaL.png">


<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><p>设计搭建自动化测试框架是<mark class="label warning">测试架构师</mark>或者<mark class="label warning">高级测试工程师</mark>们重点关注的内容，这当然不是一件容易的事。 </p><div class="note primary"><p>首先需要收集项目自身的编程语言、平台、系统架构、预算等相关信息，然后拿着这些信息再综合考虑上边列出的6大要素进行技术选型，这需要测试架构设计者在每个要素中，都至少熟悉1-2种测试工具，有的方面还需要熟悉2-3种，然而这并非一日之功，尽管有的功能涵盖了多个要素。<br>而搭建过程中用到的构建部署工具，比如Maven/Gradle/…，也是测试架构设计者需要熟悉的。<br>所以一个测试工程师，需要在多方面有所涉猎，且熟悉多种测试工具，才可以根据项目情况设计出最适合的自动化测试框架。</p>
</div> <p></p>
<p>同时，不同的测试方式，也需要有不同的自动化测试框架。上边我们只以WebUI自动化为例，提到了常用的Selenium/Appium。那对于别的测试方式，比如性能测试而言，也有它自己的自动化测试工具。所以，学海无涯呀，我们只能苦作舟了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<p>虽然要”苦作舟”，但我们也不用太慌，正如编程语言都是共通的一样，同一领域的测试工具也都是共通的，所以只有在我们学习新领域的工具时才会”苦作舟”，熟悉了一个工具之后，再去看相似的工具，就会轻松很多，也会很容易的对比多个工具的优劣了<span class="emoji" alias="muscle" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png?v8">💪</span></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li>同事去年讲Session的PPT…</li>
</ul>
</im>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
      </tags>
  </entry>
  <entry>
    <title>AppUI自动化测试第三弹-Android篇</title>
    <url>/AppUI-AutoTest-3/</url>
    <content><![CDATA[<p><img data-src="https://i.loli.net/2021/05/25/f8GPuvCgVNoA61q.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>上篇博客我们完成了测试代码库在iOS平台的CI集成，这篇文章继续讲Android平台。没有看过前几篇的同学也不用担心，可以先fork <a href="https://github.com/Summyj/AppUI-AutoTest">我的代码库</a> 和 <a href="https://github.com/bitrise-io/sample-apps-android-sdk22">模拟的Android开发代码库</a> 到你的github账户，然后注册一个 <a href="https://www.bitrise.io/">Bitrise</a> 账号即可。</p>
<h2 id="创建Android应用"><a href="#创建Android应用" class="headerlink" title="创建Android应用"></a>创建Android应用</h2><p>刚注册Bitrise的小伙伴可以选择standard plan -&gt; add first app：<br><img data-src="https://i.loli.net/2021/05/24/ivXJu7KHpICV6Ay.png" alt="image.png"><span class="image-caption">image.png</span><br>或者回到Dashboard页面，点击Add new app，选择第一项，就会出现创建App页面：<br><img data-src="https://i.loli.net/2021/05/24/daeLy83u7s15xvJ.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/05/24/7JP2ti1xsuGfvDE.png" alt="image.png"><span class="image-caption">image.png</span><br>选择Privare后继续，然后是连接代码库，按照提示 Connect Github，连接之后你会看到自己所有的代码库：<br><img data-src="https://i.loli.net/2021/05/24/ZjReaio4EVXcyYl.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/05/24/RD9NF4ZMaQ2zwc6.png" alt="image.png"><span class="image-caption">image.png</span><br>我们选择之前fork的Android应用代码库 <strong>sample-apps-android-sdk22</strong>，然后继续：<br><img data-src="https://i.loli.net/2021/05/26/KHQy36Wuvdk9mqX.png" alt="image.png"><span class="image-caption">image.png</span><br>由于我们之后还需要Bitrise下载测试代码库，所以选择 I need to, 复制Bitrise提供给我们的SSH key添加到你的github setting里：<br><img data-src="https://i.loli.net/2021/05/26/X9xa5heLAZbzSrk.png" alt="image.png"><span class="image-caption">image.png</span><br>保存之后选择i’ve added the SSH key，下一步将部署应用的分支命名为master后继续,此时Bitrise会配置你的App(如果有报错就再次选择master分支再部署):<br><img data-src="https://i.loli.net/2021/05/26/HV53lg6SA8bmLpj.png" alt="image.png"><span class="image-caption">image.png</span><br>之后出现Android图标，说明它被识别为一个Android app，完成后我们直接点击Next&amp;Next&amp;Confirm走完这一步：<br><img data-src="https://i.loli.net/2021/05/26/v8qybjcYhpX5wFJ.png" alt="image.png"><span class="image-caption">image.png</span><br>跳过app icon和webhook步骤，点击页面右上角finish按钮完成设置：<br><img data-src="https://i.loli.net/2021/05/26/V4r95zG1pHQkDBP.png" alt="image.png"><span class="image-caption">image.png</span><br>之后页面跳转到Dashboard，Bitrise会跑第一次build，在页面右侧会看到你的App：<br><img data-src="https://i.loli.net/2021/05/26/2LIiTUCwEjbG1lu.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h2 id="添加e2e-workflow"><a href="#添加e2e-workflow" class="headerlink" title="添加e2e workflow"></a>添加e2e workflow</h2><p>依次点击页面右侧App -&gt; Workflow ，进入Workflow编辑页面，点击 “+ Workflow” 新增一个名为e2e的 workflow：<br><img data-src="https://i.loli.net/2021/05/26/UEAFWjvYlk1NMpg.png" alt="image.png"><span class="image-caption">image.png</span><br>然后自动进入该workflow的编辑页面，我们将在此workflow下载测试代码库并执行测试，页面左侧为该workflow的执行步骤和内容，Bitrise可能会默认预置一些步骤，点击左侧 + 号可以打开新增步骤页面，搜索你想要的步骤然后点击，它就会被添加到workflow里：<br><img data-src="https://i.loli.net/2021/05/24/N6P28sGVBMnU3T9.png" alt="image.png"><span class="image-caption">image.png</span><br>接下来请依次添加以下步骤。</p>
<h3 id="添加Emulator并等待启动"><a href="#添加Emulator并等待启动" class="headerlink" title="添加Emulator并等待启动"></a>添加Emulator并等待启动</h3><p>第一步是启动模拟器，由于模拟器启动很慢，所以把它放在第一步。且与iOS不同，Bitrise给Android emulator提供了等待启动的步骤，这样就不用担心模拟器连不上了。可以利用上面的方法在ALL选项里搜索到这一步，然后修改API Level, 这个值对应测试代码库文件 android.conf.js 里的platformVersion(10就是29，11就是30)：<br><img data-src="https://i.loli.net/2021/05/26/Qt6iFbkRIJjZMVq.png" alt="image.png"><span class="image-caption">image.png</span><br>这一步不需要改动：<br><img data-src="https://i.loli.net/2021/05/26/nZP1lfE2az4DyCo.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="Activate-SSH-key-Git-Clone"><a href="#Activate-SSH-key-Git-Clone" class="headerlink" title="Activate SSH key&amp; Git Clone"></a>Activate SSH key&amp; Git Clone</h3><p>这两步不需要做任何改动，保持默认的配置就好，这两步通常为每个workflow最开始的两个步骤，是用SSH的方式下载主代码库，这里是指 <strong>sample-apps-android-sdk22</strong> 这个代码库：<br><img data-src="https://i.loli.net/2021/05/26/ZWX6gSilAVazqDu.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>我们先保留以上四步，点击右上角保存按钮，之后回到应用页面，选择开始build，选择e2e workflow，然后开始Build:<br><img data-src="https://i.loli.net/2021/05/26/Tb4AgVXcCSvloQs.png" alt="image.png"><span class="image-caption">image.png</span><br>请确保运行成功，一般不会有问题的哈，否则自行搜索解决哦：<br><img data-src="https://i.loli.net/2021/05/26/XtOwQhn29dKgubN.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="克隆测试代码库"><a href="#克隆测试代码库" class="headerlink" title="克隆测试代码库"></a>克隆测试代码库</h3><p>然后我们来下载测试代码库，搜索并添加一个Script步骤，内容如下，repo地址请换成自己的哦：<br><img data-src="https://i.loli.net/2021/05/26/2iJ5YMVmqOUFKsD.png" alt="image.png"><span class="image-caption">image.png</span><br>然后进入上个build成功的详情页，直接点击rebuild即可：<br><img data-src="https://i.loli.net/2021/05/26/twh71nYu2szfMGI.png" alt="image.png"><span class="image-caption">image.png</span><br>这里加上pwd的原因是要找到代码库在Bitrise服务器上的路径，这样就可以知道app的绝对路径了，同时也方便进行下边的步骤：<br><img data-src="https://i.loli.net/2021/05/26/qgQIob1tMZDPNjx.png" alt="image.png"><span class="image-caption">image.png</span><br>然后需要改一下代码库里android.conf.js的app路径，这里我的代码库也已经改好了：<br><img data-src="https://i.loli.net/2021/05/26/Jj6OA1CUcwlz5Zo.png" alt="image.png"><span class="image-caption">image.png</span><br>与iOS不同，在Bitrise配置时，这里deviceName的值不是某个具体设备名称，比如“iPhone 11”，而是固定的“emulator”。</p>
<h3 id="下载代码库依赖"><a href="#下载代码库依赖" class="headerlink" title="下载代码库依赖"></a>下载代码库依赖</h3><p>同样搜索并添加一个Script步骤，内容如下：<br><img data-src="https://i.loli.net/2021/05/26/Va9m3KDYjM6RTv4.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><p>终于到了关键的一步了，执行测试，添加Script步骤，内容如下：<br><img data-src="https://i.loli.net/2021/05/26/NDQk2PqSUI3vceo.png" alt="image.png"><span class="image-caption">image.png</span><br>这次我们不直接运行rebuild，而是选择“Rebuild with remote access”，与iOS不同，Bitrise只给安卓提供了通过Terminal连接Bitrise的远程机器，在此机器上会运行我们的workflow：<br><img data-src="https://i.loli.net/2021/05/26/wfXjKMclDrLt1Jm.png" alt="image.png"><span class="image-caption">image.png</span><br>按照Bitrise提供的地址和密码连接即可(每次运行地址和密码都会变)，但只能通过命令行访问，不能直观的看到机器，可以看到我们的测试代码库：<br><img data-src="https://i.loli.net/2021/05/26/FfLzO8Amj7BdxoN.png" alt="image.png"><span class="image-caption">image.png</span><br>耐心等待，测试就会开始执行并且运行成功，虽然不能通过screen sharing连接服务器直观看到测试执行，但有了等待模拟器的步骤，只要测试代码没有问题，运行速度会很快且成功率高：<br><img data-src="https://i.loli.net/2021/05/26/Bk1JX5f4GgNlc38.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="导出测试报告-部署到Bitrise"><a href="#导出测试报告-部署到Bitrise" class="headerlink" title="导出测试报告&amp;部署到Bitrise"></a>导出测试报告&amp;部署到Bitrise</h3><p>之后搜索添加test report和deploy步骤，就可以在每次运行后看到测试报告了，这里要改路径为下图：<br><img data-src="https://i.loli.net/2021/05/26/qP6WtDV8L7OAIzl.png" alt="image.png"><span class="image-caption">image.png</span><br>这个就用系统默认的输入，不用改啥：<br><img data-src="https://i.loli.net/2021/05/26/u9ScPnVjtvyi57K.png" alt="image.png"><span class="image-caption">image.png</span><br>运行后查看：<br><img data-src="https://i.loli.net/2021/05/24/RuSqzrx4bZyPcN5.png" alt="image.png"><span class="image-caption">image.png</span><br>忽略这个iphone11的名字哈，不知道为啥会带上这个，本来应该是android-emulator之类的开头，不过不要在意这些细节哈哈哈，成功了就行：<br><img data-src="https://i.loli.net/2021/05/26/1scBq5ml7w4nAzO.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h2 id="结束之后"><a href="#结束之后" class="headerlink" title="结束之后"></a>结束之后</h2><p>AppUI自动化入门系列到这里就结束啦，不知不觉已经写了一万多字呢，虽然是机器写的，但是手也很酸呐哈哈哈。希望能给大家带来一些新知识和新启发，测试君冲鸭！！！</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Bitrise</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>请收下这波 BDD 安利</title>
    <url>/BDD-Introduce/</url>
    <content><![CDATA[<p>首先，听我讲一个关于王铁锤的故事。</p>
<span id="more"></span>

<h1 id="版本一"><a href="#版本一" class="headerlink" title="版本一"></a>版本一</h1><p>新的Sprint开始了，产品经理/BA 王铁锤召集全组开会<span class="emoji" alias="speech_balloon" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ac.png?v8">💬</span>。</p>
<p><strong>[王铁锤]</strong>：这个Sprint咱们有个新需求，在网站上做一个用户注册登录功能。现在我来给大家说一下UserStory和AC都有啥。(PS:不知道UserStory, AC(Acceptance Criteria)和Sprint是啥意思的，你需要看看<a href="http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-2">敏捷术语</a>)<br>20分钟后。。。<br><strong>[王铁锤]</strong>：大家有什么问题吗？<br><strong>[众组员]</strong>：没问题了<span class="emoji" alias="ok_hand" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44c.png?v8">👌</span>。<br><strong>[王铁锤]</strong>：好，散会。<br>2天后。。。<br><strong>[测试刘翠花]</strong>：咦，李狗蛋，你做的登录页面密码输入框怎么没掩码？密码错了也没个提示？！还有你赵二毛，你做的注册功能还能注册两个一样的用户名？密码长度格式也没限制？！这不符合常理吧，这界面也太丑了点<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>!<br><strong>[程序员李狗蛋]</strong>：呀，我咋把掩码忘了，错误提示没说要做呀，别着急，我再看看UserStory是咋说的，咦，上边没写<span class="emoji" alias="sweat" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f613.png?v8">😓</span>？！<br><strong>[程序员赵二毛]</strong>：唉，这种情况还真没想过，得处理一下，UserStory里也没说这种情况咋整啊，还有密码长度格式上边也没说规则。<br><strong>[刘翠花]</strong>：这问题也太多了，当时开会咋就没想到这些呢<span class="emoji" alias="confused" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f615.png?v8">😕</span>，直接按老王给的UserStory做了。不行，我们得去找他问问。<br>3分钟后。。。<br><strong>[王铁锤]</strong>：呀，这些东西我创建UserStory的时候也没想到。嗯，我得去完善完善。界面显示问题我去找设计师看看。你们等一下。<br>两周过去了。。。<br><strong>[王铁锤]</strong>：怎么样，这个功能做好了吗？客户那边等着呢<br><strong>[众组员]</strong>：不行啊老大，我们还有一堆需求和问题没搞清楚，想跟你确认呢<br><strong>[王铁锤]</strong>：这咋行呢，原计划这周就得上线呀， 唉，都有啥问题，我再看看吧<br>一个月后，经过王铁锤和众组员的数次沟通确认，功能终于做好了，比原计划推迟两周上线。。。<br><strong>[刘翠花]</strong>：唉，上线后肯定又有一堆问题，到时候背锅的就只有我了</p>
<hr>
<h1 id="版本二"><a href="#版本二" class="headerlink" title="版本二"></a>版本二</h1><p>新的Sprint开始了，产品经理/BA 王铁锤召集全组开会。</p>
<p><strong>[王铁锤]</strong>：下个Sprint咱们有个新需求，在网站上做一个用户注册登录功能。首先讲一下我和客户拟好的用户流程和场景。<br>5分钟过去了。。。<br><strong>[王铁锤]</strong>：相信大家对这个功能已经有了初步的了解，一定也有一些想法。所以在拆分具体的UserStory之前，我想先组织大家玩个小游戏。<br><strong>[李狗蛋]</strong>：玩游戏？这么嗨的吗<span class="emoji" alias="smirk" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8">😏</span>，我喜欢。怎么玩啊？<br><strong>[王铁锤]</strong>：假设你是用户，列出所有你能想象到的关于注册登录的用户行为场景。并写下这些场景中你希望的系统行为<span class="emoji" alias="sunglasses" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span>。包括但不限于我刚才讲到的场景哦，大家开始吧～<br>10分钟后。。。<br><strong>[王铁锤]</strong>：我看大家都写好了，下面咱们一条一条过，拼凑出一个正常的用户操作流程，然后把相似的场景提取出来，讨论一下哪种方案更好。首先让赵二毛给大家讲下他的场景：</p>
<ul>
<li>Step1: 进入系统首页，跳出登录注册弹窗.</li>
<li>Step2: 点击注册按钮进去注册页面。</li>
<li>Step3: 填写所有字段并点击注册。</li>
<li>Step4: 弹出注册成功页面，3秒后返回系统首页，用户状态为已登录。</li>
</ul>
<p><strong>[赵二毛]</strong>：对，这里我写的是一个注册成功的场景，当然里面还有很多小点需要确认。比如说Step1、Step2、Step4中登录注册页面,以及注册成功页面的前端显示，需要设计稿。还有Step3中的字段需要在设计稿中体现，还需要一些字段的长度格式以及必填规则。Step4中注册成功后有一个3秒的返回延迟，还有返回首页后的登录状态，都是细节问题。<br><strong>[刘翠花]</strong>：哇塞，二毛，平时看你写代码也没这么细心啊，想不到你还考虑的这么细多，真棒！<br><strong>[李狗蛋]</strong>：二毛写的确实好，基本上涵盖了整个注册流程，跟我写的有很多相似之处。下面我来说说我们的不同点，其他人也可以提出自己的看法。<br>30分钟后。。。<br><strong>[王铁锤]</strong>：好，大家已经讨论完了。对很多细节和功能已经达成了共识。当然还有一些问题我需要跟客户沟通，寻求他们的意见。很感谢大家提出的思路，很多场景我之前都没有考虑到。比如<strong>刘翠花</strong>提到的密码输入次数限制问题，狗蛋和二毛也从代码方面提供了自己的想法。我受益良多<span class="emoji" alias="clap" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8">👏</span>。对于我们在功能方面达成的共识，还有一些需要确认的问题，已经拍照留存，我之后会整理好给大家分享，散会～<br>2天后。。。<br><strong>[王铁锤]</strong>：前两天大家讨论了下注册登录模块的具体流程，其中包含要实现的功能和细节。设计图和一些遗留的问题我都确认过了，并且写好了UserStory还有AC。接下来大家对比上次会议结果一起看一下。确认大家的理解一致，没有遗漏的点。<br>20分钟后。。。<br><strong>[王铁锤]</strong>：大家有什么问题吗，我有没有漏掉什么点？<br><strong>[众组员]</strong>：没问题了<span class="emoji" alias="ok_hand" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44c.png?v8">👌</span>。<br><strong>[王铁锤]</strong>：好，看来都清楚了，散会～<br>一个月后，由于大家对登录注册功能的实现细节已经达成了一致。不仅比原计划提前一周完成，还提出了更多可以改进的功能，得到了客户的赞赏和肯定。</p>
<hr>
<h1 id="啥是BDD"><a href="#啥是BDD" class="headerlink" title="啥是BDD"></a>啥是BDD</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>相信通过上边的例子，大家心里应该知道BDD是啥意思了。</p>
<p>BDD行为驱动开发(Behaviour-Driven Development)<br>是一种软件开发流程，这里’行为’指用户行为。’开发’指整个开发团队。顾名思义，BDD要求开发团队严格按照具体的、符合现实情况的用户行为进行开发，不断减小项目组成员在业务与技术两方面的理解差异，使团队对软件应该有的行为达成一致。</p>
<h2 id="BDD与敏捷"><a href="#BDD与敏捷" class="headerlink" title="BDD与敏捷"></a>BDD与敏捷</h2><p>我们知道，<a href="http://jmyblog.top/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E6%B5%8B%E8%AF%95/">敏捷</a>是现在最流行的软件开发框架，可以快速、稳定的进行软件开发。而BDD相当于是这个框架一个强有力的插件，能够帮助我们更高效地实现敏捷开发的目标。</p>
<p>就像上边故事的两个版本，都实行了敏捷实践。但版本二中的团队同时实行了BDD，因此产生了更好的结果。</p>
<h2 id="类似定义对比"><a href="#类似定义对比" class="headerlink" title="类似定义对比"></a>类似定义对比</h2><ul>
<li>TDD: 测试驱动开发，敏捷开发的特点之一，概念上与BDD同级。但在实行过程中，团队必须在保证TDD的基础上施行BDD，否则只能是捡了芝麻丢了西瓜。</li>
<li>FDD: 功能驱动开发，是一种敏捷开发流程，概念上在BDD上级。</li>
</ul>
<h1 id="为什么要BDD"><a href="#为什么要BDD" class="headerlink" title="为什么要BDD"></a>为什么要BDD</h1><h2 id="没有BDD以前-版本一"><a href="#没有BDD以前-版本一" class="headerlink" title="没有BDD以前(版本一)"></a>没有BDD以前(版本一)</h2><p>技术人员(程序员/测试)对整个用户流程不熟悉，只分散开发具体的功能，没有产生业务价值的连通性，容易对需求理解产生歧义。<br>业务人员(产品经理/BA)对功能具体实现流程不熟悉，影响下一步需求的提出和产品交付。<br>两种角色对用户流程和业务需求的理解不一致，容易导致产品返工，而且需要浪费更多时间相互沟通。</p>
<h2 id="有了BDD以后-版本二"><a href="#有了BDD以后-版本二" class="headerlink" title="有了BDD以后(版本二)"></a>有了BDD以后(版本二)</h2><p>项目组成员对用户流程、开发顺序以及实现细节有一致的理解，可以更快速高效的交付产品。</p>
<hr>
<h1 id="怎么做BDD"><a href="#怎么做BDD" class="headerlink" title="怎么做BDD"></a>怎么做BDD</h1><p>要做好BDD，需要三步实践。</p>
<h2 id="探索：做什么"><a href="#探索：做什么" class="headerlink" title="探索：做什么"></a>探索：做什么</h2><p>第一步，开个会大家商量一下要做啥，执行者是整个团队。</p>
<p>还记得上边王铁锤让大家玩的游戏吗？其实这个游戏有个洋气的名字，叫做：<strong>Discovery Workshops</strong>。不像之前王铁锤直接拆分好UserStory告诉大家，DiscoveryWorkshops的关键在于让大家聚焦真实、具体的用户场景，一起决定业务规则和验收标准。动员大家去发现、定义系统该怎么工作。这么做的好处有：</p>
<ul>
<li>把团队不同角色对功能的理解误差暴露出来</li>
<li>BA/产品经理可以确认开发团队完全理解业务规则和细节</li>
<li>帮助BA/产品经理更好的确定UserStory的粒度</li>
<li>有了测试人员的介入，可以帮助预防一些bug的产生，而不是在产品开发完后再去找同样的bug。</li>
</ul>
<p>要做好这个Workshops，有几点很重要：</p>
<ol>
<li>在功能开发前的一两个Sprint进行。</li>
<li>从用户角度出发，关注具体、真实的业务场景。</li>
<li>总结大家对业务细节的不同看法和问题，暂时不能解答的要确认后再通知大家。</li>
</ol>
<h2 id="记录：怎么做"><a href="#记录：怎么做" class="headerlink" title="记录：怎么做"></a>记录：怎么做</h2><p>第二步，用程式化的文档把讨论结果记录下来，执行者一般为BA/产品经理。</p>
<p>在敏捷里，其实就是把讨论结果拆分成UserStory，并把验收标准写在UserStory中。然后再组织大家开个会，确认一下有没有遗漏的问题。这样做的好处有：</p>
<ul>
<li>提供一种快速的方法，再次确认大家的理解一致。</li>
<li>对UserStory的粒度和验收标准得到更多的反馈。</li>
</ul>
<h2 id="检验：做了啥"><a href="#检验：做了啥" class="headerlink" title="检验：做了啥"></a>检验：做了啥</h2><p>第三步，根据拆分好的UserStory和验收标准，把不同用户场景编写成自动化测试，执行者一般为测试人员。</p>
<p>其实对于测试人员而言，这种是理想情况，因为在实际开发过程中，可能没有足够的时间来提前写好自动化测试。但最好还是在开发结束之前写好，这样做的好处有：</p>
<blockquote>
<p>帮助团队跟踪功能完成度</p>
</blockquote>
<p>好的自动化测试应该涵盖主要业务流程和场景。所以在开发工作完成前，失败的测试可以发现bug,也可以时刻提醒团队有哪些功能还没有开发完成。就像TDD，可以帮助开发在class,method层面发现问题。</p>
<blockquote>
<p>减少测试工作量</p>
</blockquote>
<p>像所有自动化测试的优点一样，它可以大大减少手工测试的工作量，后期还可以用来做回归测试。因此测试人员会有更多时间做更有价值的事情，比如关注一些不能自动化的功能、探索性测试、准备下一个功能用户场景的自动化等等。</p>
<blockquote>
<p>系统功能维护和查询</p>
</blockquote>
<p>好的自动化测试也应该像一份业务文档。有时候我们忘记了之前某些功能的业务规则是什么，就可以通过查询关于此功能的自动化测试找到答案。或者团队需要对某个功能进行维护或重构，也可以查看自动化测试，看看它现在是怎么工作的，与它相关的功能还有哪些，以确保不会影响别的功能。</p>
<hr>
<h1 id="对BDD的常见误解"><a href="#对BDD的常见误解" class="headerlink" title="对BDD的常见误解"></a>对BDD的常见误解</h1><h2 id="不需要做Discovery-Workshops"><a href="#不需要做Discovery-Workshops" class="headerlink" title="不需要做Discovery Workshops"></a>不需要做Discovery Workshops</h2><p>如果没有一个大家一起探索功能的过程， 那就不叫BDD了。就像故事的版本一，所有的User Story都由一个人(BA/产品经理)发现并编写，这就违背了BDD的灵魂：共享理解。</p>
<h2 id="三步实践的顺序可以调换"><a href="#三步实践的顺序可以调换" class="headerlink" title="三步实践的顺序可以调换"></a>三步实践的顺序可以调换</h2><p>如果没做Discovery Workshops，那直接拆分UserStory就是在浪费时间。如果没有拆分好UserStory，确认好验收标准，也就不能编写自动化测试了。所以，这三部实践必须按顺序做，否则不会达到我们想要的结果。</p>
<h2 id="代码写完后再写自动化测试"><a href="#代码写完后再写自动化测试" class="headerlink" title="代码写完后再写自动化测试"></a>代码写完后再写自动化测试</h2><p>其实现在大多数情况，都是等代码写完之后再进行自动化，这当然很合理。但这样也就不是BDD了。</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul>
<li><a href="https://cucumber.io/docs/bdd/myths/" title="Myths about BDD">Myths about BDD</a></li>
<li><a href="https://cucumber.io/docs/guides/bdd-tutorial/" title="BDD Tutorial">BDD Tutorial</a></li>
<li><a href="https://cucumber.io/docs/bdd/" title="Behaviour-Driven Development">Behaviour-Driven Development</a></li>
<li><a href="https://www.bylinzi.com/2015/06/04/when-we-talk-about-bdd/">说起BDD，你会想到什么？</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>BDD</tag>
        <tag>敏捷</tag>
        <tag>王铁锤</tag>
      </tags>
  </entry>
  <entry>
    <title>AppUI自动化测试第一弹</title>
    <url>/AppUI-AutoTest/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/05/19/AwIHB8nugEVPGRz.png">

<h2 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h2><p>博主之前有文章介绍了<a href="https://jmyblog.top/WebUI-AutoTest-Demo-1/">WebUI自动化</a>，但相较于Web端，App的使用场景更多。所以博主又开发了系列课程，共4篇博客，带大家从0到1开始简单的AppUI自动化测试，并且将测试代码集成到CI，难度为入门级别，包含iOS和Android两个平台，内容详尽，包教包会哦(是和之前WebUI自动化博文一样，看也能看懂的程度哈哈哈哈)，本篇主要带大家配置环境，然后创建测试项目。</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p><span id="inline-toc">1.</span> 首先，你需要有一个IDE，推荐使用<a href="https://code.visualstudio.com/download">VS Code</a>。<br><span id="inline-toc">2.</span> <a href="https://developer.apple.com/download/more/">下载安装</a> Xcode(12.0.1)和Xcode command line tool(12.2 beta2)，直接下载后按照提示安装即可，这两个工具是为了iOS平台的自动化。安装可能需要一些时间，可以同时进行下边的步骤。<br><span id="inline-toc">3.</span> 下载 <a href="https://developer.android.com/studio">Android Studio</a> ，这是一个开发App的IDE，但我们不用它写代码，只是用它里边的一个工具，是为了Android平台的自动化。下载后打开以下设置确保sdk location正确：<br><img data-src="https://i.loli.net/2021/05/20/2eIfnzWbQY4VsNP.png" alt="sdk location"><span class="image-caption">sdk location</span><br><span id="inline-toc">4.</span> 使用命令下载homebrew，这是一个下载工具，可以帮助下载别的依赖：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>然后执行 <mark class="label info">export HOMEBREW_NO_AUTO_UPDATE=true</mark> ，这样就不会每次用homebrew下载东西的时候它都自动更新了，最后执行 <strong>brew -v</strong> 检查你是否安装成功。<br><span id="inline-toc">5.</span> 使用brew下载node：<strong>brew install node</strong><br><span id="inline-toc">6.</span> 使用brew下载jdk，依次执行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">brew tap AdoptOpenJDK/openjdk
brew cask install adoptopenjdk11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p><span id="inline-toc">7.</span> 使用brew下载carthage：<strong>brew install carthage</strong><br><span id="inline-toc">8.</span> 下载 <a href="https://github.com/appium/appium-desktop/releases/tag/v1.20.2">Appium desktop</a><br><span id="inline-toc">9.</span> 下载 Appium-Doctor：<strong>npm install -g appium-doctor</strong><br><span id="inline-toc">10.</span> 所有依赖都已经下载完啦，然后我们来设置环境变量，打开你本地的 .bash_profile 或者 .zshrc 文件，没有就新建一个，之后输入下边的设置，直接粘贴改动即可：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">export ANDROID_HOME=path/to/your/Android sdk (eg:/Users/usr/Library/Android/sdk)
export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk
export PATH=~/bin:$PATH:/usr/local/bin:$ANDROID_HOME/platform-tools/:$JAVA_HOME/bin
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/platform-tools
AAPT_HOME=/path/to/your Android sdk build-tools (eg:/Users/usr/Library/Android/sdk/build-tools/28.0，这里的28.0是我本地的版本，你需要打开对应目录查看自己的版本然后修改。)
export AAPT_HOME
export PATH=$PATH:$AAPT_HOME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>保存后执行 <strong>source .bash_profile</strong> 或者 <strong>source .zshrc</strong> 使配置生效。<br><span id="inline-toc">11.</span> 最后执行 <strong>appium-doctor</strong> 命令查看你的环境是否已经准备完成，necessary的部分全部打绿勾就可以啦，如果上边的部分都做完了，应该是没有 ❌ 的，否则就要看对应的报错然后自行搜索解决哦：<br><img data-src="https://i.loli.net/2021/05/20/DL9UPqaNYrgnGsQ.png" alt="appium-doctor.png"><span class="image-caption">appium-doctor.png</span></p>
<h2 id="创建测试项目"><a href="#创建测试项目" class="headerlink" title="创建测试项目"></a>创建测试项目</h2><p>环境准备好了，就可以着手开始创建测试项目了，这里我们使用 <a href="https://webdriver.io/docs/what-is-webdriverio">WebdriverIO</a> 来帮助我们初始化一个可以进行App自动化测试的项目，首先新增一个文件夹，之后进入该文件夹依次执行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm init –y //在文件夹里生成一个package.json文件，记得之前WebdriverIO会默认生成的，后来好像没了，就自己手动添加一个
npm install --save-dev @wdio/cli //下载帮助我们初始化项目的wdio工具<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后执行 <strong>npx wdio config</strong> 进入项目的初始化步骤，之后该程序会让我们选择各种自动化测试的工具和规范，比如选择测试框架、PageObject、测试报告类型、测试服务端等等，非常全面。这里我们按下边的设置来初始化我们的项目(上下键切换选项，空格键选中/取消选中选项，enter键选择)：</p>
<p><img data-src="https://i.loli.net/2021/05/20/oJhBqNp4asPAljC.png" alt="config.png"><span class="image-caption">config.png</span></p>
<p>如果把一个 <a href="https://jmyblog.top/AutoTest-FrameWork/">自动化测试框架</a> 比做车辆，那WebdriverIO就像是一个造车工厂，用各种不同的零件构造出各式各样的自动化测试框架。<br>完成后的项目结构应该如下图：<br><img data-src="https://i.loli.net/2021/05/20/p8ZGHsWCD5nPjbS.png" alt="project.png"><span class="image-caption">project.png</span><br>其中有默认的测试代码示例，相关依赖也已经写入package.json里。</p>
<div class="note info"><p>观察示例代码，不难发现它使用的语言是javascript；采用pageobject模型，有示例的公共页面page.js、登陆页面login.page.js，login页面中还给出了selector和function的示例定义方法，所有页面都放在pageobjects文件夹中；一般我们会把所有页面的公共方法放在page.js；specs文件夹里有一个示例的e2e测试文件，在此文件中会引入各个页面并使用其方法编写测试步骤，describe/it/await等都是mocha框架的关键字。</p>
</div>

<p>我们需要再做一些改动使项目结构更加标准，在根目录新增app和config文件夹，然后把wdio.conf.js文件放入config文件夹中，app文件夹将用来存放测试app，改动之后的项目结构：</p>
<img data-src="https://i.loli.net/2021/05/20/T2DvQJGWrgsYqlH.png" width="200" height="280">]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>WebdriverIO</tag>
      </tags>
  </entry>
  <entry>
    <title>升级博客，我太难了</title>
    <url>/BlogUpdateNote/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2019/12/20/ONr3WMz74Rq5mBQ.png" alt="题图"><span class="image-caption">题图</span>
用Hexo和Next主题搭建博客已经两年多了，前段时间浏览一些其他小伙伴的博客，发现页面比我的好看许多。很多插件也都不适应了，遂更新一波。

<h1 id="咋升级"><a href="#咋升级" class="headerlink" title="咋升级"></a>咋升级</h1><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>首先，来想一想都要更新什么。<br>第一个肯定是Hexo了。其次就是主题，我用的是Next。由于之前不仅更改了主题配置，还有一些插件和自定义配置改了源文件。最致命的是我已经忘记在哪改，改了啥了。所以：</p>
<div class="note warning"><p>升级之前，先把博客备份一下，这样即使更新过程中出了问题，也不用怕。</p></div>

<h2 id="升级Hexo"><a href="#升级Hexo" class="headerlink" title="升级Hexo"></a>升级Hexo</h2><p>博客根目录的package.json文件里，列出了hexo和一些依赖的版本(这是我已经升级过的)：</p>
<pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">{</span>
  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"hexo-site"</span><span class="token punctuation">,</span>
  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.0.0"</span><span class="token punctuation">,</span>
  <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">"hexo"</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"4.0.0"</span> ##当前Hexo版本
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">"dependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span> ##各种插件版本
    <span class="token property">"hexo"</span><span class="token operator">:</span> <span class="token string">"^4.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-algolia"</span><span class="token operator">:</span> <span class="token string">"^1.3.1"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-deployer-git"</span><span class="token operator">:</span> <span class="token string">"^2.1.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-filter-emoji"</span><span class="token operator">:</span> <span class="token string">"^2.0.2"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-archive"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-baidu-sitemap"</span><span class="token operator">:</span> <span class="token string">"^0.1.6"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-category"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-feed"</span><span class="token operator">:</span> <span class="token string">"^2.1.1"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-index"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-searchdb"</span><span class="token operator">:</span> <span class="token string">"^1.2.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-sitemap"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-generator-tag"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-helper-live2d"</span><span class="token operator">:</span> <span class="token string">"^3.1.1"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-leancloud-counter-security"</span><span class="token operator">:</span> <span class="token string">"^1.4.1"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-next-share"</span><span class="token operator">:</span> <span class="token string">"github:theme-next/hexo-next-share"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-renderer-ejs"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-renderer-marked"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-renderer-stylus"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-server"</span><span class="token operator">:</span> <span class="token string">"^1.0.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-symbols-count-time"</span><span class="token operator">:</span> <span class="token string">"^0.7.0"</span><span class="token punctuation">,</span>
    <span class="token property">"hexo-wordcount"</span><span class="token operator">:</span> <span class="token string">"^6.0.1"</span><span class="token punctuation">,</span>
    <span class="token property">"live2d-widget-model-hijiki"</span><span class="token operator">:</span> <span class="token string">"^1.0.5"</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>打开博客根目录，输入命令：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm outdated<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就会看到有哪些依赖和插件需要更新：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">Package              Current  Wanted  Latest  Location
hexo-filter-emoji      2.0.2   2.1.0   2.1.0  hexo-site
hexo-generator-feed    2.1.1   2.2.0   2.2.0  hexo-site
hexo-next-share        1.0.0     git     git  hexo-site<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>修改package.json中对应条目的版本到最新版，比如将   “hexo-filter-emoji”: “^2.0.2” 改成：   “hexo-filter-emoji”: “^2.1.0”<br>然后保存修改，再输入命令保存更新并下载：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm install --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>之后运行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">hexo --version<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>就可以看到当前hexo的版本已经到最新啦<span class="emoji" alias="v" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">✌</span></p>
<h2 id="升级Next"><a href="#升级Next" class="headerlink" title="升级Next"></a>升级Next</h2><p>之前Next的版本是<strong>v5.x</strong>, 而搜了下最新版已经到<strong>v7.x</strong>了。。。不过不慌，还是慢慢来<span class="emoji" alias="sunglasses" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p>
<h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><blockquote>
<p>为了避免踩坑，先看<a href="https://github.com/theme-next/hexo-theme-next">官方文档</a>肯定是个明智的选择。</p>
</blockquote>
<p>跟随大佬的<a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/UPDATE-FROM-5.1.X.md">指示</a>，Next主题v5.x之后更换了代码库。之前是原作者 iissnan’s 的<a href="https://github.com/iissnan/hexo-theme-next">个人仓库</a>，由于Next比较火，后来就成立了一个专门维护它的<a href="https://github.com/theme-next">组织</a>。是一个很大的进步了，大佬们真棒。</p>
<p>代码库换了，那就不能用Git常规操作pull代码了。文档里给的建议是先不改动原有主题文件夹，将主题最新版本代码作为 <mark class="label info">next-reloaded</mark> 单独克隆到themes/下边。在博客配置文件中，把主题设置为<mark class="label info">next-reloaded</mark> 。然后就可以随时切换两个版本。</p>
<p>但我不是要切换呀，我是要更新啊，所以说之前所有的配置都得我自己手动去加去改了<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span> 可问题是我完全不记得自己都做了啥，万一改坏了怎么办<span class="emoji" alias="scream" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8">😱</span>于是Google一下，看看其他小伙伴有什么更好的操作，结果并没有发现更简单的方法，只能手动改了。</p>
<h3 id="更改配置文件完成基础设置"><a href="#更改配置文件完成基础设置" class="headerlink" title="更改配置文件完成基础设置"></a>更改配置文件完成基础设置</h3><p>新版本的配置文件里，将之前许多格式做了改动，所以要按照新的格式来。<br>对比V5.x版本，新的Next主题将之前许多个性化的设置全都加到了配置文件里，只需打开开关即可，很好用。。<br>这样改完之后，博客基本上与之前一致了。</p>
<h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h3><h4 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h4><p>之前一直用的来必力，加载速度还可以。而且有评论时也会给我发邮件。直接在主题配置文件搜索“# LiveRe comments system”然后加上id就好了。</p>
<h4 id="文章浏览次数"><a href="#文章浏览次数" class="headerlink" title="文章浏览次数"></a>文章浏览次数</h4><p>这个以前用的是leancloud，也只需要加上id就好，不过这次加上之后并没有显示效果，而且console log报错：<br><img data-src="https://i.loli.net/2019/12/03/prXyGdDzATYfIe5.png" alt="error"><span class="image-caption">error</span><br>不知道怎么解决，准备在github提issue，所以先弃用了。</p>
<h4 id="Daovoice在线联系"><a href="#Daovoice在线联系" class="headerlink" title="Daovoice在线联系"></a>Daovoice在线联系</h4><p>有很多小伙伴时通过Daovoice直接联系我的，这个也可以关注微信公众号接收消息。然而这次加上之后，导致博客页面空白，直接访问不了，console log也报错：<br><img data-src="https://i.loli.net/2019/12/03/Hzag9KbwrZxIoRv.png" alt="error"><span class="image-caption">error</span><br>开始没定位到是这个的问题，找了好久。。。在网上搜也没找到解决办法，反正博客也有评论系统可以联系小伙伴，遂先弃用。</p>
<h4 id="博客宠物"><a href="#博客宠物" class="headerlink" title="博客宠物"></a>博客宠物</h4><p>就是右下角萌萌的小黑啦。<br>之前也已经下载 “hexo-helper-live2d” 和 “live2d-widget-model-hijiki”这两个依赖，在图中路径加上标记：<br><img data-src="https://i.loli.net/2019/12/03/McVxzk9ivZfWGyX.png" alt="config"><span class="image-caption">config</span><br>然后在博客(非主题)配置文件加上下面的配置：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">#pet
live2d:
  enable: true
  scriptFrom: local
  pluginRootPath: live2dw/
  pluginJsPath: lib/
  pluginModelPath: assets/
  tagMode: true
  debug: false
  model:
    use: live2d-widget-model-hijiki ## 宠物依赖包的名字
  display:
    position: right ## 出现位置
    width: 150
    height: 300
  mobile:
    show: true<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>之前小黑猫没显示，就是因为没有下载对应的宠物依赖包。所以要仔细看 live2d 的 README 呀。</p>
<h4 id="文章分享"><a href="#文章分享" class="headerlink" title="文章分享"></a>文章分享</h4><p>新加入了分享文章的插件AddThis, 挺好用的。按照<a href="https://www.addthis.com/">这里的说明</a>配置就好了。然后把id加在配置文件里。</p>
<h4 id="网站底部运行时间"><a href="#网站底部运行时间" class="headerlink" title="网站底部运行时间"></a>网站底部运行时间</h4><p>个人认为加上网站的运行时间还是很有意义的，看着博客已经运行这么多天，有种自豪感嘿嘿。<br>参考<a href="https://ldgyyf.cn/2019/05/15/Hexo/%E4%B8%8D%E8%92%9C%E5%AD%90%E8%AE%BF%E5%AE%A2%E4%BA%BA%E6%95%B0%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%8D%9A%E5%AE%A2%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E6%98%BE%E7%A4%BA/">这篇文章</a>完成的。<br><img data-src="https://i.loli.net/2021/04/28/rjxPnYqmUCkwAv7.png"></p>
<h4 id="酷炫标签云"><a href="#酷炫标签云" class="headerlink" title="酷炫标签云"></a>酷炫标签云</h4><p>根据插件<a href="https://github.com/MikeCoder/hexo-tag-cloud/blob/master/README.ZH.md">github说明</a>配置就好了。<br>下载：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm install hexo-tag-cloud<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>之后操作：</p>
<img data-src="https://i.loli.net/2021/04/28/ZJfLhzbVkKuMnqa.png">

 <pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> site<span class="token punctuation">.</span>tags<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">%</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span> src<span class="token operator">=</span><span class="token string">"{{ url_for('/js/tagcloud.js') }}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> charset<span class="token operator">=</span><span class="token string">"utf-8"</span> src<span class="token operator">=</span><span class="token string">"{{ url_for('/js/tagcanvas.js') }}"</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"widget-wrap"</span><span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>h3 <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"widget-title"</span><span class="token operator">&gt;</span>Tag Cloud<span class="token operator">&lt;</span><span class="token operator">/</span>h3<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"myCanvasContainer"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"widget tagcloud"</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>canvas width<span class="token operator">=</span><span class="token string">"250"</span> height<span class="token operator">=</span><span class="token string">"250"</span> id<span class="token operator">=</span><span class="token string">"resCanvas"</span> style<span class="token operator">=</span><span class="token string">"width:100%"</span><span class="token operator">&gt;</span>
            <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token function">list_tags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>canvas<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h4><p>给博客加上一个背景图片。<br>网上很多教程都是在_custom.styl文件设置的，但新版本已经没有这个文件了，后来看了<a href="https://github.com/theme-next/hexo-theme-next/issues/1217">更新说明</a>，里面有提到怎么把旧版本的所有自定义设置迁移到新版本，所以跟着人家说的设置就好了。<br>先在博客根目录下的Source文件夹里新建<mark class="label info">_data</mark>文件夹，然后再创建<mark class="label info">styles.styl</mark>文件，添加内容：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">body {
  background:url(你想加的背景图片url);
  background-attachment: fixed; //固定图片位置
  opacity: 0.9; //透明度设置
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>之后在博客配置文件搜索关键字<mark class="label info">custom_file_path</mark>去掉 style 的注释就好啦。</p>
<h4 id="侧边栏和首页文章圆角显示"><a href="#侧边栏和首页文章圆角显示" class="headerlink" title="侧边栏和首页文章圆角显示"></a>侧边栏和首页文章圆角显示</h4><div class="note info"><p>“在大部分人的审美中，有弧度的圆角总是比没弧度的直角好看许多”</p>
</div>

<p>打开themes/hexo-theme-next/source/css/_variables/对应的scheme.styl文件，作如下修改：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">// 修改主题页面布局为圆角
$border-radius-inner            = 15px 15px 15px 15px;
$border-radius                  = 15px;

// 阅读全文按钮为圆角
$btn-default-radius           = 16px
$btn-default-bg               = white
$btn-default-color            = $text-color
$btn-default-border-color     = $text-color
$btn-default-hover-color      = white
$btn-default-hover-bg         = $black-deep<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="友情链接页面"><a href="#友情链接页面" class="headerlink" title="友情链接页面"></a>友情链接页面</h4><p>参照 <a href="https://blog.guanqr.com/study/blog/hexo-theme-next-customization/#%E6%B7%BB%E5%8A%A0%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5%E9%A1%B5%E9%9D%A2">这篇文章</a>设置的。</p>
<p>在 /themes/next/layout/ 目录下新建一个 links.swig 文件，内容和之前一样。<br><img data-src="https://i.loli.net/2021/04/28/a2fDPAzZm7tFpes.png"><br><img data-src="https://i.loli.net/2021/04/28/HolOS3LvVzQ19ca.png"></p>
<h4 id="改了下button的样式"><a href="#改了下button的样式" class="headerlink" title="改了下button的样式"></a>改了下button的样式</h4><img data-src="https://i.loli.net/2019/12/20/YbyF2TEIoC6t187.png" alt="button css"><span class="image-caption">button css</span>
<img data-src="https://i.loli.net/2019/12/20/Kvh4otZz852yPWx.png" alt="button css"><span class="image-caption">button css</span>

<h4 id="站点概览加了个音乐链接"><a href="#站点概览加了个音乐链接" class="headerlink" title="站点概览加了个音乐链接"></a>站点概览加了个音乐链接</h4><p>Path: <mark class="label info">themes/next/layout/_partials/sidebar/site-overview.swig</mark></p>
<h4 id="右上角站点背景改颜色"><a href="#右上角站点背景改颜色" class="headerlink" title="右上角站点背景改颜色"></a>右上角站点背景改颜色</h4><p>Path: <mark class="label info">themes/next/source/css/_schemes/Pisces/_header.styl</mark><br>颜色可以自己改</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">.site-meta {
  background-image: linear-gradient(to right, #db7093, #20B2AA, #4169E1);
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>还需要改一下padding值：<br><img data-src="https://i.loli.net/2021/04/28/icDvnY3fIPuWZAQ.png"></p>
<p>手机端样式优化：<br><img data-src="https://i.loli.net/2021/04/28/7ozZp239LEPDhW6.png"><br><img data-src="https://i.loli.net/2021/04/28/zZTBuPS6Hxt3AlF.png"><br><img data-src="https://i.loli.net/2021/04/28/JZWvNnXgEe9YTOV.png"></p>
<h4 id="网站底部颜色修改"><a href="#网站底部颜色修改" class="headerlink" title="网站底部颜色修改"></a>网站底部颜色修改</h4><img data-src="https://i.loli.net/2021/04/28/xv8WgPJUNjnb1uC.png">
<img data-src="https://i.loli.net/2021/04/28/YnCLeHo73NMJ8gr.png">

<h4 id="修改主题页面宽度"><a href="#修改主题页面宽度" class="headerlink" title="修改主题页面宽度"></a>修改主题页面宽度</h4><p>路径：next/source/css/_schemes/Gemini/index.styl</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">//page width start
header{ width: 70% !important; }
header.post-header {
  width: auto !important;
}
.container .main-inner { width: 70%; }
.content-wrap { width: calc(100% - 260px); }

.header {
  +tablet() {
    width: auto !important;
  }
  +mobile() {
    width: auto !important;
  }
}

.container .main-inner {
  +tablet() {
    width: auto !important;
  }
  +mobile() {
    width: auto !important;
  }
}

.content-wrap {
  +tablet() {
    width: 100% !important;
  }
  +mobile() {
    width: 100% !important;
  }
}
//page width end<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<h1 id="后续的更新"><a href="#后续的更新" class="headerlink" title="后续的更新"></a>后续的更新</h1><p>以后的更新应该就能用Git进行操作啦，毕竟换库太可怕了。</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul>
<li><a href="https://tommy.net.cn/2018/02/26/upgrade-hexo-to-v3-5-0/">将 Hexo 升级到 v3.5.0</a></li>
<li><a href="https://www.jianshu.com/p/e211e9119522">Hexo NexT 6升级笔记</a></li>
<li><a href="https://vic.kim/2019/05/23/Hexo%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E6%A0%87%E7%AD%BE%E4%BA%91%E5%8F%8A%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA/">Hexo博客建立标签云及效果展示</a></li>
<li><a href="http://eternalzttz.com/hexo-next.html">hexo next主题优化，打造个人精致网站</a></li>
<li><a href="https://blog.guanqr.com/study/blog/hexo-theme-next-customization/">Hexo-NexT 主题个性优化</a></li>
</ul>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>升级博客</tag>
      </tags>
  </entry>
  <entry>
    <title>站点的SEO优化</title>
    <url>/BlogSEO/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/04/23/MgrbW6S4h9tI1yf.png" width="600" height="400">

<p>虽然博客一直都有做SEO优化，但经常忘记细节，所以需要写篇博客记录一下，以后可以温故知新。</p>
<h2 id="百度SEO"><a href="#百度SEO" class="headerlink" title="百度SEO"></a>百度SEO</h2><h3 id="站点管理平台"><a href="#站点管理平台" class="headerlink" title="站点管理平台"></a>站点管理平台</h3><p>登录<a href="https://ziyuan.baidu.com/linksubmit/index">百度站点管理平台</a>添加站点域名，然后验证站点。<br>验证站点有几种方式，包括下载文件验证，CNAME验证等，我做了CNAME验证：<br><img data-src="https://i.loli.net/2020/04/23/CPt9byQOAZ8fDBV.png">验证之后，就可以通过百度站点管理平台管理自己的网站了：<br><img data-src="https://i.loli.net/2020/04/23/krGdctXzCf7hjxM.png"></p>
<h3 id="博客内容推送"><a href="#博客内容推送" class="headerlink" title="博客内容推送"></a>博客内容推送</h3><div class="note warning"><p>由于Github对百度爬虫进行了屏蔽，因此百度是爬取不到Github上的页面的，如果你把网站也部署到了Coding上，那百度就可以抓取到。所以看下面的内容之前，需要确保网站部署到了coding。</p>
</div>
<p>在站点管理平台可以选择博客内容推送方式，自动和手动。自动推送有三种，我同时做了sitemap和主动推送(实时)两种方式。<br><span id="inline-toc">1.</span> Sitemap推送方式</p>
<blockquote>
<p>站点地图即sitemap，是一个页面，上面放置了网站上需要搜索引擎抓取的所有页面的链接。站点地图可以告诉搜索引擎网站上有哪些可供抓取的网页，以便搜索引擎可以更加智能地抓取网站。</p>
</blockquote>
<p>安装百度站点地图生成插件：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm install hexo-generator-baidu-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在博客根目录config文件添加配置：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">baidusitemap:
  path: baidusitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后执行<mark class="label info">hexo g -d</mark>，public目录里就会生成baidusitemap.xml文件，这就是生成的站点地图。里面包含了网站上所有页面的链接，搜索引擎通过这个文件来抓取网站页面。同时检查线上是否能打开，这里是我的<a href="https://jmyblog.top/baidusitemap.xml">baidusitemap.xml文件</a>。<br>然后提交线上链接到站点管理平台：<br><img data-src="https://i.loli.net/2020/04/23/DwL9Xf8JmRWVoF6.png">显示正常状态之后，Sitemap推送方式就安排上了。<br><span id="inline-toc">2.</span> 主动推送(实时)方式<br>主动推送最为快速的提交方式，是被百度收录最快的推送方式。通过安装插件实现：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm install hexo-baidu-url-submit --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>安装结束后在博客根目录config文件添加配置：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">baidu_url_submit:
  count: 5 				     ## 提交最新的五个链接
  host: www.93bok.com 	     ## 百度站长平台中注册的域名
  token: xxx	             ## 准入秘钥
  path: baidu_urls.txt 		 ## 文本文档的地址， 新链接会保存在此文本文档里<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>一定要确保_config.yml文件中url的值和百度站长平台注册的域名相同，我的全都是<a href="https://jmyblog.top/">https://jmyblog.top</a><br>然后在config文件远程部署配置部分，加上：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">-  type: baidu_url_submitter	<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><img data-src="https://i.loli.net/2021/06/03/iftVTs69SjhUZlc.png" alt="image.png"><span class="image-caption">image.png</span><br>然后执行<mark class="label info">hexo g -d</mark>，就可以实现每次部署自动推送文章啦：<br><img data-src="https://i.loli.net/2020/04/23/Z2LcdRlzXjutg4h.png" width="400" height="200"></p>
<div class="note info"><p>推送原理：<br>新链接的产生， hexo generate 会产生一个文本文件，里面包含最新的链接<br>新链接的提交， hexo deploy 会从上述文件中读取链接，提交至百度搜索引擎</p>
</div>

<h3 id="收录验证"><a href="#收录验证" class="headerlink" title="收录验证"></a>收录验证</h3><p>输入<mark class="label success">site: 域名</mark>，如果能在搜索结果中看到你的网站内容，就说明百度收录成功啦：<br><img data-src="https://i.loli.net/2020/04/23/kpSBwdDFtXmcbNJ.png"></p>
<h2 id="Google-SEO"><a href="#Google-SEO" class="headerlink" title="Google SEO"></a>Google SEO</h2><h3 id="站点管理平台-1"><a href="#站点管理平台-1" class="headerlink" title="站点管理平台"></a>站点管理平台</h3><p>和百度一样，谷歌也有 <a href="https://search.google.com/search-console/sitemaps">站点管理平台</a> (没有梯子请自备)，登录google账号之后同样添加站点域名，然后验证站点。<br>站点验证也有几种方式，下载文件验证，CNAME认证等等。由于我的CNAME认证失败，所以选择了下载文件验证，放在主题source文件夹即可，放在根目录应该也是可以的：<br><img data-src="https://i.loli.net/2020/04/23/lVcSnUo2JhNYXgI.png" width="420" height="500"><br>然后执行然后执行<mark class="label info">hexo g -d</mark>将新添加的文件推送到线上，点击验证，就可以通过谷歌站点管理平台管理自己的网站了：<br><img data-src="https://i.loli.net/2020/04/23/bOoYU7w5SvIzZj9.png"></p>
<h3 id="博客内容推送-1"><a href="#博客内容推送-1" class="headerlink" title="博客内容推送"></a>博客内容推送</h3><p>目前只做了sitemap推送方式，网上也大多是这种方式，不知道有没有其它方法。<br>安装谷歌站点地图生成插件：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm install hexo-generator-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>在博客根目录config文件添加配置：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">sitemap:
  path: sitemap.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>然后执行<mark class="label info">hexo g -d</mark>，public目录里就会生成sitemap.xml文件，这里是我的<a href="https://jmyblog.top/sitemap.xml">sitemap.xml文件</a>。<br>然后提交线上链接到谷歌站点管理平台：<br><img data-src="https://i.loli.net/2020/04/23/W4Ud5el38Y7pXt2.png">显示Success之后，Sitemap推送方式就安排上了.</p>
<h3 id="收录验证-1"><a href="#收录验证-1" class="headerlink" title="收录验证"></a>收录验证</h3><p>同样输入<mark class="label success">site: 域名</mark>，如果能在搜索结果中看到你的网站内容，就说明谷歌收录成功啦：<br><img data-src="https://i.loli.net/2020/04/23/4GxXKmyO1bAc7PN.png"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://www.93bok.com/Hexo%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E5%92%8CGoogle%E6%94%B6%E5%BD%95%E7%AB%99%E7%82%B9/">Hexo提交百度和Google收录站点</a></p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>SEO</tag>
      </tags>
  </entry>
  <entry>
    <title>BugBash知多少</title>
    <url>/BugBash/</url>
    <content><![CDATA[<p><img data-src="https://i.loli.net/2020/04/22/yAYns8QTWjpUgi7.jpg" alt="bugbash.jpeg"><span class="image-caption">bugbash.jpeg</span></p>
<h2 id="啥是BugBash"><a href="#啥是BugBash" class="headerlink" title="啥是BugBash"></a>啥是BugBash</h2><p>其实说白了，BugBash就是大家来找茬的过程，找谁的茬呢，当然是要上线的新功能。</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">时间：产品上线前一两周，测试结束之后。
地点：最好找个会议室，线上也行
人物：参与产品开发的所有人，主要包括开发，测试，产品经理，客户，相关Team人员
事件：大家一起找bug<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>所有比较重要的功能或者改动比较大的功能都应该有Bug Bash(除了一些非常小的功能)。Bug Bash发现的不一定只是Bug，有时也可以提出对某些功能的改进建议。</p>
<h2 id="如何做好一次BugBash"><a href="#如何做好一次BugBash" class="headerlink" title="如何做好一次BugBash"></a>如何做好一次BugBash</h2><h3 id="在BugBash之前"><a href="#在BugBash之前" class="headerlink" title="在BugBash之前"></a>在BugBash之前</h3><ul>
<li>确定好每次Bug Bash的Owner。</li>
<li>Owner需要了解这个功能的业务需求并将其整理到Bug Bash文档中 。</li>
<li>BugBash文档的内容应当包含：被测功能简单介绍、主要测试场景及其checkpoints、测试数据、测试任务分配、结果讨论。</li>
<li>Owner在书写完Bug Bash文档之后，可以将内容发送给团队成员一起查看是否有需要补充其他内容。</li>
<li>Owner需要提前收集使用产品的用户设备信息，用使用率较高的设备/浏览器/终端来做BugBash。</li>
</ul>
<h3 id="在BugBash会议中"><a href="#在BugBash会议中" class="headerlink" title="在BugBash会议中"></a>在BugBash会议中</h3><ul>
<li>Owner可以把Bug Bash会议时间控制在1-1.5h之内，用30-50min的时间进行探索性测试，剩余的时间讨论发现的问题。</li>
<li>每个在BugBash中发现的Bug/Improvement，都应由发现问题的人来建卡记录Bug细节和修复这个Bug需要的时间。</li>
<li>每个在BugBash中发现的Bug/Improvement，Owner都需要与客户/产品经理沟通确定哪些Bug需要修复，并确定好优先级。如果他们都未参加Bug Bash会议，也可以会议再沟通。</li>
</ul>
<h3 id="在BugBash之后"><a href="#在BugBash之后" class="headerlink" title="在BugBash之后"></a>在BugBash之后</h3><ul>
<li>Bug Bash的Owner应当跟踪所有Bug的状态<mark class="label default">TO DO</mark>/<mark class="label warning">IN PROGRESS</mark>/<mark class="label success">DONE</mark>并及时更新在文档里，更新完成之后将修复结果分享给团队。</li>
</ul>
<h2 id="我的BugBash模版"><a href="#我的BugBash模版" class="headerlink" title="我的BugBash模版"></a>我的BugBash模版</h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p><img data-src="https://i.loli.net/2020/04/22/g8jDuA79mFJcU6b.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="被测功能简单介绍"><a href="#被测功能简单介绍" class="headerlink" title="被测功能简单介绍"></a>被测功能简单介绍</h3><p>简单介绍此次BugBash要测的Feature或者Function。必要的话还可以demo展示。</p>
<h3 id="主要测试场景及其checkpoints"><a href="#主要测试场景及其checkpoints" class="headerlink" title="主要测试场景及其checkpoints"></a>主要测试场景及其checkpoints</h3><p>描述主要测试场景，和每个测试场景需要注意的测试点。<br><img data-src="https://i.loli.net/2020/04/22/ltR1Eo5hSfi6DrC.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="测试数据"><a href="#测试数据" class="headerlink" title="测试数据"></a>测试数据</h3><p>提前准备测试需要的各种数据和账号，确认每个参会的人有权限访问和进行测试。<br><img data-src="https://i.loli.net/2020/04/22/pZeGR83to2XPhmF.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="测试任务分配"><a href="#测试任务分配" class="headerlink" title="测试任务分配"></a>测试任务分配</h3><p>给每个参会小伙伴分配测试任务，包括测试设备、测试数据分配，有时也可以包括测试场景分配，按照具体情况而定。<br><img data-src="https://i.loli.net/2020/04/22/FGkZLP2TosCfBc3.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="结果讨论"><a href="#结果讨论" class="headerlink" title="结果讨论"></a>结果讨论</h3><p>测试完成后，将所发现的问题逐个进行讨论，补全表格中空缺内容随后可直观的根据表格查看该Bug的状态和优先级。<br><img data-src="https://i.loli.net/2020/04/22/hw3XUxQl9cEzZYK.png" alt="image.png"><span class="image-caption">image.png</span></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>BugBash</tag>
      </tags>
  </entry>
  <entry>
    <title>国庆成都三日游</title>
    <url>/ChengduTravel/</url>
    <content><![CDATA[<blockquote class="blockquote-center">
<p>今年因为疫情，基本没咋出去玩，就是去周边玩玩。国庆假期也不敢走得太远，想到还没去过成都，就和朋友一起去成都转了转，记录一下自己拍的照片和感想。虽然一共5天的旅程，但只有三天是全天都在玩，所以是三日游。</p>

</blockquote>

<h2 id="日期加花费"><a href="#日期加花费" class="headerlink" title="日期加花费"></a>日期加花费</h2><div class="note info"><p>出行日期： 10.1-10.5<br>出行方式： 没报团，自行<br>个人花费：往返车票263*2+住宿1272+餐饮门票456+交通出行288.7 = 2542.7<br>出发地： 西安<br>集合地： 成都</p>
</div>

<h2 id="Day-0-抵达成都"><a href="#Day-0-抵达成都" class="headerlink" title="Day 0: 抵达成都"></a>Day 0: 抵达成都</h2><p>10.1，下午5点10分，到达成都东站，想着预定的酒店在春熙路，离这里不远，所以打了车。<br>高铁站地形复杂，为了找到司机师傅，我颇费了些周折，折腾了好一会，终于在5点30分和司机师傅确认了眼神。<br>事实证明打车是个错误的决定，因为下午的春熙路堵到爆炸，原本半小时的路程愣是走了一个多小时才到。<br><img data-src="https://i.loli.net/2021/07/08/6XazxfnUhESuWFC.jpg" width="500" height="500" alt="当时的春熙路"><span class="image-caption">当时的春熙路</span><br>明明东站有地铁可以直达，我却选择了打车，好吧我就是懒得挤地铁<span class="emoji" alias="grimacing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8">😬</span>，但反而弄巧成拙。<br>就这样，下午6点半我终于到了酒店，收拾齐整后和朋友一起在春熙路转了转，找了家卖米线的小店吃了饭。<br>此时的春熙路华灯初上，人潮汹涌，热闹非凡，一派繁华都市景象：<br><img data-src="https://i.loli.net/2021/07/08/YZ8cwKrolyXxCR4.jpg" alt="春熙路"><span class="image-caption">春熙路</span><br>太古里也在旁边，和春熙路一起形成了一条极为繁华的商业街：<br><img data-src="https://i.loli.net/2021/07/08/WunLft7Hi6IkJGO.jpg" alt="太古里"><span class="image-caption">太古里</span><br>一天的舟车劳顿，我们都有点累，简单逛了逛之后就回了酒店休息，准备明天的行程。</p>
<h2 id="Day-1-看熊猫-网红点打卡-采耳"><a href="#Day-1-看熊猫-网红点打卡-采耳" class="headerlink" title="Day 1: 看熊猫&amp;网红点打卡&amp;采耳"></a>Day 1: 看熊猫&amp;网红点打卡&amp;采耳</h2><h3 id="看熊猫"><a href="#看熊猫" class="headerlink" title="看熊猫"></a>看熊猫</h3><blockquote>
<p>门票：55元<br>交通：地铁+公交 1小时</p>
</blockquote>
<p>来成都，第一站就是看大熊猫啦，早上9点从春熙路地铁口出发，上午10点我们就到了「成都大熊猫繁育研究基地」。此时门口已经排满了人，国庆假期这里还是很热门的：<br><img data-src="https://i.loli.net/2021/07/08/5guURyQrqCnNdMI.jpg" width="350" height="500" alt="熊猫基地门口的人流"><span class="image-caption">熊猫基地门口的人流</span><br>门口有许多卖熊猫饰品和玩偶的小贩，我们也一人买了一个熊猫发箍，戴上更有看熊猫的氛围了。跟着人流进去，里面还是景区式的区域规划，进去好一段路都是类似于公园的布局，有树木、水池什么的：<br><img data-src="https://i.loli.net/2021/07/08/bG8HFlM16wWzEk9.jpg" alt="池上的花"><span class="image-caption">池上的花</span><br>再进去植物更多，慢慢的可以看到熊猫的指示牌，还有充满节日气氛的装饰：<br><img data-src="https://i.loli.net/2021/07/08/3jFhQ7OuSfrpxqH.jpg" alt="人真的多"><span class="image-caption">人真的多</span><br>整个基地供游人活动的区域很大，熊猫却很少，有一种我们不是来看熊猫，而是来找熊猫的感觉。这种情况下，游客中有人看到了熊猫就会很兴奋的指给大家看<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，后来跟着不同的指示牌，我们陆续看(zhao)到了不同形态的熊猫，还有红色的小熊猫(没拍照)：<br><img data-src="https://i.loli.net/2021/07/08/NECgVfckHrDR2A6.jpg" alt="躺着的熊猫"><span class="image-caption">躺着的熊猫</span><br><img data-src="https://i.loli.net/2021/07/08/zkO5XH798bMYyso.jpg" alt="就是玩儿的熊猫"><span class="image-caption">就是玩儿的熊猫</span><br><img data-src="https://i.loli.net/2021/07/08/LOQBxnvRDrucXp4.jpg" width="350" height="500" alt="吃竹子的熊猫"><span class="image-caption">吃竹子的熊猫</span><br>hummm…就挺无聊的。<br>唯一碰到有趣味的是看到两个熊猫打架，真的难得一见，没拍视频，但真的挺搞笑的。也没看到小熊猫，因为人太多，然后我们就走出了这个熊猫基地。<br>在外边歇了一会，讨论着下一个目的地，突然下起雨了，我们也匆忙离开了。</p>
<h3 id="网红打卡地"><a href="#网红打卡地" class="headerlink" title="网红打卡地"></a>网红打卡地</h3><h4 id="宽窄巷子"><a href="#宽窄巷子" class="headerlink" title="宽窄巷子"></a>宽窄巷子</h4><p>从熊猫基地离开后，我们坐公交去了离网红点「宽窄巷子」不远的一家火锅店吃饭，据朋友在成都上学的同学说，这也是一家网红店。到了之后雨渐渐小了，但吃饭的人也挺多，我们在外面的板凳上等了一会才进去。<br><img data-src="https://i.loli.net/2021/07/08/3P5vrZIJtpi7w1o.jpg" alt="火锅店"><span class="image-caption">火锅店</span><br>吃完之后就走去不远的网红打卡地「宽窄巷子」，门口还是人挤人，有安保在门口搭了小帐篷，人们扫完健康码后从帐篷下的闸口进入。<br><img data-src="https://i.loli.net/2021/07/08/jzdFHKlhkW2xv5a.jpg" width="350" height="500" alt="窄巷子和后边络绎不绝的游客"><span class="image-caption">窄巷子和后边络绎不绝的游客</span><br>进入之后发现，这不还是传统的民俗商业街嘛，和西安的回民街、永兴坊一个样，卖的东西也是大同小异，看来来这里的人真的是纯粹为了打卡了。<br>不能免俗的买了一些小吃饮品，吃完之后又开始寻思下一个目的地。此时雨早已停了，但太阳也没出来，天只是阴着，偶有风吹过，不过夏末的天气这样是最舒适不过的了，总比毒日头好。<br>思索了一会，我们决定去武侯祠和锦里看看，离这里也不远，天气凉爽，我们扫了几辆共享单车就出发了，一路上清风拂面，也是自在。<br><img data-src="https://i.loli.net/2021/07/08/lzYqkDpotsMxNK6.jpg" alt="成都街头的建筑"><span class="image-caption">成都街头的建筑</span></p>
<h4 id="锦里"><a href="#锦里" class="headerlink" title="锦里"></a>锦里</h4><p>下午四点，我们到达了武侯祠，发现武侯祠和锦里是连在一起的，是一个入口。武侯祠门票60元，锦里门票免费，天色渐晚，我们决定只去锦里看看。<br>进去之后首先映入眼帘的是刻着「锦里」两个字的石门：<br><img data-src="https://i.loli.net/2021/07/08/4lxp1XgYnaP796J.jpg" alt="锦里"><span class="image-caption">锦里</span><br>之后就是一些仿古的建筑：<br><img data-src="https://i.loli.net/2021/07/08/MQVp4nscbX3gB1P.jpg" alt="锦里的仿古建筑"><span class="image-caption">锦里的仿古建筑</span><br>再进去，就是一条长长的街道，街道两侧都是商贩，然后我就明白了，这不还是一条民俗商业街嘛<span class="emoji" alias="relieved" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">😌</span>，只是建筑风格比宽窄巷子更显古意而已。跟着人流转悠完了之后，我们决定回去春熙路。</p>
<h3 id="采耳"><a href="#采耳" class="headerlink" title="采耳"></a>采耳</h3><p>回到春熙路，昨天已经在这里转过了，而且折腾了一天，我们都有点累。这时H君提议我们去体验下成都的采耳，顺便做个马杀鸡，我深以为然，于是搜索附近的采耳店，去做了采耳，还做了背部和足部按摩，一天的疲惫立刻就舒缓了。<br>第一次做采耳的感觉很奇特，看着师傅拿出各种工具，一开始有点害怕，后来放松之后还挺舒服的，总之也是一种体验。</p>
<h2 id="Day-2-都江堰"><a href="#Day-2-都江堰" class="headerlink" title="Day 2: 都江堰"></a>Day 2: 都江堰</h2><h3 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h3><blockquote>
<p>门票：78元<br>交通 地铁(春熙路-犀浦) + 城际列车(犀浦-都江堰) </p>
</blockquote>
<p>前一天订票的时候，发现「犀浦-都江堰」已经没票了，于是只订了「犀浦-红光镇」一站路，后来再补票。犀浦车站设施陈旧，车站里人却很多，应该都是去都江堰的游客。<br>一路上看到有一个「郫县站」的站名，不知道是不是生产「郫县豆瓣酱」的地方，我做麻婆豆腐的时候老会用到这个酱，哈哈哈哈哈哈。<br><img data-src="https://i.loli.net/2021/07/08/NbGhpjs9MVkUiRw.jpg" alt="郫县站"><span class="image-caption">郫县站</span></p>
<h3 id="到达"><a href="#到达" class="headerlink" title="到达"></a>到达</h3><p>到了都江堰，雨又下起来了，先是跟着人流走到了买景区大巴车票的地方，上车之后导游小姐姐就开始讲都江堰的历史由来之类，关于这个我来之前就已经百科过了，有了浅显的了解，下文摘自 <a href="https://www.baidu.com/link?url=XLGyZ1OsaR8POYphg9SnjLUxSPx7ZadjQOV0nA8F-YiLOhSZaqPJxkhmrmJsTawA30FM_RPZhzHje_wULpFvluXsy312TVxRswt8rK_qrF7HVK4eD94pUUIB-e8QVeuq&amp;wd=&amp;eqid=8612698700033a650000000360e7b8d4">百度百科</a> ：</p>
<div class="note primary"><p>都江堰是世界文化遗产，说白了就是一个大型「水利工程」。<br>始建于秦昭王末年，后由蜀郡太守 <strong>「李冰」</strong> 父子在前人基础上修建，工程主体由「分水鱼嘴」、「飞沙堰」、「宝瓶口」等部分组成，两千多年来一直发挥着防洪灌溉的作用，灌区面积近千万亩，使成都平原成为沃野千里的「天府之国」。<br>都江堰是全世界迄今为止，年代最久、唯一留存、而且仍在使用的宏大水利工程，古人的智慧到一直流传到现在，所以它是一种「文化遗产」。</p>
</div>

<p>讲完历史由来之后，按照通用的景区套路，她又给大家兜售景区门票、皮影戏门票、扶梯票之类。门票我已经提前网上买了，又说不坐扶梯得走俩小时才能到景区核心，所以我们决定再买一个扶梯票，可到了景区门口，又说因为下雨扶梯停运了，给我们退了票，所以我们只能自己走了。门口有不少卖伞的小贩，我们也打着伞，雨中游都江堰，也别有风味。<br><img data-src="https://i.loli.net/2021/07/09/sYaJfL6tAZgQ3BC.jpg" alt="都江堰风貌"><span class="image-caption">都江堰风貌</span></p>
<h3 id="都江堰风景区"><a href="#都江堰风景区" class="headerlink" title="都江堰风景区"></a>都江堰风景区</h3><p>由于都江堰是一种与水利工程有关的文化遗产，我们这些非相关专业的人来这里，完全就是门外汉，生生变成了「没文化的人」，所以我们只能看看景，然后结合景区介绍，尽力理解这个工程的伟大之处。<br>于是在专业人士眼里，都江堰是一个伟大的水利工程，在我们这些没文化的人眼里，都江堰就是一个适合打卡的风景区，我对自己的定位还是非常清晰的<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<p>「都江堰风景区」有「伏龙观」、「二王庙」、「玉垒关」、「离堆公园」等游览地，跟着景区里的指示牌，我们也一一走过了这些地方。</p>
<p>首先就是 <a href="https://baike.baidu.com/item/%E4%BC%8F%E9%BE%99%E8%A7%82/985897">伏龙观</a> ，是纪念李冰的庙宇，里面供奉着李冰的塑像，传说李冰父子治水时曾制服岷江孽龙。<br>这个很好理解，古时为了纪念一些功德昭著的人，通用的做法就是把他们神化，把苦难妖魔化，然后立传立碑、建造庙宇，永世纪念传颂。这和现在的「都江堰风景区」有异曲同工之妙，不过现在人们的可没有古人虔诚，大多数人只是单纯为了打卡看风景而已，不知道古时去伏龙观祭拜要不要买「门票」。<br><img data-src="https://i.loli.net/2021/07/09/sTDkctgLS8iC6Zd.jpg" alt="伏龙观"><span class="image-caption">伏龙观</span></p>
<p>接下来是 <a href="https://baike.baidu.com/item/%E4%BA%8C%E7%8E%8B%E5%BA%99/514188">二王庙</a> ，顾名思义，又是一个纪念李冰父子的地方。不过这里就是单纯为了纪念，没有神话传说了。<br>还是摘自百度百科 ：庙内有李冰和其子二郎的塑像，石壁上嵌有李冰以及后人关于治水的格言，后殿右侧有画家张大千、徐悲鸿等人的碑刻。<br><img data-src="https://i.loli.net/2021/07/08/seSIlcihmCVrj2v.jpg" alt="二王庙内建筑"><span class="image-caption">二王庙内建筑</span></p>
<p>然后是 <a href="https://baike.baidu.com/item/%E5%AE%89%E6%BE%9C%E7%B4%A2%E6%A1%A5/7083714">安澜索桥</a> ，位于二王庙前，横跨在岷江的内江和外江的分水处，是一所名播中外的古索桥。根据百度百科，这里也有一个传说，不过没有神人也没有妖魔，应该比较可信。<br><img data-src="https://i.loli.net/2021/07/09/yViCBRmb4sSQDaX.jpg" alt="安澜索桥"><span class="image-caption">安澜索桥</span><br><img data-src="https://i.loli.net/2021/07/08/byRNifdplAs3GqZ.jpg" alt="索桥与后面的二王庙"><span class="image-caption">索桥与后面的二王庙</span></p>
<p>最后是 <a href="https://baike.baidu.com/item/%E9%83%BD%E6%B1%9F%E5%A0%B0%E9%B1%BC%E5%98%B4">都江堰鱼嘴</a> ，上文也提到过，这是都江堰工程三大主体之一，是一个修建在江心的分水堤坝，作用是把汹涌的岷江分隔成外江和内江，外江排洪，内江引水灌溉。当时我们就站在下图前边的圆形看台上，看着下边的鱼嘴和远处的内江和外江：<br><img data-src="https://i.loli.net/2021/07/09/cAVJXLiBZIhP8uS.jpg" alt="鱼嘴看台百科图"><span class="image-caption">鱼嘴看台百科图</span><br><img data-src="https://i.loli.net/2021/07/09/1wzdpuBIHVvKn8h.jpg" alt="都江堰鱼嘴和远处的内外江"><span class="image-caption">都江堰鱼嘴和远处的内外江</span></p>
<p>看完鱼嘴后，这里已经是景区最深处了，我们也走了好长的路，脚都酸了，在看台周围坐了一会，我们就开始返程。<br>返程中还参观了都江堰工程的详细介绍图纸(似懂非懂)，也看到了一些竹笼装卵石的模型，这些模型就是用来堆筑都江堰三大主体之一「飞沙堰」的。<br><img data-src="https://i.loli.net/2021/07/09/G2EFTMZXuitkKrU.jpg" alt="都江堰随处可见的竹笼装卵石模型"><span class="image-caption">都江堰随处可见的竹笼装卵石模型</span></p>
<p>景区内有餐厅，人很多，价格当然也很贵，但还是得吃呀。之后我们又在都江堰游玩了很久，在景区里的公园转了转，喂喂鲤鱼什么的，景区里很大，我们一直转到下午4点多才开始返程。</p>
<h3 id="返程"><a href="#返程" class="headerlink" title="返程"></a>返程</h3><p>坐上景区门口的公交，到了都江堰站坐城际列车，买票的时候「都江堰-犀浦」还是没票，所以只订了「都江堰-郫县」二站路，想着后来再补票。<br>然而，车上一直没有工作人员来查票补票，我们就想着到了犀浦再去窗口补票。结果到了犀浦站，我们没有找到可以补票的窗口，出站口也是简单用围栏做的人工通道，根本没人查票，就这样发生了我人生中第一次「被动逃票」。。。<br>随后我们从犀浦坐地铁回到了春熙路，此时已是晚上7点多，春熙路已是人声鼎沸，在朋友的朋友推荐下去周围的商场吃了串串，然后结束了一天的旅程。</p>
<h2 id="Day-3-杜甫草堂-人民公园-小酒馆"><a href="#Day-3-杜甫草堂-人民公园-小酒馆" class="headerlink" title="Day 3: 杜甫草堂&amp;人民公园&amp;小酒馆"></a>Day 3: 杜甫草堂&amp;人民公园&amp;小酒馆</h2><p>昨天旅程结束后，并没有想好今天要去哪，所以搜了下成都其他的热门景点和打卡地，还准备在成都街头随便逛逛。</p>
<h3 id="杜甫草堂"><a href="#杜甫草堂" class="headerlink" title="杜甫草堂"></a>杜甫草堂</h3><p>一个人去的，因为朋友。。。起不来。<br>杜甫草堂在热门景点之列，所以想去转转，顺便沾染点文艺气息。<br>起床搜索好路线，决定坐公交去，因为前几天都是坐地铁，还没在成都坐过公交，想体验一下。<br>作为热门景点，草堂门口人也很多：<br><img data-src="https://i.loli.net/2021/07/09/gQkM6zyrVaCvG1c.jpg" alt="杜甫草堂"><span class="image-caption">杜甫草堂</span></p>
<div class="note primary"><p><a href="https://baike.baidu.com/item/%E6%9D%9C%E7%94%AB%E8%8D%89%E5%A0%82/6012?fr=aladdin">杜甫草堂</a> 是中国唐代大诗人杜甫流寓成都时的故居，先后在此居住近四年，创作诗歌240余首。唐末诗人韦庄寻得草堂遗址，重结茅屋，使之得以保存，宋元明清历代都有修葺扩建，被誉为「中国文学史上的一块圣地」。</p>
</div>
<p>我对杜甫的了解仅限于小时候背的诗，所以买了导游语音包，边听边走过每一个景点：<br><img data-src="https://i.loli.net/2021/07/09/tuACqUsKXne9DaV.jpg" width="250" height="500" alt="杜甫草堂景点详解"><span class="image-caption">杜甫草堂景点详解</span><br>少陵碑亭是杜甫草堂最具代表性的建筑之一，它是一座以茅草作顶的亭子，内树有一石碑，镌刻“少陵草堂”四个大字，笔力浑厚，笔姿秀润，是果亲王允礼所书(《甄嬛传》里的十七爷！！！)。雍正十二年（公元1734年）果亲王送达赖进藏，经过成都，特拜谒草堂，留下此手迹。此景点是杜甫草堂最具代表性的景点之一，人们常常将其作为茅屋的象征：<br><img data-src="https://i.loli.net/2021/07/09/NCXYywEV4m8Qg1P.jpg" alt="少陵草堂"><span class="image-caption">少陵草堂</span><br>「八月秋高风怒号，卷我屋上三重茅。」，杜甫草堂依据杜诗《茅屋为秋风所破歌》描写和明代格局于1997年恢复重建了“茅屋景区”，重现了诗人故居的田园风貌，营造出浓厚的诗意氛围：<br><img data-src="https://i.loli.net/2021/07/09/fc5OzWICHPidaR6.jpg" alt="茅屋"><span class="image-caption">茅屋</span><br>盆景园里的盆景，这里还悬挂了很多诗歌石刻：<br><img data-src="https://i.loli.net/2021/07/09/bws7JzVHnEa8xCe.jpg" alt="盆景"><span class="image-caption">盆景</span><br>其他景点没拍照，不过这里诗歌文化氛围确实很浓厚。</p>
<h3 id="人民公园"><a href="#人民公园" class="headerlink" title="人民公园"></a>人民公园</h3><p>中午又坐公交和朋友一起去成都人民公园转了转，在这里划了船，还玩了碰碰车<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>，国庆期间公园人也很多，划船的时候等了好一阵。<br><img data-src="https://i.loli.net/2021/07/09/yPibaHFBwZoWLcl.jpg" width="350" height="500" alt="公园里的石碑"><span class="image-caption">公园里的石碑</span></p>
<h3 id="小酒馆"><a href="#小酒馆" class="headerlink" title="小酒馆"></a>小酒馆</h3><p>赵雷的成都唱火了玉林路和小酒馆，我们也慕名过来打卡：<br><img data-src="https://i.loli.net/2021/07/09/JC61BK4WNmxfcF5.jpg" alt="玉林路"><span class="image-caption">玉林路</span><br>沿着路边往前走，天色渐黑，人群也越来越密集，然后就走到了酒吧一条街，找到了传说中的小酒馆：<br><img data-src="https://i.loli.net/2021/07/09/CRTVHAvZ6IFxcls.jpg" alt="小酒馆"><span class="image-caption">小酒馆</span><br>酒馆门口满是来打卡的游客，外边还有很多排队等待进去的客人，我们无意进去，所以只在门口看了看就走了。<br>除了酒吧，这里还有很多卖东西的摊贩，和朋友随便转了转，逐渐意兴阑珊，肚子也饿了，往前走走找了家卖盖浇饭的连锁店，吃完就返程了。</p>
<h2 id="Day-4-再见成都"><a href="#Day-4-再见成都" class="headerlink" title="Day 4: 再见成都"></a>Day 4: 再见成都</h2><p>成都之行很快就结束了，逛了3天发现成都跟西安差不多<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，早上收拾行装后坐地铁去高铁站，很快就到了。回家后迫不及待的点了炸鸡，开着我的投影仪看电影，还是家里最舒服啊。<br><img data-src="https://i.loli.net/2021/07/11/tJKlMzWIk94HYyN.jpg"></p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>FirstBlog</title>
    <url>/FirstBlog/</url>
    <content><![CDATA[<p>FistPage in my blog.</p>
<p>the future is whitin reach.</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>Git学习笔记</title>
    <url>/Git%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>对近几天的Git学习做一个小结。</p>
<span id="more"></span>

<p>学完了<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">廖雪峰的git教程</a>，对git的概念和基本操作有了更深的理解。对“版本控制”的概念也理解的更加深刻。</p>
<hr>
<h1 id="几点感受"><a href="#几点感受" class="headerlink" title="几点感受"></a>几点感受</h1><p>以下是我学习了git之后的一些感受：</p>
<ul>
<li>成为了Linus Benedict Torvalds的一枚小迷妹（以前也是，现在妥妥的）。</li>
<li>世上没有后悔药？不存在的，git的版本回退完美的实现了这一点。</li>
<li>搞清楚了git和github的关系，后者只是拥有一个git远程仓库，可以通过git连接并实现相应操作。</li>
<li>Git服务器可以轻松搭建，除了github，还有coding/gitee等网站提供git服务。</li>
<li>工作效率真的提升很快。。。</li>
</ul>
<hr>
<h1 id="干货"><a href="#干货" class="headerlink" title="干货"></a>干货</h1><p>下面对学习中涉及到的git命令做分类总结，都是最常用的。</p>
<h2 id="git本地管理"><a href="#git本地管理" class="headerlink" title="git本地管理"></a>git本地管理</h2><blockquote>
<p>git最基本的一些操作</p>
</blockquote>
<p>git init：将某目录变成git可以管理的仓库（添加.git目录）</p>
<p>git commit -m “…”:一次性提交多个文件（add进来的文件）</p>
<p>git add xxx.md:可以多次添加多个不同文件</p>
<p>git status:可以时刻掌握仓库当前的状态</p>
<p>git diff:显示具体修改的内容（与提交进去的文件相比）</p>
<p>git log：显示从最近到最远的提交日志，加上–pretty=oneline参数可以将每次提交信息压缩成一行,最前边的数字加字母是指每次commit的commit-id,是16进制的表示形式</p>
<p>.gitignore文件：包括git需要忽略提交的文件名，此文件也需要提交到git</p>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><blockquote>
<p>世界上是有后悔药的</p>
</blockquote>
<p>git reset –hard HEAD^:回退到上个版本（上上个版本HEAD^^,上100个版本是HEAD~100。HEAD是指向当前版本的指针，因此可以通过调整HEAD来在历史版本间穿梭）</p>
<p>git reset –hard commmitid：在没有关闭上次回退时的命令窗口时，可以取消回退。commitid没必要写全，git可以自己去找</p>
<p>git reflog:可以显示每一次commit和回退的id号，如果命令窗口关闭，可以用此命令先找到commitid，然后用上个命令取消回退</p>
<p>git checkout – file：撤销在工作区对file做的修改，包括撤销对file文件的删除</p>
<p>git reset HEAD file &amp; git checkout – file：对file的修改已被add到stage，用前者删除add到stage的修改，再用后者撤销工作区的修改</p>
<p>git reset –hard HEAD^ :已经将想撤销的修改添加到了版本库，但还未提交到远程库。用版本回退撤销修改</p>
<p>git rm file&amp;git commit -m “delete file”：删除已添加到版本库的文件</p>
<p>git checkout:用版本库里的文件版本替换工作区的文件版本（一键还原）</p>
<h2 id="远程库连接"><a href="#远程库连接" class="headerlink" title="远程库连接"></a>远程库连接</h2><blockquote>
<p>连接远程库，进一步实现团队协作。</p>
</blockquote>
<p>git remote:查看远程库信息，详细信息加上-v选项</p>
<p>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:Summyj/xxx.git：将本地git仓库与github远程库想关联,也可以是其它库，远程库默认名字是origin，也可以设为其它，比如github</p>
<p>git push -u origin xxx:把本地仓库指定分支·内容推送到远程，下次推送可以不用-u参数<br>因为第一次推送master分支时如果加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，所以在以后的推送或者拉取时就可以简化命令。</p>
<p>git clone <a href="mailto:git@github.com">git@github.com</a>:xxx/xxx.git:从远程仓库克隆到本地，后边是地址</p>
<p>git remotr rm origin:删除本地库关联的origin远程库</p>
<h2 id="分支创建管理"><a href="#分支创建管理" class="headerlink" title="分支创建管理"></a>分支创建管理</h2><blockquote>
<p>实现更安全便捷的版本控制。</p>
</blockquote>
<p>git checkout -b xxx:git check命令加上-b参数表示创建并切换到xxx分支，此命令相当于两条命令：</p>
<ul>
<li>git branch xxx</li>
<li>git checkout xxx</li>
</ul>
<p>git branch:查看当前分支（列出所有分支，当前分支前边会标有*号）</p>
<p>git merge xxx:将指定分支xxx合并到当前分支,首先要切换到当前分支（不一定是master分支）</p>
<p>git branch -d xxx:删除某分支（合并后再删除）</p>
<p>git branch -D xxx:强行删除某个没有被合并的分支</p>
<p>git log –graph –pretty=oneline –abbrev-commit：用分支图展示各分支合并情况（或者直接git log –graph，但这将会显示所有历史合并图）</p>
<p>git merge –no-ff -m “…” xxx:禁用git合并时默认的fast-forward模式，生成新的commit加入分支信息。-m后的内容就是合并信息</p>
<h2 id="工作现场存储"><a href="#工作现场存储" class="headerlink" title="工作现场存储"></a>工作现场存储</h2><blockquote>
<p>版本控制的freestyle.</p>
</blockquote>
<p>git stash:将当前工作现场储藏起来，等以后恢复现场后继续工作</p>
<p>git stash list:查看储藏的工作现场</p>
<p>git stash apply:回复储藏的工作现场</p>
<p>git stash apply stash@{x}有多个stash时恢复指定的stash</p>
<p>git stash drop:恢复现场并删除stash list的内容，如果有多个stash,默认恢复的是最新的stash.</p>
<h2 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h2><blockquote>
<p>小伙伴们的友情</p>
</blockquote>
<p>git checkout -b xxx origin/xxx:刚从远程库克隆到本地时只有master分支，用此命令创建和远程分支对应的分支</p>
<p>git pull:多人协作时，远程分支比本地分支更新导致推送失败，用此命令从远程库抓取该分支最新的提交并和本地分支进行合并，合并有冲突需要手动解决</p>
<p>git branch –set-upstream xxx origin/xxx:git pull失败时需要创建本地分支和远程分支的关联</p>
<h2 id="标签管理"><a href="#标签管理" class="headerlink" title="标签管理"></a>标签管理</h2><blockquote>
<p>更方便进行版本控制，与commit id相比更好记。相当于版本库的一个快照。</p>
</blockquote>
<p>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针。与HEAD指针相比，后者可以移动，但标签不能移动），所以，创建和删除标签都是瞬间完成的。</p>
<p>git tag xxx:打标签</p>
<p>git tag v0.3 646123:将commit id为646123的提交打上v0.3标签。这样可以解决忘记打标签的问题</p>
<p>git tag:查看所有标签（按字母排序，而并非时间）</p>
<p>git show tagname:查看标签信息（包括说明文字）</p>
<p>git tag -a v0.x -m “…” 615465:创建带有说明的标签，用-a指定标签名，-m指定说明文字</p>
<p>git tag -d xxx:删除指定标签（因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。）</p>
<p>git push origin tagname:推送标签到远程</p>
<p>git push origin –tags:一次性推送全部尚未推送到远程的本地标签</p>
<p>git tag -d tagname &amp; git push origin :refs/tags/tagname:删除已推送到远程库的标签，先从本地删除，再从远程删除</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>博客搭建折腾记</title>
    <url>/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>搭建博客的正确姿势。</p>
<span id="more"></span>
<h2 id="博客初识"><a href="#博客初识" class="headerlink" title="博客初识"></a>博客初识</h2><p>开始写博客只是用CSDN发布，本来开开心心。</p>
<p>然而有一天，我的一篇博客被系统直接删掉了，原因是含有敏感词汇。联系了管理员之后才恢复<span class="emoji" alias="neutral_face" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">😐</span>。</p>
<p>又想起之前一天发了好几篇，被系统禁发了。 有点小生气，发个博客也这么麻烦。索性就自己搭一个好了，然后就开始了折腾之旅。</p>
<p>或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。</p>
<p>说白了，搭建博客就是用一堆别人的东西，来做一个我们自己的东西。Hexo、主题、GithubPages、CodingPages，这些没一样是你的。而且这些都是免费的，除了买域名要花一只棒棒糖的钱（我搭建博客一共就花了3块钱<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>）</p>
<p>所以，人家设计的东西，只要拿来用就可以了。</p>
<h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><ul>
<li>Github：建立一个github.io的库，没有账号的话可以注册一个。</li>
<li>Hexo：需要下载它的安装包和主题，你只需要知道一些部署博客的命令（不超过5条）。这些命令也可以不会，因为文档里都有。</li>
<li>GithubPages：是Github推出的功能，只要建立了github.io库，就默认在使用。它相当于一个服务器，可以保存所有博客文件，是电脑上博客站点的一份备份/</li>
<li>CodingPages：跟GithubPages作用相同，但这个是国内的。为了双重保障和你的博客运行速度。建立还是设置下它。</li>
</ul>
<p>所以，搭建博客时可以什么都不懂。但为了以后能更好的操作博客，建议在搭建成功之后，好好学习一下Github的使用。网上的教程也有很多，这里就不再赘述。</p>
<p>虽然我们可以什么都不懂，但以下3样东西必须要有：</p>
<ul>
<li>耐心：搭建博客是一件非常折腾的事情，所以耐心很重要</li>
<li>细心：一定要细心，确保每一步都是正确的。</li>
<li>一定的学习能力和钻研精神，遇到困难一定要面对它，主动解决。</li>
</ul>
<h3 id="为什么搭建博客？"><a href="#为什么搭建博客？" class="headerlink" title="为什么搭建博客？"></a>为什么搭建博客？</h3><p>这个问题相信你已经有了自己的答案，但我还是建议你看看这2篇文章：</p>
<ul>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=402564613&amp;idx=1&amp;sn=d2b7c75b11046a0dcf8df77e737d2b4c#rd">我为什么坚持写博客？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat">为什么你要写博客？</a></li>
</ul>
<h3 id="搭建博客需要多长时间？"><a href="#搭建博客需要多长时间？" class="headerlink" title="搭建博客需要多长时间？"></a>搭建博客需要多长时间？</h3><p>这个因人而异，在我看来，有这么几种：</p>
<ul>
<li>半天：只是搭建，不涉及到换域名和个性化，并且了解背景知识。那么只要半天便可以搭建完成</li>
<li>一天：需要了解背景知识，并且换了域名和主题，但没有太多的个性化</li>
<li>两天：设置了评论，字数统计等各种个性化设置（比如我）</li>
<li>三天甚至更多：各种找个性化插件和设置，一直在折腾的人</li>
</ul>
<p>当然，前两种都是你没有遇到太大的坑或者困难所给出的估计时间。如果你在搭建的时候碰到了很多的问题，那么这个时间就得延长了。因为这种问题一般不好查。</p>
<hr>
<p>搭建博客之前，你应该知道自己在做的是什么。先把事情做对，再把事情做好。所以你需要了解一些背景知识。</p>
<h3 id="建立博客的渠道"><a href="#建立博客的渠道" class="headerlink" title="建立博客的渠道"></a>建立博客的渠道</h3><blockquote>
<p>通常来说，建立博客的通常渠道包括以下3种：</p>
</blockquote>
<ul>
<li>在博客平台上注册，比如 博客园、CSDN、新浪博客 等。</li>
<li>利用博客框架搭建，如 WordPress、Jekyll、hexo 等。</li>
<li>自己用代码写一个。</li>
</ul>
<p>其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。</p>
<p>而我们要做的，就是第二种：既不受限，难度也不大。</p>
<h3 id="为什么选择GithubPages和Hexo"><a href="#为什么选择GithubPages和Hexo" class="headerlink" title="为什么选择GithubPages和Hexo"></a>为什么选择GithubPages和Hexo</h3><p>用第二种方式搭建博客也有很多方法，但主流的有两种：</p>
<ul>
<li>Wordpress</li>
<li>GitHub Pages+Hexo</li>
</ul>
<p>很多人用 Wordpress，为什么我要用 GitHub Pages 来搭建？</p>
<ul>
<li>开始我也不知道用哪个，但在网上搜了教程后，发现wordpress比Hexo要麻烦很多。</li>
<li>Hexo是开源在Github上的，而且轻快便捷</li>
<li>GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。</li>
<li>学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多</li>
<li>顺便看看 GitHub 工作原理，最好的团队协作流程</li>
<li>GitHub 是趋势</li>
</ul>
<h2 id="概念介绍"><a href="#概念介绍" class="headerlink" title="概念介绍"></a>概念介绍</h2><h3 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h3><p>Hexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：<a href="https://github.com/hexojs/hexo" title="HexoGithub">HexoGithub</a>，它主要有以下优点：</p>
<ul>
<li>极速生成静态页面</li>
<li>一键部署博客</li>
<li>丰富的插件支持</li>
<li>支持 Markdown</li>
</ul>
<p>更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：<a href="https://hexo.io/docs/" title="Hexo">Hexdocs</a></p>
<h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>GitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。博主英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么，</p>
<p>也有好多人调侃它是全球同性交友平台，其实我不太懂这个梗（女程序员也是很多的好么）</p>
<h3 id="GitHub-Pages"><a href="#GitHub-Pages" class="headerlink" title="GitHub Pages"></a>GitHub Pages</h3><p>GitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。</p>
<h3 id="CodingPages"><a href="#CodingPages" class="headerlink" title="CodingPages"></a>CodingPages</h3><p>和GithubPages功能相同，其对应的Coding平台也可以实现和Github相似的功能。但没有后者那么出名。是香港的公司，也算是国内的。</p>
<p>看了这些，我相信你一定还是一脸懵逼的。但你可以简单理解成下边的的一段话：</p>
<blockquote>
<p>利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后利用网络将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。</p>
</blockquote>
<p>如果你还想了解更多背景知识，可以看看这篇文章：<a href="http://www.jianshu.com/p/0c3663c4f0ef">搭建个人博客，你需要知道这些</a></p>
<hr>
<h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><h3 id="搭建步骤"><a href="#搭建步骤" class="headerlink" title="搭建步骤"></a>搭建步骤</h3><p>一般来说，搭建博客有以下几个步骤：</p>
<ol>
<li>获得个人网站域名</li>
<li>GitHub创建个人仓库</li>
<li>安装Git</li>
<li>安装Node.js</li>
<li>安装Hexo</li>
<li>推送网站</li>
<li>绑定域名</li>
<li>在Coding上部署你的网站</li>
</ol>
<p><strong>其中，1.7.8你可以不做。但剩下的必须要做，一步都不能少，也不能错。在你看下边推荐的博客的时候，不要忘记看看我下边的建议。</strong></p>
<p>1-7步请看：这篇博客不只前7步，如果你做完了就可以往下做，因为后边的都是属于个性化部分，所以博主在这里没有显示。<a href="https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&amp;utm_medium=social" title="搭建博客">GitHub+Hexo 搭建个人网站详细教程</a></p>
<p>第8步请看：这篇博客是在你做完了前7步的基础上做的。<a href="http://www.jianshu.com/p/25587e049d54" title="双部署">hexo干货系列：（四）将hexo博客同时托管到github和coding</a>，这篇博客也讲了怎么在CodingPages部署，可以和上一篇对照着看：<a href="http://redredleaf.me/%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B%E4%B8%80.html#more">我的Hexo博客站的创建历程(一)【Github&amp;Coding双管齐下部署Hexo】</a></p>
<h3 id="我的建议和踩过的坑"><a href="#我的建议和踩过的坑" class="headerlink" title="我的建议和踩过的坑"></a>我的建议和踩过的坑</h3><blockquote>
<p>第一篇：</p>
</blockquote>
<ul>
<li>域名建议买.top，比较便宜。当然，土豪随意。</li>
<li>下载Node.js或Git时，由于众所周知的原因，下载速度会很慢。这时你需要看Hexo的官方文档，上边给出了离线下载的地址：<a href="https://hexo.io/docs/" title="Hexo">Hexdocs</a></li>
<li>在安装Hexo这一步，hexo init blog及其之后的命令都是在Blog/blog这个目录下进行的，一定要注意，不能弄错了。博主刚开始就是搞错了路径，结果一直报错。。。</li>
<li>如果你在安装Hexo或者之前的步骤中有报错，建议你重新下载安装。因为这之前的过程全是安装的部分，一旦出错，没有别的原因，一定是你的操作有问题。而且你解决错误的时间一定要比重新安装耗费的时间长。</li>
<li>关于Markdown，sublime是个好东西。</li>
</ul>
<blockquote>
<p>第二篇：</p>
</blockquote>
<p>1.关于域名绑定，再次说明。血的教训告诉我们，Only需要添加两个解析。没有A记录，like this：</p>
<p><img data-src="https://i.loli.net/2019/05/16/5cdd170b0712c43179.png" alt="解析"><span class="image-caption">解析</span></p>
<p>之后可以在<a href="http://ping.chinaz.com/">此网站</a>对你的博客进行测试，看看你的博客是否可以在国内解析到Coding，国外解析到Github。访问速度是否得到提升。</p>
<p>2.coding配置完成后，加载博客时会出现其广告界面，如果你想去掉呢，coding给出的解决办法是在网站底部加上codingpages官网链接或者加logo</p>
<hr>
<h2 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h2><blockquote>
<p>终于到了万众瞩目的个性化步骤了，到这里，想必你已经根据博主推荐的链接成功搭建好了博客。</p>
</blockquote>
<p>下面来具体说说个性化。</p>
<h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p>如果你按照上边搭建博客时推荐的文章那样，选择了next主题。那就不用多说。如果你觉得next主题不符合你的Style，可以参考这篇文章选择你喜欢的主题：<a href="http://www.jianshu.com/p/bcdbe7347c8d">Hexo博客主题推荐</a></p>
<p>但我还是推荐你用next主题，原因：</p>
<ul>
<li>next主题是github上最流行的主题，star和fork的数量远远超过了别的主题。所以相信群众的选择。</li>
<li>next主题的主题配置文件本就内置了许多插件，在个性化的过程中你只需要把flase改成true或者加上对应服务的id就可以直接使用。极为方便。这是其他很多主题没有做到的一点</li>
<li>next主题内部还分为4个主题方案：Muse、Mist、Pisces、Gemini，可以自由选择，更加多元化。</li>
<li>界面高端大气，配色低调奢华。</li>
</ul>
<p><strong>ps：如果你没有用next主题，那么以下个性化设置就不用看了。因为它们都是next的配置。</strong></p>
<h3 id="按照主题文档设置"><a href="#按照主题文档设置" class="headerlink" title="按照主题文档设置"></a>按照主题文档设置</h3><p>选定了主题后，建议先看看主题的文档进行个性化设置。里面是最基本的标签、分类设置，还有第三方服务设置：<a href="http://theme-next.iissnan.com/theme-settings.html">next主题配置</a></p>
<h3 id="其他的个性化设置"><a href="#其他的个性化设置" class="headerlink" title="其他的个性化设置"></a>其他的个性化设置</h3><p>因为用的是next主题，所以这里也是针对于next主题的个性化配置。我博客的所有个性化都是来自这些链接：</p>
<ul>
<li>网易云音乐链接设置，参考博客搭建时推荐的第一篇博客</li>
<li>这一篇看它的个性化设置部分：<a href="https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/">Hexo搭建博客教程</a></li>
<li><a href="http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/">RSS和High特效</a></li>
<li>这篇真的厉害了，有30种特效：<a href="https://zhuanlan.zhihu.com/p/28128674">hexo的next主题个性化教程:打造炫酷网站</a></li>
<li>主讲第3方服务：<a href="https://zhuanlan.zhihu.com/p/22745430">配置第三方服务</a></li>
<li>这个也很方便，创建新文章后不用再去找了：<a href="https://notes.wanghao.work/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html">Hexo添加文章时自动打开编辑器</a></li>
<li>创建一个菜单页面作为文章目录：<a href="https://www.zhihu.com/question/33324071">hexo下新建页面下如何放多个文章</a></li>
<li>博客加密：<a href="https://github.com/MikeCoder/hexo-blog-encrypt">加密插件Github，issue里有解决next主题兼容的方法</a></li>
</ul>
<p>上边这些链接里的设置，均为博主亲测有效。从这些链接可以看出，博主也是折腾了很久的。。。</p>
<h3 id="在Github上看issue或者提issue"><a href="#在Github上看issue或者提issue" class="headerlink" title="在Github上看issue或者提issue"></a>在Github上看issue或者提issue</h3><p>如果你还想折腾，还有两种途径：</p>
<ul>
<li>可以看看next在Github上的issue：这些都是别人提的，可能会有你想要的设置。如果你遇到了问题，也可以自己提issue。这是网址：<a href="https://github.com/iissnan/hexo-theme-next/issues">next/issues</a></li>
<li>去Hexo的官方插件页面找，这里的插件很多。只有你想不到，没有你找不到：<a href="https://hexo.io/plugins/" title="Hexo插件">Hexo插件</a></li>
</ul>
<h3 id="我的建议"><a href="#我的建议" class="headerlink" title="我的建议"></a>我的建议</h3><ul>
<li>个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，Sublime你值得拥有</li>
<li>关于图床，博主之前用的七牛云，但后来通知那些免费外链有效期过了，所以所有图片都没了。。。这里推荐<a href="https://sm.ms/">SM.MS</a>和<a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E">PicGo</a></li>
<li>虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。</li>
<li><strong>强烈建议：</strong> 将博客源文件用github托管，可参考<a href="https://www.zhihu.com/question/21193762/answer/489124966">这篇回答</a></li>
</ul>
<h2 id="网站链接"><a href="#网站链接" class="headerlink" title="网站链接"></a>网站链接</h2><blockquote>
<p>下面是博客搭建过程中用到的一些平台和网站的链接，比如Livere提供的评论功能，七牛图床等：</p>
</blockquote>
<ul>
<li>Hexo: <a href="https://hexo.io/">https://hexo.io/</a> </li>
<li>阿里云: <a href="https://www.aliyun.com/">https://www.aliyun.com/</a></li>
<li>Livere: <a href="https://livere.com/">https://livere.com/ </a></li>
<li>Leancloud: <a href="https://leancloud.cn/">https://leancloud.cn/</a></li>
<li>七牛: <a href="https://www.qiniu.com/">https://www.qiniu.com/ </a></li>
</ul>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GithubPages</tag>
        <tag>CodingPages</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo的一些写作标签</title>
    <url>/How-to-Write/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2019/12/20/KfeTtUqLu93cMpN.png" alt="题图"><span class="image-caption">题图</span>

<h2 id="Hexo-Next-标签"><a href="#Hexo-Next-标签" class="headerlink" title="Hexo/Next 标签"></a>Hexo/Next 标签</h2><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>效果：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">这是一行代码<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>代码：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">{% codeblock lang:command %}
这是一行代码
{% endcodeblock %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h3><p>效果：</p>
<blockquote class="blockquote-center">
<p>四郎，那年杏花微雨，你说你是果郡王。也许从一开始，便都是错的。</p>

</blockquote>

<p>代码：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">{% cq %}
四郎，那年杏花微雨，你说你是果郡王。也许从一开始，便都是错的。
{% endcq %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="note"><a href="#note" class="headerlink" title="note"></a>note</h3><p>效果：</p>
<div class="note default"><p>default</p>
</div>
<div class="note primary"><p>primary</p>
</div>
<div class="note success"><p>success</p>
</div>
<div class="note info"><p>info</p>
</div>
<div class="note warning"><p>warning</p>
</div>
<div class="note danger"><p>danger</p>
</div>

<p>_config 文件配置关键字：note, 我的配置如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">style: flat
icons: true
border_radius: 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>代码：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">{% note default %}
default
{% endnote %}
{% note primary %}
primary
{% endnote %}
{% note success %}
success
{% endnote %}
{% note info %}
info
{% endnote %}
{% note warning %}
warning
{% endnote %}
{% note danger %}
danger
{% endnote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="label"><a href="#label" class="headerlink" title="label"></a>label</h3><p>_config 文件配置关键字：Label , 需要用的话把值设为true即可。<br>效果：</p>
<mark class="label default">默认</mark>
<mark class="label primary">主要</mark>
<mark class="label success">成功</mark>
<mark class="label info">信息</mark>
<mark class="label warning">警告</mark>
<mark class="label danger">危险</mark>

<p>代码：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">{% label default@默认 %}
{% label primary@主要 %}
{% label success@成功 %}
{% label info@信息 %}
{% label warning@警告 %}
{% label danger@危险 %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<h3 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h3><p>效果：</p>
<div class="tabs" id="emoji"><ul class="nav-tabs"><li class="tab active"><a href="#emoji-1">emoji 1</a></li><li class="tab"><a href="#emoji-2">emoji 2</a></li><li class="tab"><a href="#emoji-3">emoji 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="emoji-1"><p><span class="emoji" alias="smile" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8">😄</span></p></div><div class="tab-pane" id="emoji-2"><p><span class="emoji" alias="laughing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p></div><div class="tab-pane" id="emoji-3"><p><span class="emoji" alias="relaxed" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8">☺</span></p></div></div></div>


<h3 id="引用句子"><a href="#引用句子" class="headerlink" title="引用句子"></a>引用句子</h3><p>代码：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">{% blockquote 王小波 http://www.bwsk.com/xd/w/wangxiaobo/hjsd/index.html 黄金时代 %}
那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。
{% endblockquote %}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>效果：</p>
<blockquote><p>那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。</p>
<footer><strong>王小波</strong><cite><a href="http://www.bwsk.com/xd/w/wangxiaobo/hjsd/index.html">黄金时代</a></cite></footer></blockquote>

<h3 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h3><p>在 <a href="https://hexo.io/docs/tag-plugins.html">Hexo标签</a> 和 <a href="https://theme-next.iissnan.com/tag-plugins.html">Next内置标签</a> 可以找到。</p>
<h2 id="自定义标签"><a href="#自定义标签" class="headerlink" title="自定义标签"></a>自定义标签</h2><h3 id="数字块"><a href="#数字块" class="headerlink" title="数字块"></a>数字块</h3><p>参考 <a href="https://blog.guanqr.com/study/blog/hexo-theme-next-customization/#%E6%95%B0%E5%AD%97%E5%9D%97">这个</a> 设置。</p>
<p>效果：<br><span id="inline-toc">1.</span><br><span id="inline-toc">2.</span><br><span id="inline-toc">3.</span></p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><span id="inline-toc">1.</span><a href="https://blog.guanqr.com/study/blog/hexo-theme-next-customization">Hexo-NexT 主题个性优化</a><br><span id="inline-toc">2.</span><a href="https://yfzhou.coding.me/2018/08/27/Hexo-Next%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%BB%E9%A2%98%E4%BC%98%E5%8C%96%EF%BC%89/">Hexo-Next搭建个人博客（主题优化）</a></p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>给博客的Https证书续期</title>
    <url>/HttpsUpdate/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/08/01/R4f1SvM9Q6wNID3.png">

<h2 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h2><p>前几天突然发现博客的Https证书失效了，网站又被标记成了<mark class="label danger">不安全</mark>。</p>
<p>找到了之前写过关于申请证书的<a href="https://jmyblog.top/SiteBrokenFix/">文章</a>，发现是在coding pages里申请的证书：</p>
<img data-src="https://i.loli.net/2020/04/23/Skv28M5PJiC1Fwo.png">

<p>之前的证书状态正常，现在进去一看，证书状态已经失效了。点了页面上重新申请的按钮，结果申请失败。</p>
<p>网上搜索了下报错信息，我果然不是一个人，但大家的情况又跟我不一样，所以一时也没找到合适的解决办法。</p>
<p>这个时候突然发现自己之前写的文章有这么一句话：</p>
<pre><code>一开始SSL证书申请失败，后来按照网上的解决方案去域名解析把GitHub解析暂停就申请成功了。
</code></pre>
<p>好像之前遇到过申请失败的问题，所以按照这个操作，先去把GitHub解析暂停，再点击申请证书，这下成功了，刷新了下博客，证书的有效期已经更新到10月底了：</p>
<img data-src="https://i.loli.net/2020/07/30/aLlXtRmycKpk2Ji.png">

<p>我得意的笑 <span class="emoji" alias="grin" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f601.png?v8">😁</span></p>
<h2 id="知其所以然"><a href="#知其所以然" class="headerlink" title="知其所以然"></a>知其所以然</h2><p>问题是解决了，但是作为一个好学的孩子，不但要知其然，还要知其所以然。</p>
<p>首先，Coding Pages给我们申请的证书有效期是三个月，是由 <a href="https://letsencrypt.org/zh-cn/getting-started/">Let’s Encrypt</a> 签发的，它是国外一个免费的证书颁发机构（CA）。</p>
<div class="note info"><p>Let’s Encrypt的官网说：</p>
<p>要从 Let’s Encrypt 获取您网站域名的证书，您必须证明您对域名的实际控制权。您可以在您的 Web 主机上运行使用 ACME 协议的软件来获取 Let’s Encrypt 证书。</p>
</div>

<p>这个意思简单，就是说你得证明这个域名是你的，我们才给你发证书。那咋证明呢？其实也简单，只要Let’s Encrypt能在国外通过访问站点获得域名验证信息，就能验证域名所有权了。</p>
<p>但是根据我的域名解析设置，Coding Pages的解析线路是默认，Github Pages解析线路是境外，所以根据域名解析规则，<mark class="label primary">Let's Encrypt在国外只能访问到Github Pages的域名验证信息，而无法访问Coding Pages的域名验证信息。</mark><br>所以Coding Pages在帮我们申请证书时，就无法通过Let’s Encrypt的域名验证，证书也就申请不到了：</p>
<img data-src="https://i.loli.net/2020/04/23/RPNsrEyMSUV9uD1.png">

<p>所以这就是为什么用Coding Pages申请证书时，需要先把Github Pages的解析暂停掉了。不过别忘了证书申请成功之后，再把Github Pages的解析重新启动哦。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><span id="inline-toc">1.</span> <a href="https://zwen.net/githubcodingblog.html">Github+Coding国内外博客双线部署并支持全站https</a><br><span id="inline-toc">2.</span> <a href="https://blog.csdn.net/dataiyangu/article/details/83374438">hexo 托管到coding，pages申请ssl/tls证书失败</a></p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>一次被征服的爬山之旅</title>
    <url>/HuaShanTravel/</url>
    <content><![CDATA[<div class="note primary"><p>死党L君一直想去爬华山，大学的时候就多次提起，但周围的人都拒绝，因为好多人说爬华山挑战太大了。但L君听到劝说反而越挫越勇，非要去征服华山不可，于是拉着我一起去。我之前也爬过几次山，所以也颇有想征服华山的雄心，于是爬山小队就这样成立了<span class="emoji" alias="muscle" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png?v8">💪</span></p>
</div>

<h2 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h2><p>6.1日，周六，晴天，沐浴着傍晚的热气，L君和我踏上了征程。<br>网上攻略之后，我们决定夜爬华山，然后在山上看日出。西安离华山景区并不远，于是我们订了最近的一班高铁，20分钟后就到了华山站。<br>出了高铁站，就到了华阴市，在站外找了家小吃店先填填肚子，发现店里还坐着许多穿着统一服饰的外国友人，想必也是慕名而来爬华山的，因为我在外企工作，L君怂恿我去和他们搭讪，我白了一眼继续吃碗里的炒拉条<span class="emoji" alias="relieved" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">😌</span><br>高铁站出口不远处就有一个公交始发点，终点站恰好就是华山景区，所以和L君一起等待下班发车，陆续来了不少人，大部分都是来爬华山的。<br>公交车摇摇晃晃10多分钟后就来到了华山景区外部，不过离真正的景区入口还要走一段路。但这里已经有不少卖纪念品的小店，还有一些卖祈福飘带之类的小摊，我和L君向来是无宗教无神论者，所以什么都没买。路上有卖祈福带的大妈走在旁边劝我们买一个，图个吉祥，我微笑拒绝并言道「没关系，我们心中有吉祥」，身后的游客忍俊不禁，被我逗笑<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><br><img data-src="https://i.loli.net/2021/06/29/7XOW3F9eE1HtwNC.jpg" alt="景区入口前的石板路"><span class="image-caption">景区入口前的石板路</span><br>跟着人流往前走，就来到了景区入口，看着里面望不到尽头的爬山之路，我们在门口买了几瓶水，做了一番心理建设才刷身份证从闸口进入。刷身份证的时候，我们发现机器有故障，就算没有用身份证买票也可以进入，L君和我对视并言道「所以我们买票的意义是什么」，我心想「可能是为了吉祥？」<br>傍晚7:30左右，此时天渐渐黑了下来，我们向景区深处走去。一开始，L君一马当先，还时不时回头催促着我，我说「你不懂，这是保存体力的爬山策略」，L君默然并继续往前走，爬山之旅正式开始了<span class="emoji" alias="two_women_holding_hands" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f46d.png?v8">👭</span><br><img data-src="https://i.loli.net/2021/06/29/YoWtdXJMHNFC1fA.jpg" width="400" height="500" alt="开始爬山和L君蹒跚的背影"><span class="image-caption">开始爬山和L君蹒跚的背影</span></p>
<h2 id="上山"><a href="#上山" class="headerlink" title="上山"></a>上山</h2><h3 id="我的自闭式爬山"><a href="#我的自闭式爬山" class="headerlink" title="我的自闭式爬山"></a>我的自闭式爬山</h3><p>一开始，脚下的路都是上图的石板路，我的状态还是比较轻松的，一路上和L君欣赏景色，斗嘴扯皮倒也十分有趣。<br>天色渐渐黑了，我们边走边歇，路边也有不少小商铺卖水的，也有凳子供游人歇息。中间看到一个华山客栈，门脸装修竟然像个酒店，真是神奇。<br><img data-src="https://i.loli.net/2021/07/05/QhtJs38iRkSW7rd.jpg" alt="华山客栈"><span class="image-caption">华山客栈</span><br>渐渐的，就不那么有趣了。<br>走了不知多久，大概一个多小时，脚下的路变成了石阶，石阶两侧有锁链供游客扶着，开始了名副其实的「爬山」，又接着爬了一个多小时，我开始自闭了。<br>此时的L君状态依然不错，精神充沛，远远的走在前边，不时停下来等我，鼓励我向上爬。<br><img data-src="https://i.loli.net/2021/06/29/hHIt48elyTnCfYb.jpg" width="400" height="500" alt="居高临下的L君(摄于晚上9:30)"><span class="image-caption">居高临下的L君(摄于晚上9:30)</span><br><img data-src="https://i.loli.net/2021/06/29/CRhljMwQD4ISpLX.jpg" width="400" height="500" alt="L君眼中自闭的我"><span class="image-caption">L君眼中自闭的我</span><br>不久后，L君和我开始了一系列爬山对话。</p>
<blockquote>
<p><strong>爬山对话一</strong><br>我：「L君，我以后叫你牛L好不好，你真牛<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>」<br>L君：…<br><strong>爬山对话二</strong><br>L君：「你看人家小孩子都爬的比你快<span class="emoji" alias="unamused" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f612.png?v8">😒</span>」<br>我：「你要是也能背着我上山，我也叫你爸爸<span class="emoji" alias="triumph" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f624.png?v8">😤</span>」<br><strong>…</strong></p>
</blockquote>
<p>这样持续了一会，石阶的角度越来越趋于垂直，眼前出现了第一个「云梯」。天色太黑看不清楚全貌，但还是一层层的石阶，两侧都是铁链，还有彩灯照着阶梯，石梯几乎是90度往上的，仰着头依稀可见出口。<br><img data-src="https://i.loli.net/2021/07/05/3hp7ZLPBA2K8lDw.jpg" width="400" height="500" alt="网图"><span class="image-caption">网图</span><br>白天差不多是这样的：<br><img data-src="https://i.loli.net/2021/07/05/hmSR7Za98GPTv1x.jpg" width="400" height="500" alt="网图"><span class="image-caption">网图</span><br>于是我和L君就开始徒手往上爬，爬到中间回头往下看，黑压压全是人头。这时若有一人没有抓稳掉下去，下边的人就全完了，因为都是徒手爬，没有任何保护措施，非常危险。<br>忘了这段石梯叫啥名字了，但后来发现这并不是「云梯」，「云梯」人家长这样：<br><img data-src="https://i.loli.net/2021/07/05/ZSq4g8BXmDeKT3w.jpg" width="400" height="500" alt="大于90度的云梯"><span class="image-caption">大于90度的云梯</span><br>总之爬完这段，我和L君以为自己也是见过世面的人了，但事实证明我们还是太嫩了。因为后面我们还要爬很多个这样的石梯，而且一次比一次长，有这样的：<br><img data-src="https://i.loli.net/2021/07/05/L3BUgpu9aOCkeND.jpg" alt="石梯1-网图"><span class="image-caption">石梯1-网图</span><br>这样的：<br><img data-src="https://i.loli.net/2021/07/05/dW597zrGXJmqUjH.jpg" width="400" height="500" alt="石梯2-网图"><span class="image-caption">石梯2-网图</span><br>好吧，晚上拍的照片太少了。<br>到了中峰，有一个广场大小的平台，上边有很多卖小吃的。和L君稍事歇息，又开始向东峰进发，这时我们看到了一条超长的天梯，两边是光秃秃的山壁。走在其上，左右望去非常空旷，依稀可见城市点点星光，不敢想象白天在这爬是什么心情。<br><img data-src="https://i.loli.net/2021/07/05/z8sfYG4CD2iFw5H.png" alt="非常贴切的网图"><span class="image-caption">非常贴切的网图</span><br>后来，这样陡峭的石阶终于爬完了，之后的路就比较平坦了，我也已经完全自闭了，L君也是强撑着，我们完全凭着意志力，互相鼓励爬到了峰顶。</p>
<h3 id="爬到山顶看日出"><a href="#爬到山顶看日出" class="headerlink" title="爬到山顶看日出"></a>爬到山顶看日出</h3><p>到了峰顶，拿出保暖的衣服穿上，坐在峰顶的石壁上等待日出。<br>此时是凌晨4点，从傍晚7点半开始，我和L君已经不停歇的爬了8个多小时了，比我一天搬砖的时间都长。从最开始的石板路，到后来的石阶，再到爬天梯，最后到峰顶，简直佩服自己。<br>周围有一些人搭起了帐篷，对比人家的专业，我和L君只能抱紧贫穷的自己。<br>离日出还有2个小时，我们实在撑不住，只能在石壁上蜷缩着闭眼眯一会，但也无法真正休息，只是趴着不动而已。<br>周围的人很多，峰顶上地方不大，坐在一块非常挤，后来根本躺不下，我和L君只能坐着靠在一起，此时我脑海里一直在想一个问题，我为什么要来这。。。<br>到了5点多，天色开始露出鱼肚白，日出也快要到来了。<br><img data-src="https://i.loli.net/2021/07/05/3c8aMCEYKNRLOZG.jpg" alt="天色渐明"><span class="image-caption">天色渐明</span><br><img data-src="https://i.loli.net/2021/07/05/pdWa1YqMhflI4Ls.jpg" alt="远方的鱼肚白"><span class="image-caption">远方的鱼肚白</span><br>5点30分，日出开始了，一轮红日慢慢从天边开始升起：<br><img data-src="https://i.loli.net/2021/07/05/Dce4ji9s5gmKYqF.jpg" width="450" height="600" alt="日出"><span class="image-caption">日出</span><br><img data-src="https://i.loli.net/2021/07/05/XVpYM32QfAhsULE.jpg" alt="日光渐盛"><span class="image-caption">日光渐盛</span><br>此刻，所有人都虔诚的看着太慢慢升起，也纷纷拿起手机和相机举到头顶，我和L君也一样。<br><img data-src="https://i.loli.net/2021/07/05/erHdb6kiYZEUWlx.jpg" width="450" height="600" alt="石壁上的人们"><span class="image-caption">石壁上的人们</span></p>
<h2 id="下山"><a href="#下山" class="headerlink" title="下山"></a>下山</h2><p>日出看完了，我和L君抖着腿迫不及待的开始下山，一路上才看到昨晚都经历了什么，此刻的我们只想回家躺在床上睡一觉。<br>相比于上山的8小时，我们只想走到下边坐缆车下山，此刻我的状态还不错，毕竟最难的时候已经过去了，日出也看完了，边走边欣赏周围的景色。<br><img data-src="https://i.loli.net/2021/07/05/1xe9niOKuzDgaNZ.jpg" alt="华山群峰"><span class="image-caption">华山群峰</span><br><img data-src="https://i.loli.net/2021/07/05/qvS24sVkzbLQYfg.jpg" alt="险峻的山峰"><span class="image-caption">险峻的山峰</span><br>相比于我的闲适，L君显然非常自闭，话也不想多说，满脸疲惫。但离缆车售票处还有很长一段距离，只能咬牙往前走。终于在8点左右坐上了缆车，车外是险峻的山峰，缆车从山峰之间穿过时，也是刺激万分，此刻若是缆车故障，我和L君铁定是尸骨无存了。<br><img data-src="https://i.loli.net/2021/07/05/kixcb93LC2I8zlq.jpg" width="450" height="600" alt="梦想中的缆车"><span class="image-caption">梦想中的缆车</span></p>
<h2 id="回家"><a href="#回家" class="headerlink" title="回家"></a>回家</h2><p>到了山下，恰好有去西安的大巴，和L君立马安排了票。一上车，我们就分躺两边，直接睡在座椅上，所幸此时回程车人并不多，我们就一路躺到了车站。<br>然而回家还要转一次地铁和公交，我和L君望着彼此疲惫的脸庞相视一笑，说这辈子再也不爬华山了。<br>地铁到站后，也没有力气转公交了，直接打车回了家，华山之旅就这样结束了。<br>所以爬华山，还是劝一个讨厌的人去吧。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>爬山</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础小练习</title>
    <url>/Java-basic/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/09/hznIgy4mZYQ7Rwc.png">

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于工(yi)作(qing)原因，最近有很多学习的机会[手动狗头]。<br>测试小姐姐们聚在一起搞了个Java小培训，目的是为了练习用Java和Selenium搭建自动化测试框架。又重新回顾了Java的基础知识，包括：</p>
<ul>
<li><a href="https://www.imooc.com/learn/85">Java1</a>: 数组/循环/运算符/方法</li>
<li><a href="https://www.imooc.com/learn/124">Java2</a>: 类/封装/继承/多态</li>
<li><a href="https://www.imooc.com/learn/110">Java3</a>: 异常/字符类/集合框架(Collection&amp;Map)<br>温故知新，为了证明自己又学了一遍，以及不能让练习的代码白写，就有了这篇博客<span class="emoji" alias="see_no_evil" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8">🙈</span></li>
</ul>
<h2 id="代码练习"><a href="#代码练习" class="headerlink" title="代码练习"></a>代码练习</h2><p>下边是学习过程中遇到的一些代码练习题，以及一些嗑过的知识点，总结一下。</p>
<h3 id="模拟借书"><a href="#模拟借书" class="headerlink" title="模拟借书"></a>模拟借书</h3><pre class="line-numbers language-command" data-language="command"><code class="language-command">//练习点：try catch

    String[] books = {"中国通史", "围城", "沉默的大多数", "古文观止", "局外人"};

    public void CheckArg(int input)
    {
        if(!(input==1 || input==2))
            throw new IllegalArgumentException();
    }

    public void SearchWithNo()
    {

        Scanner sc = new Scanner(System.in);
        System.out.println("请输入图书序号：");
        int index = sc.nextInt();

        try{
            String name = books[index];
        }
        catch (ArrayIndexOutOfBoundsException e)
        {
            System.out.println("该序号不存在～");
        }

        System.out.println("找到了！图书为：" + books[index]);
    }

    public void SearchWithName()
    {
        Scanner sc = new Scanner(System.in);
        System.out.println("请输入图书名称：");
        String name = sc.next();
        boolean flag = false;

        for (String book : books) {
            if(book.equals(name))
            {
                flag = true;
                break;
            }
        }

        if(flag)
            System.out.println("该图书存在～");
        else
            System.out.println("该图书不存在～");

    }

    public void Process(int arg)
    {
        if(arg == 1)
        {
            SearchWithNo();
        }
        else{
            SearchWithName();
        }
    }

    public static void main(String[] args) {

        HelloWorld hello = new HelloWorld();

        while (true)
        {
            System.out.println("请输： 1 -- 按照序号查找， 2 -- 按照书名查找");
            Scanner sc = new Scanner(System.in);
            try{
                int input = sc.nextInt();
                hello.CheckArg(input);
                hello.Process(input);
            }
            catch (InputMismatchException e)
            {
                System.out.println("请输入数字哦～");
            }
            catch (IllegalArgumentException e)
            {
                System.out.println("非法操作序号～");
            }
        }

    }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="校验邮件和文件名"><a href="#校验邮件和文件名" class="headerlink" title="校验邮件和文件名"></a>校验邮件和文件名</h3><pre class="line-numbers language-command" data-language="command"><code class="language-command">//练习点：string类方法

   public void CheckFile(String file)
   {
       if(file.contains(".") &amp;&amp; file.indexOf(".")!=0 &amp;&amp; file.endsWith(".java"))
           System.out.println("文件名正确");
       else
           System.out.println("文件名无效");
   }

   public void CheckEmail(String email)
   {
       if(email.indexOf("@") &lt; email.indexOf(".") &amp;&amp; !email.endsWith("."))
           System.out.println("邮件名正确");
       else
           System.out.println("邮件名无效");
   }

   public static void main(String[] args) {

       HelloWorld hello = new HelloWorld();

       System.out.println("输入文件名：");
       Scanner sc = new Scanner(System.in);
       String file = sc.next();
       hello.CheckFile(file);

       System.out.println("输入邮件名：");
       Scanner sc1 = new Scanner(System.in);
       String email = sc1.next();
       hello.CheckEmail(email);

   }<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><span id="inline-toc">1. </span>深入理解对象引用及其赋值</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">Vehicle veh1 = new Vehicle();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p><a href="https://www.cnblogs.com/focuschen/articles/2497768.html">这篇文章</a>让我明白了上边的代码发生了什么。</p>
<p><span id="inline-toc">2. </span>关于StringBuilder的equals方法</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">    public static void main(String[] args) {
        StringBuilder s1 = new StringBuilder("123");
        String s2 = s1.toString();
        String s3 = s1.toString();
        System.out.println(s1.equals(s2)); //false, 由于StringBuilder类没有重写父类Object类的equals方法, 所以比较的还是s1和s2的地址，和==作用相同
        System.out.println(s1==s2); //编辑器报错，因为s1是StringBuilder类型，s2是String类型，不同类型的数据不能用==比较
        System.out.println(s2.equals(s3)); // true, String类重写了Object类的equals方法，比较的是s2和s3地址中的内容
        System.out.println(s2 == s3); //false, ==比较的是两个引用的地址
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><span id="inline-toc">3. </span>通过重写Object超类的equals方法，实现比较两个类的内容相等</p>
<p>Object超类的equals方法调用了 == 比较两个对象的地址，但更多时候我们需要它来比较两个对象的内容，所以需要重写。这也是热门面试题之一。<br>怎么做，<a href="https://blog.csdn.net/javazejian/article/details/51348320">这篇文章</a>写得很明白。</p>
<p><span id="inline-toc">4. </span><a href="https://blog.csdn.net/ceovip/article/details/52963285">关于Map的Key和Value能不能为空</a></p>
<p>其实还写了很多代码来着，不过就不贴了，自动化框架搭建好之后也会写博客总结的<span class="emoji" alias="muscle" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4aa.png?v8">💪</span></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透测试初识</title>
    <url>/Penetration-Test/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/06/e9Yd8ylbkxcJhOE.jpg">

<p>本文参考 <a href="https://github.com/judasn/hexo-blog/blob/master/2016/02/My-Learning-Way.md">怎么学习新东西</a> 书写。</p>
<h2 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h2><mark class="label info">百科定义：</mark> 为了证明网络防御按照预期计划正常运行而提供的一种机制。
<p><enter></enter></p>
<mark class="label info">通俗定义：</mark> 通过模拟黑客攻击的方式检查目标信息安全运行状况的方法。


<h2 id="为什么"><a href="#为什么" class="headerlink" title="为什么"></a>为什么</h2><mark class="label primary">解决啥问题</mark>
<p>找到目标信息安全防护中存在的问题，汇总研究，加固不足之处，提升目标安全等级。</p>
<mark class="label primary">没有它之前怎么做</mark>
<p>只是按照规范要求定期更新安全策略和程序，时时给系统打补丁，用安全软件确保所有补丁都已打上，但并没有进行全面检测和评估。</p>
<h2 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h2><h3 id="百科示例流程"><a href="#百科示例流程" class="headerlink" title="百科示例流程"></a>百科示例流程</h3><p><span id="inline-toc">1.</span> 测试之前</p>
<p>分析测试风险，制定测试方案初稿，通过后与被测机构签订测试协议，确定：</p>
<ul>
<li>测试方法(黑盒/白盒/灰盒)</li>
<li>目标(服务器/数据库/Web网站…)</li>
<li>测试细节(是否允许数据损坏/接内网还是外网/…)</li>
</ul>
<p><span id="inline-toc">2.</span> 测试过程</p>
<mark class="label success">信息收集</mark>

<p>测试者利用各种公开信息收集目标的网络资产(如域名、IP、服务器、人员组织架构等)，需要熟练使用各种网络信息工具。</p>
<mark class="label success">技术测试</mark>

<p>针对收集到的网络资产进行详细的漏洞测试，比如针对Web系统做SQL注入、命令执行、XSS攻击等。<br>需要熟悉各种测试工具，比如burpsuite等等。</p>
<mark class="label success">人员测试</mark>

<p>对人员的安全意识进行测试，如发送钓鱼邮件、欺骗人员获得某种口令等。(之前在公司就收到过内部测试故意发出来的钓鱼邮件，幸好我机智没有点开，否则可能要被谈话)</p>
<p><span id="inline-toc">3.</span> 测试之后</p>
<p>测试者对测试结果进行汇总，并产出报告，交付给目标的管理员。然后帮助目标修复漏洞，修复完成后进行复测，检查漏洞是否修复完毕。</p>
<h3 id="视频-文档教程"><a href="#视频-文档教程" class="headerlink" title="视频/文档教程"></a>视频/文档教程</h3><p><a href="https://www.imooc.com/learn/1032">这里</a> 有一个渗透测试免费入门视频教程.</p>
<h3 id="Demo实战"><a href="#Demo实战" class="headerlink" title="Demo实战"></a>Demo实战</h3><p>因为渗透测试是需要在征得被测机构同意后进行的测试活动，作为一个遵纪守法的好公民，我找到了一个知名的Web渗透测试练习应用程序，它就是 <a href="https://github.com/bkimminich/juice-shop#docker-container-----">juice shop</a>:<br><img data-src="https://i.loli.net/2020/05/06/qzf5HgmRUFyc6Kj.png"><br>它是由权威组织 <a href="https://owasp.org/">OWASP</a> 推出的一款web应用程序，里面包含了最常见也最重要的Web安全漏洞，而且会根据新技术不断更新，在 <a href="https://pwning.owasp-juice.shop/">这里</a> 你可以获得如何开始在juice shop玩耍的教程。下边是我自己实践过的几个例子：</p>
<p><span id="inline-toc">1.</span> 利用前端漏洞提交零星反馈</p>
<p>未评分时反馈页面提交按钮是不可点击的，然而浏览页面代码可以发现，<mark class="label primary">disable=true</mark> 用来控制提交按钮是否可点击，那我们就删掉它，达到提交零星评价的目的。</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNDY2MTQyNjQxMg==" frameborder="0" 'allowfullscreen'=""></iframe>


<p><span id="inline-toc">2.</span> 通过暴露的ftp文件夹访问机密文件</p>
<p>要访问机密文件，那我们就得找到机密文件的路径。首先我们浏览网站页面，看有没有什么特殊链接可以点击，然后在“关于我们”页面中发现了一个文案贱贱的链接，点开之后就可以发现有一个隐藏的ftp文件夹，可以浏览里面的机密文件。</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNDY2MjgwODAwOA==" frameborder="0" 'allowfullscreen'=""></iframe>


<p><span id="inline-toc">3.</span> 利用sql报错登录管理员账户</p>
<p>首先打开登录页面，按照sql注入一般操作，输入特殊字符单引号，然后输入任意密码，点击登录之后，会发现页面有一个异常报错。就顺便解决了报错处理不当的挑战。<br>然后在login请求中找到具体SQL报错信息：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">SELECT * FROM Users WHERE email= 'xxx' AND password = 'xxx' ......<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>由此我们可以根据这个信息，构造万能密码 <mark class="label primary">' or 1--</mark>, 第一个单引号用来隔断email后边的单引号， 然后加上逻辑条件或 or，给出数字1让条件永远为真，再用 – 注释掉后边的语句。<br>输入任意密码，点击登录，就可以登录成功了，而且根据挑战成功提示，登录的还是管理员账号，可以算是意外之喜了。</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNDY2MjkxNzA4NA==" frameborder="0" 'allowfullscreen'=""></iframe>


<p><span id="inline-toc">4.</span> 浏览代码访问管理员页面</p>
<p>上一条我们已经登录了管理员账号，但浏览网站后却发现和普通账号登录之后的显示并没有什么区别，这可不行，我们既然登录了管理员账号，一定是要找到一些管理员才有权限访问的东西的。但页面又找不到什么信息，所以先从网站源文件入手。<br>打开网站resource, 发现一个<mark class="label primary">main.js</mark>的代码文件，并尝试搜索admin, 结果找到了类似于路径的信息，根据其他路径的显示，我们可以直接加上后缀 <mark class="label primary">administration</mark> ，回车之后进入管理员页面，并解决挑战。</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNDY2MjgxNzQ4MA==" frameborder="0" 'allowfullscreen'=""></iframe>

<p><span id="inline-toc">5.</span> 编辑请求访问别人的购物车</p>
<p>打开管理员页面，我们可以发现有很多已注册的用户。所以我们就来实现登录用户Jim看到管理员的购物车信息。<br>首先看一下管理员的购物车请求和里面都有啥，可以看到请求的url是 <mark class="label primary">rest/basket/1</mark>, 记住它。<br>然后登出管理员，同样利用SQL注入构造登录字符串 <mark class="label primary">email' and 1--</mark> 登录Jim的账号。此时也解决了登录jim的挑战。</p>
<div class="note info"><p>其实还有别的方式可以登录jim, 比如利用burpsuite爆破直接破解密码，这个我还没学会，不过上边的免费课程会讲到burpsuite的使用。<br>还可以利用社会工程学的方式，通过回答jim账号的安全问题(你最年长的兄弟名字是啥)来登录账号，官网给出的解释是由jim可以想到一个知名的演员叫James, 通过百科可以查到他的兄弟名字，然后就解答了问题。这点我不能理解，也想不到，或许是文化不同吧，不过这个例子也一定程度上反映了社会工程学是怎么用的。</p>
</div>

<p>登录Jim之后我们就看他的购物车请求是<mark class="label primary">rest/basket/2</mark>， 然后通过charles工具给这个请求打个断点，刷新页面之后，将请求改为<mark class="label primary">rest/basket/1</mark>，发送之后就可以在登录jim账号的情况下，看到管理员的购物车了，挑战解决成功。</p>
<div class="note warning"><p>需要注意的是，在用charles监听本地的时候，需要将本地 <a href="http://localhost:3000/">http://localhost:3000</a> 改为 <a href="http://localhost.charlesproxy.com:3000/">http://localhost.charlesproxy.com:3000</a><br>这里是<a href="https://www.charlesproxy.com/documentation/faqs/localhost-traffic-doesnt-appear-in-charles/">charles官网</a>的说明。</p>
</div>

<iframe height="498" width="510" src="https://player.youku.com/embed/XNDY2MjgxMzE0NA==" frameborder="0" 'allowfullscreen'=""></iframe>

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jianshu.com/p/24a39068dbf9">结合OWASP Top 10 初识安全测试</a></li>
<li><a href="http://shaobaobaoer.cn/archives/510/owasp-juice-shop#0x03_Information_Leakage">OWASP Juice Shop 实战报告与解析</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>OWASP</tag>
      </tags>
  </entry>
  <entry>
    <title>博客Pages服务升级</title>
    <url>/PageServiceUpdate/</url>
    <content><![CDATA[<img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1graz9zi8goj61qm15oah202.jpg">

<h2 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h2><p>首先我的博客是同时部署在GithubPages和CodingPages上的，GithubPages提供国外访问，CodingPages加速国内访问。两个服务都加了我的自定义域名 <mark class="label info">jmyblog.top</mark>，且都开启了Https。</p>
<p>两个服务给我的自定义域名申请的Https证书都是由国外的Let’s Encrypt机构签发，一般这个证书有效期只有三个月。由于我的域名解析设置，在证书快到期时，GithubPages可以帮我自动续申请证书，而CodingPages却不能，这就导致证书到期后在国内不能通过Https的方式访问我的博客，所以每次证书快到期时，我都要登录CodingPages <a href="https://jmyblog.top/HttpsUpdate/">手动续申证书</a>。</p>
<p>去年的时候，CodingPages服务就一直给我发短信说是升级啥的，但我没有关注，我一直是个破罐子破摔的人，只要它没有停服，博客还能访问就懒的升级。<br>直到有一天我打开博客的时候出现异常，有时是直接访问不了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grazjgogovj624u10stbw02.jpg" alt="1622540423142.jpg"><span class="image-caption">1622540423142.jpg</span><br>有时是一些报错，好像是https证书过期之类：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grazjzp6g2j61xo1g8n5f02.jpg" alt="1622540733603.jpg"><span class="image-caption">1622540733603.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grazkajnejj61ww15ywjr02.jpg" alt="1622540555676.jpg"><span class="image-caption">1622540555676.jpg</span><br>所以想先手动更新一波证书，然而登录Coding之后发现并不是证书的问题，而是CodingPage旧版直接停服了，必须更新才行：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grazp0008pj62l20wuk0u02.jpg" alt="1622532281585.jpg"><span class="image-caption">1622532281585.jpg</span><br>于是新的一波折腾又开始了，为了以后温故知新，我把折腾过程全程截图保存了下来，就有了这篇博客。</p>
<h2 id="CodingPages升级腾讯云服务"><a href="#CodingPages升级腾讯云服务" class="headerlink" title="CodingPages升级腾讯云服务"></a>CodingPages升级腾讯云服务</h2><h3 id="绑定腾讯云账号"><a href="#绑定腾讯云账号" class="headerlink" title="绑定腾讯云账号"></a>绑定腾讯云账号</h3><p>先按照升级提示绑定腾讯云账号，看来腾讯是和Coding有某种关系了(后来搜了下好像是CodingPages被腾讯收购了，以后底层全用腾讯云服务，Coding这边只是一个UI的壳子)，总之不管他们啥关系，先升级再说，账号绑定完成后又开启了新的关卡：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grb00pbdghj62e80wkq9s02.jpg" alt="1622538814928.jpg"><span class="image-caption">1622538814928.jpg</span><br>然后按照指示一顿操作，终于可以使用新版Coding Pages了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyc2uyn8j62g812ijz702.jpg" alt="1622539615813.jpg"><span class="image-caption">1622539615813.jpg</span></p>
<h3 id="旧版网站升级"><a href="#旧版网站升级" class="headerlink" title="旧版网站升级"></a>旧版网站升级</h3><p>由于我是要升级之前的网站，所以进入旧版网站列表，找到之前的静态网站，在右上角看到了「升级至新版」的入口：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcydne1euj62780kstcx02.jpg" alt="1622539639577.jpg"><span class="image-caption">1622539639577.jpg</span><br>于是果断进入，选择相应的网站类型，最开始我选择了自己使用的Hexo，后来部署报错了，是因为我并没有把Hexo的配置文件上传到仓库(因为里面有许多我自己使用的插件私钥和密码，不能上传到public的仓库中)。所以后来又选择了静态网站，才部署成功：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyez5zm5j60qw0lhabu02.jpg" alt="1622539686983.jpg"><span class="image-caption">1622539686983.jpg</span><br>之后又按照提示，去阿里云更改域名的CNAME设置：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd41p2dwuj61ac0g840o02.jpg" alt="1623303229231.jpg"><span class="image-caption">1623303229231.jpg</span><br>完成设置后(顺便改了下网站名字)，新版的网站就开始部署了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcygr10k3j61bs0mewha02.jpg" alt="1622539996713.jpg"><span class="image-caption">1622539996713.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyh19l0uj613r07y74z02.jpg" alt="1622540194028.jpg"><span class="image-caption">1622540194028.jpg</span><br>部署成功后，看到基本信息，有两个网站地址，一个是我的自定义域名，一个是CodingPages提供的访问域名：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd4c4r47uj625210cq8e02.jpg" alt="1623303831826.jpg"><span class="image-caption">1623303831826.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyhzt9osj624w0pudm002.jpg" alt="1622540298235.jpg"><span class="image-caption">1622540298235.jpg</span></p>
<h3 id="申请腾讯云证书"><a href="#申请腾讯云证书" class="headerlink" title="申请腾讯云证书"></a>申请腾讯云证书</h3><p>切换到自定义域名页面，发现Https证书还在审核中：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyk7l6l7j61620f2jtx02.jpg" alt="1622541431872.jpg"><span class="image-caption">1622541431872.jpg</span><br>点击「审核中」，就跳转到了腾讯云页面，新的关卡又增加了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcykxfwymj61ag0ic0v902.jpg" alt="1622541560047.jpg"><span class="image-caption">1622541560047.jpg</span><br>所以根据提示步骤申请证书，进行域名验证：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyl51q8ej61610j0n0502.jpg" alt="1622541615687.jpg"><span class="image-caption">1622541615687.jpg</span><br>去阿里云添加一条TXT的记录进行验证(证书申请成功后就可以删掉这条验证了)：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcyloweifj61040kuwg902.jpg" alt="1622541722382.jpg"><span class="image-caption">1622541722382.jpg</span><br>验证成功后，到了使用证书这一步，不过我们的证书其实已经签发成功了，并不需要自己手动安装，所以忽略掉后边的步骤：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcym15hk2j610y0p076f02.jpg" alt="1622541808007.jpg"><span class="image-caption">1622541808007.jpg</span><br>等到第二天再打开Coding页面，发现域名的证书审核已经通过了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcymo4m6lj61620fsdid02.jpg" alt="1622614304295.jpg"><span class="image-caption">1622614304295.jpg</span><br>之后再访问博客，可以看到证书已经更新了，到期日为明年6/1:<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2yiir5aj61620gcjv002.jpg" alt="1623054748589.jpg"><span class="image-caption">1623054748589.jpg</span></p>
<h3 id="探索腾讯云"><a href="#探索腾讯云" class="headerlink" title="探索腾讯云"></a>探索腾讯云</h3><p>在腾讯云工作台可以看到证书详情，可以看到它同时帮我们开启了www的subdomain访问方式：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6tw6dw3j60ni0kuwfn02.jpg" alt="1623308612737.jpg"><span class="image-caption">1623308612737.jpg</span><br>也可以进行管理:<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6ueay7lj62ke0l0n2i02.jpg" alt="1623308652667.jpg"><span class="image-caption">1623308652667.jpg</span><br>域名管理：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6uvk1caj619z08iabi02.jpg" alt="1623308756991.jpg"><span class="image-caption">1623308756991.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6v2r0blj614n0jeq5402.jpg" alt="1623308971575.jpg"><span class="image-caption">1623308971575.jpg</span><br>然而，世上没有免费的午餐，腾讯云的服务是要收费的，就在我刚开通一天后，它就给我发了欠费的信息：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd741nv9bj60bl0mwwgr02.jpg" height="400" width="200"><br>虽然不贵，但比起之前免费的CodingPages服务，还是有些差距。而且这里的证书期限是一年，一年以后又不知道有啥幺蛾子，先这样吧，就这样破罐子破摔的凑合着用，我已经充值了10块钱，看它能花多少。</p>
<h2 id="GithubPages问题解决"><a href="#GithubPages问题解决" class="headerlink" title="GithubPages问题解决"></a>GithubPages问题解决</h2><p>到这里，CodingPages的升级已经完成了，然而我的博客还部署在了GithubPages，所以要再看看GithubPages的服务是否正常。不看不知道，一看吓一跳，果然有问题 <mark class="label warning">Domain's DNS record could not be retrieved...</mark>：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grcydajfznj61mk17oqba02.jpg" alt="1622539358158.jpg"><span class="image-caption">1622539358158.jpg</span><br>说我的DNS配置不对，要加CNAME。但是我有CNAME呀，不知道为啥有这个报错，于是为了解决这个报错，我开始了漫长的旅途。</p>
<h3 id="百度-Google"><a href="#百度-Google" class="headerlink" title="百度&amp;Google"></a>百度&amp;Google</h3><p>首先，是在百度和谷歌寻找解决方案，找到了几种方案：<br><span id="inline-toc">1.</span> <a href="https://www.sawlove.com/github-custom-domain-use-https.html">重新绑定域名</a>：是说先把域名remove，然后再重新添加，但是没有解决我的问题。<br><span id="inline-toc">2.</span> 加上www域名前缀：是说在代码库的CNAME文件里给域名加上www前缀，然后在域名解析里也加上www，最后绑定www前缀的域名。但还是没有解决我的问题。<br><span id="inline-toc">3.</span> 让Github自己添加CNAME文件：是说绑定域名后Github会自动在代码库里加上CNAME文件，所以要先把CNAME文件删掉，再重新绑定域名等Github添加文件，然而我照做之后发现Github并没有自动给我添加CNAME文件，所以依然没有解决我的问题。</p>
<p>总之，折腾了半天，问题还是没有解决，瞧把我给折腾的：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd8vxs7z9j60qs1ac0wv02.jpg" height="600" width="350"><br>而且遇到了更多的报错，比如<mark class="label danger">Domain does not resolve to the GitHub Pages server... ：</mark><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2vkp1gaj61lu0lg43f02.jpg" alt="1622785367590.jpg"><span class="image-caption">1622785367590.jpg</span><br>再比如：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd30evnlej61mc0fqadr02.jpg" alt="1623129057591.jpg"><span class="image-caption">1623129057591.jpg</span></p>
<p>真的累了，甚至想着就用github.io访问好了，GithubPages就不绑定域名了吧：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2tkvgn8j626o0gw78b02.jpg" alt="1622712116380.jpg"><span class="image-caption">1622712116380.jpg</span></p>
<h3 id="官方文档"><a href="#官方文档" class="headerlink" title="官方文档"></a>官方文档</h3><p>想归想，问题还是要解决的。<br>既然网上的办法解决不了，就乖乖去看官方文档吧，于是直接点击报错信息里的learn more，打开官方文档，开始通读全文：<a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site">Managing a custom domain for your GitHub Pages site</a><br>文档里提供了两种自定义域名的绑定配置方法，一种是subdomian，比如 <a href="http://www.example.com/">www.example.com</a> 或者 blog.example.com 这样的，显然我不是这种类型；另一种是apex domain，比如example.com这种的，那可不就是我的域名类型嘛，好，找到方向了。</p>
<h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><h4 id="配置apex-domain"><a href="#配置apex-domain" class="headerlink" title="配置apex domain"></a>配置apex domain</h4><p>然后就按照文档里描述的apex domain的配置方法开始操作，直接跳到第五步：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grda1c6edtj61bk0iatcw02.jpg" alt="1623315661401.jpg"><span class="image-caption">1623315661401.jpg</span><br>说让我添加A记录指向GithubPages提供的这些IP地址，好嘛，安排！：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grda3xez8lj61qg0a8jte02.jpg" alt="1623315810471.jpg"><span class="image-caption">1623315810471.jpg</span><br>然后又让我用命令验证配置：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grda6byoyhj61920h8gp102.jpg" alt="1623315955716.jpg"><span class="image-caption">1623315955716.jpg</span><br>没毛病：<br><img data-src="https://i.loli.net/2021/06/11/pmkCEzlanyQBiD5.png" alt="image.png"><span class="image-caption">image.png</span><br>接着让我加CNAME文件到我的代码库里：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdae57e55j618s05cgne02.jpg" alt="1623316383313.jpg"><span class="image-caption">1623316383313.jpg</span><br>这个本来就有，最后是可选项，开启强制Https，也打开了，但据说要等24小时：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdaihv34jj61a60d041302.jpg" alt="1623316394352.jpg"><span class="image-caption">1623316394352.jpg</span><br>好，所有的配置都没毛病，可以添加域名了，那你倒是说说，为毛这个错它还在？！！！：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2vvzu3nj62am18agvy02.jpg" alt="1622786325436.jpg"><span class="image-caption">1622786325436.jpg</span><br>唉，心态崩了。<br>后来问题解决之后，冷静下来想想，此时报错可能有两个原因，一个是我没等够24小时，等够时间后check again应该就没错了；或者我不开启https应该也不会有错，但我还是想有https的，所以没有采取这种做法。<br>但是，我的关注点在这个报错，为毛我绑定的是没有www的域名，报错里却有www的subdomain?<br>好吧，接着看官方文档。</p>
<h4 id="配置www-subdomain"><a href="#配置www-subdomain" class="headerlink" title="配置www subdomain"></a>配置www subdomain</h4><p>官方文档上说，如果用的是apex domain，推荐再给它配置www subdomain，好吧，就按你推荐的来：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdb5pbocfj61a406stap02.jpg" alt="1623317938517.jpg"><span class="image-caption">1623317938517.jpg</span><br>上边还说，给apex domain配置www submain的前提是你已经按照上边的方法配置好了apex domain，虽然我的报错还在，但我认为自己还是配置好了apex domain的：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdb6kmrwgj619q05gjt502.jpg" alt="1623317950652.jpg"><span class="image-caption">1623317950652.jpg</span><br>所以按它说的接着来，第一步，域名解析里添加一个www的CNAME记录，指向 xxx.github.io：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdb79fv7hj619y0as42e02.jpg" alt="1623317969868.jpg"><span class="image-caption">1623317969868.jpg</span><br>安排：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdbb8h8q7j624805kt9v02.jpg" alt="1623318311090.jpg"><span class="image-caption">1623318311090.jpg</span><br>接着把代码库里的CNAME文件也加上www：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdbct4avzj62640n042t02.jpg" alt="1623318380827.jpg"><span class="image-caption">1623318380827.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdbcyyp7nj624y0me42v02.jpg" alt="1623318402390.jpg"><span class="image-caption">1623318402390.jpg</span><br>第二步，命令验证配置是否正确：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grdb7f8we4j61ac0dgad002.jpg" alt="1623317982442.jpg"><span class="image-caption">1623317982442.jpg</span><br>没毛病：<br><img data-src="https://i.loli.net/2021/06/11/LeoMy5p6SKGX71O.png" alt="image.png"><span class="image-caption">image.png</span><br>到这里，配置就已经结束了，激动人心的时候到来了，绑定我的www域名，竟然。。。。。成功了！！！！！小绿勾也打上了：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd30nk1faj60s40ku77202.jpg" alt="1623130387731.jpg"><span class="image-caption">1623130387731.jpg</span><br>而且也开启了Https，由于我配置www subdomain是在配置apex domain 24小时之后，此时是已经等够24小时的，所以可以开启Https没有报错。<br>血的教训告诉我们，官方文档是真的有用。所以遇到问题，还是先看看人家让你看的官方文档，然后再搜其他的办法。</p>
<h2 id="为啥要用CodingPages"><a href="#为啥要用CodingPages" class="headerlink" title="为啥要用CodingPages"></a>为啥要用CodingPages</h2><h3 id="CodingPages在哪"><a href="#CodingPages在哪" class="headerlink" title="CodingPages在哪"></a>CodingPages在哪</h3><p>配置好了GithubPages，目前我的个人域名DNS设置是：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd3eg62esj61620gkadb02.jpg" alt="1623301889628.jpg"><span class="image-caption">1623301889628.jpg</span><br>通过命令再次验证DNS设置：<br><img data-src="https://i.loli.net/2021/06/11/JXKaRVnq3iC7GkQ.png" alt="image.png"><span class="image-caption">image.png</span><br>有没有发现什么问题？<br>是呀，CodingPages的作用在哪呢？验证到的DNS设置只指向了GithubPages服务，而且无论是访问 <a href="https://jmyblog.top/">https://jmyblog.top</a> 还是 <a href="https://www.jmyblog.top/">https://www.jmyblog.top</a> ，显示的Https证书都是Let’s Encrypt签发的：<br><img data-src="https://i.loli.net/2021/06/11/k4UF5refWqgYNCz.png" alt="image.png"><span class="image-caption">image.png</span></p>
<h3 id="CodingPages部署节点"><a href="#CodingPages部署节点" class="headerlink" title="CodingPages部署节点"></a>CodingPages部署节点</h3><p>然后再次探索CodingPages，发现它部署的节点是香港：<br><img data-src="https://i.loli.net/2021/06/11/8TQYjyKRqkbOnhw.png" alt="image.png"><span class="image-caption">image.png</span><br>想部署到其他节点还得备案才行：<br><img data-src="https://i.loli.net/2021/06/11/ltPUcyOdvebphfB.png" alt="image.png"><span class="image-caption">image.png</span><br>于是连接一个香港区域的VPN，然后再通过命令再次验证DNS设置，终于看到了指向CodingPages的信息和腾讯云签发的证书：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2xyjpa7j616409ejtt02.jpg" alt="1623054662478.jpg"><span class="image-caption">1623054662478.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2yiir5aj61620gcjv002.jpg" alt="1623054748589.jpg"><span class="image-caption">1623054748589.jpg</span></p>
<h3 id="腾讯云CDN加速"><a href="#腾讯云CDN加速" class="headerlink" title="腾讯云CDN加速"></a>腾讯云CDN加速</h3><p>登录腾讯云，发现它对站点的加速和服务区域都是境外：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6uvk1caj619z08iabi02.jpg" alt="1623308756991.jpg"><span class="image-caption">1623308756991.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd6v2r0blj614n0jeq5402.jpg" alt="1623308971575.jpg"><span class="image-caption">1623308971575.jpg</span><br>想切换加速区域还是得备案才行，而且还得另付国内加速的费用：<br><img data-src="https://i.loli.net/2021/06/11/6N8ZSgoWrUtIQcb.png" alt="image.png"><span class="image-caption">image.png</span><br><img data-src="https://i.loli.net/2021/06/11/n5TdHZtcaL7Azs6.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p>但是备案太麻烦了，而且就我这个小破站估计也没多少人看，孤芳自赏罢了，也不至于搞这么多服务。所以在已经有了GithubPages之外，我需要CodingPages的理由是什么呢？</p>
<h3 id="使用CodingPages的理由"><a href="#使用CodingPages的理由" class="headerlink" title="使用CodingPages的理由"></a>使用CodingPages的理由</h3><p>从前用CodingPages是想用它免费的国内加速服务，现在虽然不备案就不能加速了，但仔细想了想，虽然我不想备案，也不想开启高端的CDN加速服务，还是有一些理由让我使用它的：</p>
<p><span id="inline-toc">1.</span> 博客内容推送到百度，理由如下：</p>
<p><img data-src="https://i.loli.net/2021/06/11/6p5iyxc4XZrM9Yo.png" alt="image.png"><span class="image-caption">image.png</span></p>
<p><span id="inline-toc">2.</span> 一个备胎，为了保险起见，同时使用两个服务还是不错的，虽然它们的功能有一些重复。<br><span id="inline-toc">3.</span> 虽然目前只有国外加速服务，好歹能给国外的朋友提高访问体验啊，而且万一以后又想备案呢，留条后路总没错。<br><span id="inline-toc">4.</span> 虽然用它的理由的确乏善可陈，但是配都配好了，我上边折腾这么久也不能白折腾。</p>
<h2 id="站点验证"><a href="#站点验证" class="headerlink" title="站点验证"></a>站点验证</h2><p>到这里，博客配置就已经结束了，但还是要通过第三方工具验证博客的可访问性和速度。</p>
<h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><p>之前做了百度SEO优化，所以使用百度站长工具验证站点，首先是Https认证：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2zj0qnrj61qk0s6ae502.jpg" alt="1623056320673.jpg"><span class="image-caption">1623056320673.jpg</span><br>没毛病，这Https是真的，再看看URL抓取：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd3hl9bjdj626i0wa0zl02.jpg" alt="1623302070854.jpg"><span class="image-caption">1623302070854.jpg</span><br>也没毛病，看来百度可以收录我网站的URL，访问抓取都可以，放心了。</p>
<h3 id="Google收录"><a href="#Google收录" class="headerlink" title="Google收录"></a>Google收录</h3><p>也做过Google的SEO优化，所以使用Google站点工具，先连上站点验证所有权：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2u22ec8j62l418kqah02.jpg" alt="1622714334036.jpg"><span class="image-caption">1622714334036.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd2ugu9a6j62la12ewit02.jpg" alt="1622714361935.jpg"><span class="image-caption">1622714361935.jpg</span><br>然后再上传一次sitemap，确保Google可以抓取网站的URL:<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1grd3012an4j62co0sagq802.jpg" alt="1623122594184.jpg"><span class="image-caption">1623122594184.jpg</span><br>没毛病，看来也ok:<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1gre98vekm5j61j20xcjyc02.jpg" alt="1623388402076.jpg"><span class="image-caption">1623388402076.jpg</span></p>
<h3 id="访问速度"><a href="#访问速度" class="headerlink" title="访问速度"></a>访问速度</h3><p>通过 <a href="http://tool.chinaz.com/speedtest/">这个网站</a> 可以检测博客的访问速度，在国内测速 <a href="https://jmyblog.top/">https://jmyblog.top</a> ，国际测速 <a href="https://jmyblog.top/">https://jmyblog.top</a> 和 <a href="https://www.jmyblog.top/">https://www.jmyblog.top</a> ， 结果都还不错：<br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1gre9o9veadj61n41b411r02.jpg" alt="1623389603223.jpg"><span class="image-caption">1623389603223.jpg</span><br><img data-src="http://ww1.sinaimg.cn/large/006UcYZmgy1gre9omgv7sj61ne0suwjw02.jpg" alt="1623389638753.jpg"><span class="image-caption">1623389638753.jpg</span><br><img data-src="https://i.loli.net/2021/06/11/jIZwMAUEbsK4VPa.png" alt="image.png"><span class="image-caption">image.png</span><br>本来只是想记录自己是咋升级，咋解决问题的，结果却写了这么多<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，可能有一些自己的思考吧。先这样凑合着用吧，这样折腾完了，至少以后不用三个月再手动申请证书了。</p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>GithubPages</tag>
        <tag>CodingPages</tag>
        <tag>腾讯云</tag>
      </tags>
  </entry>
  <entry>
    <title>我的书架</title>
    <url>/MyBooks/</url>
    <content><![CDATA[<h2 id="一些废话"><a href="#一些废话" class="headerlink" title="一些废话"></a>一些废话</h2><blockquote class="blockquote-center">
<p>古人云：“书中自有黄金屋，书中自有颜如玉”。而我既没有黄金屋，也称不上颜如玉。所以对我而言，读书的确很重要，或许这正是“人丑就要多读书”的出处。</p>

</blockquote>

<h2 id="书单"><a href="#书单" class="headerlink" title="书单"></a>书单</h2><p>下面是我书架上目前所有书，共42本，看完这些，我就可以立地成佛了吧。。</p>
<img data-src="https://i.loli.net/2019/11/27/DglCuIe78WTznFy.jpg" width="200" height="200">
看过的/看了一部分的写了简评，以后有看完的再慢慢加<span class="emoji" alias="smiley" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span>

<h3 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h3><p><span id="inline-toc">1.</span> <strong>测试架构师修炼之道</strong>/刘琛梅/机械工业出版社</p>
<p>这个世界上有两种QA:</p>
<ul>
<li><mark class="label success">技术型</mark>: 代码能力强，对新技术有狂热追求。未来发展方向一般是测试开发/测试架构师/DevOPs，甚至是全栈工程师。</li>
<li><mark class="label success">业务型</mark>: 业务能力强，对业务了如指掌。未来发展方向一般是业务分析师/项目管理师，逐步走管理路线。</li>
</ul>
<p>但这只是侧重点，一个合格的QA是需要两者都基本掌握的。<br>曾经我以为自己是第一种，最近发现智商不允许，毕竟也只工作了不到一年半的时间，所以还在探索自己的方向，都先试试看。<br>这本书就告诉我们怎么从一个普通的QA发展成技术型QA。</p>
<p><span id="inline-toc">2.</span> <strong>软技能：代码之外的生存指南</strong>/John Z. Sonmez/人民邮电出版社</p>
<p>大学时候看过的一本书，当时看了三分之一左右，其余的草草翻了下目录简介。<br>书名中虽有 ‘代码’ 两字，其实内容跟代码一点关系也没有。<br>作者从建立个人影响力，职业规划，健康生活等方面给广大程序员们提供了宝贵的建议。<br>总之，很值得一看<span class="emoji" alias="sunglasses" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p>
<p><span id="inline-toc">3.</span> <strong>区块链：领导干部读本</strong>/任仲文/人民日报出版社<br><span id="inline-toc">4.</span> <strong>全程软件测试(第3版)</strong>/人民邮电出版社<br><span id="inline-toc">5.</span> <strong>深度学习</strong>/人民邮件出版社<br><span id="inline-toc">6.</span> <strong>深入敏捷测试—整个敏捷团队的学习之旅</strong>清华大学出版社<br><span id="inline-toc">7.</span> <strong>敏捷软件测试—测试人员与敏捷团队的实践指南</strong>/清华大学出版社</p>
<p>大学时期看过的一本敏捷测试相关，里面有介绍一些敏捷测试理论如：测试四象限，测试金字塔等等，还有自动化测试，很长姿势的一本书。</p>
<p><span id="inline-toc">8.</span> <strong>深度工作——如何有效使用每一点脑力</strong>/卡尔.纽波特/江西人民出版社<br><span id="inline-toc">9.</span> <strong>高效能人士的七个习惯</strong>/史蒂芬.科维/中国青年出版社</p>
<p>这本是大四实习公司发的奖品，前段时间才看完。<br>作者说的对，他就是把一些大家知道但不加重视的生活原则整理成书，比如要事第一，积极主动等等，道理其实咱都明白。<br>还是推荐看，偶尔拿出来看看反思一下自己的生活也是极好的。<br>书里有一些道理我很赞同：</p>
<div class="note primary"><p>所有的事情，都分为四种：</p>
<ol>
<li>重要且紧急：比如上班搬砖，住院开刀</li>
<li>重要但不紧急： 比如健身，做职业规划</li>
<li>不重要但紧急：比如开会，接电话</li>
<li>不重要且不紧急：比如玩手机，刷某音</li>
</ol>
</div>
<p>我们往往会忽略2， 但经常沉迷于4<span class="emoji" alias="pensive" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8">😔</span></p>
<p><span id="inline-toc">10.</span> <strong>有效管理敏捷团队——快速成为优秀的ScrumMaster</strong>/清华大学出版社<br><span id="inline-toc">11.</span> <strong>转行——发现一个未知的自己</strong>/埃米尼亚.伊瓦拉/机械工业出版社</p>
<h3 id="心理"><a href="#心理" class="headerlink" title="心理"></a>心理</h3><p><span id="inline-toc">1.</span> <strong>沟通的艺术(看入人里/看出人外)</strong>/北京联合出版公司<br><span id="inline-toc">2.</span> <strong>社会心理学(第11版)</strong>/戴维.迈尔斯/人民邮件出版社<br><span id="inline-toc">3.</span> <strong>思考，快与慢</strong>/丹尼尔.卡尼曼<br><span id="inline-toc">4.</span> <strong>一个人住第5年</strong>/高木直子/北京联合出版公司</p>
<p>这本书有意思，带着笑看完了。从名字就很吸引我，因为我也是一个人住。<br>作者用漫画的形式诉说自己一个人的生活，有时觉得自由，有时觉得孤独，有时会半夜起来改变家具的位置，是我本人了，真实到让我觉得作者是不是在我家安装了监视器。<br>如果你也一个人住，可以看看。</p>
<p><span id="inline-toc">5.</span> <strong>墨菲定律</strong>/秋泉<br><span id="inline-toc">6.</span> <strong>局外人</strong>/加缪/江苏凤凰文艺出版社</p>
<h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p><span id="inline-toc">1.</span> <strong>经济学的思维方式</strong>/保罗·海恩 (Paul Heyne)/机械工业出版社<br><span id="inline-toc">2.</span> <strong>小狗钱钱(两册)</strong>/博多.舍费尔/四川少年儿童出版社</p>
<h3 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h3><p><span id="inline-toc">1.</span> <strong>中国通史</strong>/吕思勉/陕西师范大学出版社</p>
<p>快看完了，作者是民国生人，而且做过历史教授，文字不是太白话，看起来有些障碍。好在我比较喜欢啃文言文，这种调调还可以接受，不过睡前看可能会有些催眠。所以还好(我可是高考语文考过130的人<span class="emoji" alias="sunglasses" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span>)。<br>书中对史实刻画很生动，提出所谓历史，其实都是文化史，因为文化不同，所以产生政治史。所以书分两篇，上篇政治史，下篇讲文化史。<br>上篇还分析了各个朝代更替衰落的原因，并描述了朝代更迭过程中人民的思想变化，如何从“治天下不如安天下”到“安天下不如与天下安”，和儒家&amp;理学思想对政治的影响，引人深思。<br>作者说：<mark class="label info">我们所知道的中国史，相当于一个人活到一百岁，但却只有他最近几个月的记忆，是很少的。</mark></p>
<p><span id="inline-toc">2.</span> <strong>全球通史—从史前史到21世纪(上下两册第7版)</strong>/斯塔夫里阿诺斯/北京大学出版社<br><span id="inline-toc">3.</span> <strong>万历十五年</strong>/黄仁宇/三联书店</p>
<h3 id="文学"><a href="#文学" class="headerlink" title="文学"></a>文学</h3><p><span id="inline-toc">1.</span> <strong>诗经《风雅颂》合集</strong>/三秦出版社</p>
<blockquote class="blockquote-center">
<p>关关雎鸠，在河之洲。窈窕淑女，君子好逑</p>

</blockquote>
<p>上学的时候了那么多诗经里的诗词，也算是看过了吧。不过还想看看里面其它的诗词，品鉴的同时也可避免以后因为误解词句的意思而贻笑大方。<br>还是推荐这版，印刷很用心，看起来很舒适。</p>
<p><span id="inline-toc">2.</span> <strong>花间集</strong>/赵崇祚/三秦出版社</p>
<blockquote class="blockquote-center">
<p>小山重叠金明灭，鬓云欲度香腮雪。懒起画娥眉，弄妆梳洗迟。照花前后镜，花面交相映。新帖绣罗襦，双双金鹧鸪。</p>

</blockquote>
<p>这是电视剧《甄嬛转》里眉庄香消玉殒时的背景音乐，是姚贝娜唱的。当时便觉得很美，后来知道是温庭筠写的。由温庭筠又知道了“花间派”，而后就买了这本。<br>也算是本工具书，这版是彩印，还有一些古代花鸟画和风景图，边赏词边品画，也很舒适。</p>
<p><span id="inline-toc">3.</span> <strong>纳兰词</strong>/纳兰性德</p>
<blockquote class="blockquote-center">
<p>人生若只如初见，何事秋风悲画扇？等闲变却故人心，却道故人心易变。</p>

</blockquote>
<p>纳兰性德其人，才华横溢，出身高贵确不贪恋荣华，潇洒恣意，在妻子去世八年后也随之而去，而立之年就英年早逝。</p>
<p><span id="inline-toc">4.</span> <strong>爱你就像爱生命</strong>/王小波/译林出版社</p>
<p>看完了，这不是一封情书，而是一本情书。<br>“你好哇，李银河”是每封情书的开场白，直白又热烈。<br>单身的人还是不要看了(所以我为什么要看<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>)</p>
<p><span id="inline-toc">5.</span> <strong>古文观止(上下两册)</strong>/吴楚材/浙江教育出版社<br><span id="inline-toc">6.</span> <strong>呐喊</strong>/鲁迅<br><span id="inline-toc">7.</span> <strong>沉默的大多数</strong>/王小波</p>
<p>大学的时候就看完了，是王小波最著名的杂文。王小波生活在新中国刚成立后最动荡的时期，文革，大跃进，上山下乡都赶上了，所以在杂文里也有很多他的经历。这本杂文合集文字幽默大胆，主要写他对当时中国社会/经济/文化现状的讽刺。</p>
<p><span id="inline-toc">8.</span> <strong>围城</strong>/钱钟书</p>
<p>看完了再也不相信爱情了<span class="emoji" alias="broken_heart" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8">💔</span><br>背景在民国时期，讲了男主和四个女人的情感经历，结婚后两人之间又各种猜忌，各种出口伤人，因为各种生活琐事争吵不断。<br>书中最后一幕是婚后不久，男主又一次与妻子争吵，夺门而出。情绪冷静之后想回家说点软话哄哄对方，不想回去之后发现妻子竟收拾东西回娘家了。而后续又会发生什么不得而知，也许是两人会就此分开，也许男主会软言讨好把女主接回来，继续过着争吵不休的生活。<br>其实我是觉得男主和女主都太作了，明明心里是有对方的，却又控制不住互相伤害。<br>书中对许多配角的性格刻画和心理描写也令人拍案叫绝，太真实了。<br>没看过的一定要看，看过的也可以再看。</p>
<p><span id="inline-toc">9.</span> <strong>人间词话</strong>/王国维/中华书局</p>
<h3 id="社科"><a href="#社科" class="headerlink" title="社科"></a>社科</h3><p><span id="inline-toc">1.</span> <strong>中国地理地图集</strong>/中国地图出版社</p>
<p>还没看完，其实这是本工具书，因为我一向地理不好。<br>以前是分不清南北，这个毛病在我第一次找房子以为朝东结果朝北后才治好的，但有时也会失灵。<br>现在是随便说某省份和城市，反应不来是南方还是北方，经常被朋友嘲笑，所以还是买本地理书吧。<br>是挺厚的一本书，全彩印，里面详细列着我国各地的地貌，湖泊，气候，风俗等等，还有超简版中国式。称得上一本概括版的百科全书了，图文并茂，看起来也不腻。</p>
<p><span id="inline-toc">2.</span> <strong>像人类学家一样思考</strong>/约翰.奥莫亨德罗/北京大学出版社</p>
<h3 id="健康"><a href="#健康" class="headerlink" title="健康"></a>健康</h3><p><span id="inline-toc">1.</span> <strong>救护车到来前，你能做什么？</strong>/贾大成<br><span id="inline-toc">2.</span> <strong>中国居民膳食指南2016</strong>/中国营养学会/人民卫生出版社<br><span id="inline-toc">3.</span> <strong>知己</strong>/徐文兵/海南出版社<br><span id="inline-toc">4.</span> <strong>女人的身体,女人的智慧(新版)</strong>/克里斯蒂安.诺斯鲁普/上海科学普及出版社</p>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><blockquote>
<p>我的买书渠道：因为心理学&amp;理财&amp;工作相关的书都是可以报销的，所以都是在京东自营买的新书，二手书在‘多抓鱼’买。<br>最近发现一个 <a href="http://www.bwsk.com/">线上网站</a> 看书很方便。</p>
</blockquote>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>书单</tag>
      </tags>
  </entry>
  <entry>
    <title>沉默的抗争</title>
    <url>/Silent-protest/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/12/03/8Y5qidj3v1rwWLn.png">

<blockquote><p>那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云，后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消逝，最后变得像挨了锤的牛一样。可是我过二十一岁生日时没有预见到这一点。我觉得自己会永远生猛下去，什么也锤不了我。</p>
<footer><strong>王小波</strong><cite><a href="http://www.bwsk.com/xd/w/wangxiaobo/hjsd/index.html">黄金时代</a></cite></footer></blockquote>

<hr>
<div class="note default"><p>王铁锤，一个在沉默中「灭亡」的人。</p>
<p>王铁锤来到了一个新的项目组，作为QA，他刚开始就充分体会到了业务的复杂性和人力的严重不足，但他只想测卡挪卡，安安静静的搬砖。</p>
<p>但后来项目的走向，打破了他的期望。</p>
<p>他一直觉得，无论干什么，得先把事情做对，再把对的事情做好。然而项目的情况恰恰相反，首先作为一个敏捷开发的项目，基础设施像环境、流水线这些东西在项目开始一个月后，还没准备好。整个团队都在赶工，像一只只顾往前奔跑的斗牛，莽撞而没有方向。</p>
<p>其次，各种各样的文档让他烦不胜烦，每天都在搞一些流于形式的东西，但这是客户爸爸要求的，他也无力改变。慢慢的他发现整个项目就是一个披着敏捷开发外衣的瀑布式开发项目。此外，测试环境极其不稳定，每天最多的时间都是在等修复，真正搬砖的时间很少，这些问题多次反馈还是得不到解决。</p>
<p>然后就是工期的紧缩，团队大佬甚至召集大家开会说明情况，确定996的工作模式，一切都是为了让产品在客户要求的时间前上线。大鱼吃小鱼，小鱼吃虾米，这样一层层压下来，王铁锤觉得自己就是一个小虾米，是被剥削的底层搬砖工，第一次体会到「社畜」这个词的含义。</p>
<p>尽管如此，他还是想安安静静的搬砖，只想搬完分配给自己的那坨砖，强制让自己不加班，让「社畜」的感觉不那么强烈。这样过了一些时日，王铁锤觉得自己找到了在项目里保持「love&amp;peace」的方式，有时候他觉得自己像一个隐士，但不是身怀绝技的隐士，而是无能为力的隐士。</p>
<p>但好景不长，项目后期，客户开始了验收测试。一些对产品细节的扯皮和对业务的一遍遍确认搞得BA和PM也筋疲力尽，很多项目初期没有提出的问题到现在才通知，导致需求不断的变更和返工。王铁锤觉得疲倦，但客户却精气十足，他知道，这场沉默的抗争，是他输了。</p>
<p>看着项目里的开发日日加班到深夜，周末也在公司度过，他觉得不忍，但更多的是感到害怕。也许这就是「成年人」的不易吧，有谁不是负重前行呢？王铁锤突然发现自己并不是一个合格的「成年人」，因为他还没有「重」要「负」，但同时又害怕自己变成一个「成年人」，因为他并不想这样做一个「社畜」，为了「负重」而做自己不想做的事。至少现在，不想做的事，他还可以不做。</p>
<p>后来，他开始负责协助客户的验收测试，处理客户提出的问题。call center般的工作体验就好像压死骆驼的最后一根稻草，他完全失去了搬砖的积极性，他开始变得更沉默，频繁请假，拒绝加班，他知道这样做很不专业，但只想逃避。不难想到，由于他的「格格不入」，他从这样一个「成年人」的项目中淘汰了。</p>
<p>在最后的谈话中，二十三岁的王铁锤第一次听到「老油条」这样的评价。他淡然一笑，也不做他想。项目依然是一地鸡毛，而他已经不想再面对了。他也想过何以至此，但他不懂怎么评价别人的工作，只是觉得在这个项目搬砖不开心，也提不起动力，只能悄然离开。</p>
<p>王铁锤二十三岁，还在人生的黄金时代。他没有太多的奢望，也不觉得自己会永远生猛下去，但依然觉得什么也锤不了他。他还是他，也许生活是个缓慢受锤的过程，人一天天老下去，终有一天，他也会被锤成一个「成年人」，但他只想怀抱自己本就不多的奢望，安之若素。</p>
<p>希望有一天，王铁锤能学会在沉默中「爆发」。</p>
</div>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>王铁锤</tag>
      </tags>
  </entry>
  <entry>
    <title>博客被停止访问之后</title>
    <url>/SiteBrokenFix/</url>
    <content><![CDATA[<h2 id="发生了什么"><a href="#发生了什么" class="headerlink" title="发生了什么"></a>发生了什么</h2><p>昨天更新了点博客内容，本地预览一切正常，然而推送之后，我的站点就没法访问了<span class="emoji" alias="scream" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f631.png?v8">😱</span></p>
<img data-src="https://i.loli.net/2020/04/23/K4e1OfUkGpTt6BF.jpg" width="500" height="200">

<h2 id="找原因"><a href="#找原因" class="headerlink" title="找原因"></a>找原因</h2><p>这次的错误和之前遇到的都不一样，一脸懵逼的我第一时间只能找Google和度娘问问，看有没有同病相怜的人和有可能的解决办法。然鹅，毛都没有，结果全是不相关的内容：<br><img data-src="https://i.loli.net/2020/04/23/lDyCkEzNxnZXL4g.png" width="600" height="500"></p>
<p>虽然毫无头绪，但也只能尝试自己解决了，还是那句话，<mark class="label info">遇到问题的时候，首先怀疑自己</mark>。于是我就开始了自我怀疑之路：</p>
<h3 id="revert代码"><a href="#revert代码" class="headerlink" title="revert代码"></a>revert代码</h3><p>因为不知道网站是什么时候被停止访问的，而且更新之前我并没有看站点的情况，所以也许在更新之前它是好的，所以我revert了代码：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">git reset --hard HEAD^
git push --force<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>但结果还是一样<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span></p>
<h3 id="更新Hexo"><a href="#更新Hexo" class="headerlink" title="更新Hexo"></a>更新Hexo</h3><p>既然不是代码的问题，而且它报的是网络安全性问题，所以决定从这个角度出发找原因，首先想到更新Hexo，说不定有相关安全漏洞修复，所以我更新了相关的package:</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">npm outdated
npm install --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>推送更新之后结果依旧不变<span class="emoji" alias="cry" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f622.png?v8">😢</span></p>
<h3 id="解决github发现的依赖稳定性问题"><a href="#解决github发现的依赖稳定性问题" class="headerlink" title="解决github发现的依赖稳定性问题"></a>解决github发现的依赖稳定性问题</h3><p>注意到推送远程仓库后，github有提示一些依赖包需要更新，旧的可能有安全威胁，所以按照github的建议更新了依赖包：<br><img data-src="https://i.loli.net/2020/04/23/ltorJI7sbPufejX.png">嗯，问题依然没有解决<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<h3 id="百度网站检测"><a href="#百度网站检测" class="headerlink" title="百度网站检测"></a>百度网站检测</h3><p>继续细品报错<mark class="label danger">由于存在网路安全性问题，该站点已停止访问</mark>，虽然我坚信自己是个遵纪守法的好公民，没有在博客上发布什么黄赌毒信息，不过还是在百度站点管理平台检测了一下，期待能报个啥错，给我更多的信息：<br><img data-src="https://i.loli.net/2020/04/23/21VDnev6QHLpJIy.png" width="500" height="500">然而结果出乎意料的优秀，也没有检测出啥恶意内容。hummm，度娘为我正身了<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p>
<h3 id="清理浏览器缓存"><a href="#清理浏览器缓存" class="headerlink" title="清理浏览器缓存"></a>清理浏览器缓存</h3><p>上边这么多尝试，都没有解决问题，我突然想到一个平时工作中经常用到的操作：<mark class="label default">清缓存</mark>，然后我终于看不到报错信息了，出现了一个相对熟悉的页面，而且有更多信息：<br><img data-src="https://i.loli.net/2020/04/23/v9PIwB1WMfQNymh.png" width="550" height="500">值得注意的是这段话：</p>
<blockquote>
<p>This server could not prove that it is jmyblog.top; its security certificate is from<br>coding.me. This may be caused by a misconfiguration or an attacker intercepting your<br>connection.</p>
</blockquote>
<p>3个关键字：<strong>安全证书</strong> <strong>配置错误</strong> <strong>外部攻击</strong><br>于是我看了下现在的证书：<br><img data-src="https://i.loli.net/2020/04/23/kliwBJ8GtSrb1eR.png" width="450" height="400"><br>虽然我很想假装自己能看懂，但我真的看不懂。外部攻击就更是一头雾水了，稍微有点了解的是<strong>配置错误</strong>这个关键字，而且提到了coding.me。这个我是知道的，因为博客是同时部署在github和coding上的。所以我决定去探索下。</p>
<h3 id="探索Coding和Github"><a href="#探索Coding和Github" class="headerlink" title="探索Coding和Github"></a>探索Coding和Github</h3><p>进入coding之后，我发现它的登录页面和代码远程库的url有变化，所以在本地改了推送的远程仓库。再推送一遍没报错，但网站依然无法访问。<br>然后我看了Coding的代码库静态网站配置，发现了一个奇怪的网站访问地址：<br><img data-src="https://i.loli.net/2020/04/23/MOt6ZUfaEBDjvLW.png"><br>然后尝试打开：<br><img data-src="https://i.loli.net/2020/04/23/vZX9Ow1RbpmFWBo.png"><br>简直是喜大普奔<span class="emoji" alias="smiley" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f603.png?v8">😃</span>，是可以访问的。这下心里的石头落下了一点，最起码有一个在线访问的url了。然而我记得之前coding静态网站的url和github一样，都是代码库的名字，当时域名解析的时候设置的记录值也是这个，但现在变了，解析当然就不生效了，所以要改域名解析设置。<br>但还是先看看github pages可不可以访问，因为之前配置了custom domain，而现在这个域名是不可访问的：<br><img data-src="https://i.loli.net/2020/04/23/FKD4f13LOMao9Wk.png"><br>所以去掉custom domain，网站内容部署到github pages本来的url：<br><img data-src="https://i.loli.net/2020/04/23/KcJ4ilrSbXLqYsy.png"><br>然后再看看部署log，也没问题：<br><img data-src="https://i.loli.net/2020/04/23/Ualby2E5DmYZxKX.png"><br>也是可以访问的:<br><img data-src="https://i.loli.net/2020/04/23/C1UnyFq5ftrZeGb.png"><br>好了，既然现在有两个线上的url都可以访问网站，那么就可以去改域名解析设置了，让这两个url都可以指向jmyblog.top这个域名，理论上问题应该就解决了。</p>
<h2 id="成功解决"><a href="#成功解决" class="headerlink" title="成功解决"></a>成功解决</h2><h3 id="域名绑定coding"><a href="#域名绑定coding" class="headerlink" title="域名绑定coding"></a>域名绑定coding</h3><img data-src="https://i.loli.net/2020/04/23/Skv28M5PJiC1Fwo.png">

<p>首先按照上图中coding静态网站中自定义域名的设置要求，添加下面的CNAME记录，并把之前记录值为coding.me的解析删掉：<br><img data-src="https://i.loli.net/2020/04/23/KWhtRFA6QPTm4SM.png"><br>然后输入绑定域名的时候，要求再添加一条TXT记录(这个忘记截提示信息的图了)，其中主机记录和记录值都是在提示信息给出的：<br><img data-src="https://i.loli.net/2020/04/23/iz1IX9s2cxyLm8D.png"><br>并且成功在coding开启了自定义域名的强制Https访问，一开始SSL证书申请失败，后来按照网上的解决方案去域名解析把GitHub解析暂停就申请成功了。<br>有了上面这两条解析，jmyblog.top已经可以访问了，但是只绑定了coding静态网站，我们还需要绑定github静态网站，实现双部署。</p>
<h3 id="域名绑定github"><a href="#域名绑定github" class="headerlink" title="域名绑定github"></a>域名绑定github</h3><p>和最开始搭建网站的步骤一样，添加一条记录值为github.io的CNAME记录就好：<br><img data-src="https://i.loli.net/2020/04/23/ZpEigb5wcH1CNFQ.png"><br>然后去github pages设置中，加上custom domain，并开启强制Https访问：<br><img data-src="https://i.loli.net/2020/04/23/3IaVCNKXE7WlP49.png"><br>至此，coding pages和github pages都指向jmyblog.top这个域名了，而且都开启了强制Https，现在jmyblog.top已经可以用https访问了，也算是因祸得福<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><br><img data-src="https://i.loli.net/2020/04/23/9kO3dHV2iwbnRhe.png"><br>而且现在的证书：<br><img data-src="https://i.loli.net/2020/04/23/O51DPZxStkeszNv.png" width="450" height="350"><br>嗯，还是看不懂，不过问题解决了就行。<br>用百度站点工具再做一次Https认证，验证成功：<br><img data-src="https://i.loli.net/2020/04/23/8ucHwDNBkGzvEXZ.png"><br>嗯，这下Https是真的了。<br>本站点最终的域名解析列表：<br><img data-src="https://i.loli.net/2020/04/23/RPNsrEyMSUV9uD1.png"></p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>办公室版围城</title>
    <url>/SomethingsInWork/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/07/18/s819qyRpVilb2Am.png">

<ul>
<li>城市：X市</li>
<li>单位：才华有限公司</li>
<li>角色：G君/L君/H兄/C君/F兄/D兄/王铁锤</li>
</ul>
<div class="note info"><p><strong>G君和L君入职了。</strong></p>
<p>作为应届毕业生的G君，是X市土著，已婚，有留学经历。整体看上去比同龄人少了一丝沧桑，看到G君让王铁锤想到了刚入职的自己，但他可没有G君一样优秀的履历。一段时间下来，周围同事对G君也是一致好评，转正只是时间问题。</p>
<p>L君为社招入职，有3年工作经验，虽与G君同龄但气质更加沉稳，工作上手也很快。与同事相处也很融洽，无槽点，所以王铁锤同样觉得他转正问题不大。</p>
<p><strong>H兄要下项目了</strong></p>
<p>作为项目上的大佬，Leader订了蛋糕并举行了roll off仪式，全项目欢送。王铁锤没有去，因为他刚上项目与H兄并不熟悉亦无交流，加上社恐并不想强行social，所以继续坐在工位上忙(mo)碌(yu)。</p>
<p>G君看到大家都去，也弱弱的问王铁锤「我也要去吗」，王铁锤诚恳回复「可以不去」，但G君依然去social了，王铁锤表示理解，一个新人确实不能冒被人说不合群的风险。</p>
<p>Social结束后，大家回到工位，王铁锤旁边刚上项目的C君看到王铁锤已在工位，疑惑发问「你是刚回来还是没去」，王铁锤淡淡回复「没去」，C君作惊讶状「你为什么不去」，王铁锤只好回复「因为不熟，所以不想强行social」，C君停止发问且表情复杂。</p>
<p><strong>D兄、L兄、F兄要离职了。</strong></p>
<p>D兄在公司over5年了，王铁锤和他比较相熟，也一起呆过几个项目。他为人风趣，在公司朋友很多，经常邀请王铁锤一起聚餐出游。在 <a href="https://jmyblog.top/Silent-protest/">沉默的抗争</a> 事件后也给了王铁锤极大的安慰，或许这个事件对他也有一些影响吧，在后边待了与该事件几个类似的项目后，也离开了。总之，他是一个有能力的人，确实值得更好的。</p>
<p>L兄也是 <a href="https://jmyblog.top/Silent-protest/">上述事件</a> 主要人员之一。事件后王铁锤某次电梯中首次与L兄相遇，寒暄时得知他要离职的消息，惊讶之余同样表示理解，虽然L兄只在公司一年，但任谁在那种项目待下去，都会受不了的。</p>
<p>F兄也是王铁锤相熟的同事，一起呆过几个项目，在公司两年左右。在H兄欢送会结束不久，王铁锤得知他要离职的消息，震惊之余也只能祝好，准备线下再找他八卦一波。</p>
<p>默默离职的D兄/L兄/F兄，对比H兄声势浩大的roll off仪式，不能不让王铁锤感叹世界的参差。</p>
<p><strong>H兄欢送会之后，王铁锤被告知要开始写下半年的期望了。</strong></p>
<p>对于以搬一辈子砖的「不内卷生活」为理想的王铁锤而言，每次搞制定期望或年终总结之类活动的时候，他都不知道自己该干点啥。但为了 <a href="https://jmyblog.top/WorkerStates/">生存</a> ，只得按照套路绞尽脑汁的想点啥写出来。王铁锤无语望天，什么时候才能实现「搬砖自由」呢。</p>
</div>




]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>王铁锤</tag>
      </tags>
  </entry>
  <entry>
    <title>难忘的TWU之旅</title>
    <url>/TWUJourney/</url>
    <content><![CDATA[<div class="note info"><p><strong>TWU</strong> 即 <a href="https://www.thoughtworks.com/cn/careers/graduates"><strong>ThoughtWorks University</strong></a>，是指ThoughtWorks新入职的应届毕业生，将会在 <a href="https://baike.baidu.com/item/%E6%B5%A6%E9%82%A3/8746603?fr=aladdin">印度浦那</a> 或者中国西安参加一个为期5周的员工培训，充分了解到ThoughtWorks的公司文化、宗旨和做事方式。</p>
</div>

<p><img data-src="https://i.loli.net/2021/07/18/pJrxDV5EqydmKUh.png" alt="ThoughtWorks University官网介绍"><span class="image-caption">ThoughtWorks University官网介绍</span></p>
<h2 id="出发之前"><a href="#出发之前" class="headerlink" title="出发之前"></a>出发之前</h2><h3 id="西安-or-印度？"><a href="#西安-or-印度？" class="headerlink" title="西安 or 印度？"></a>西安 or 印度？</h3><p>毕业之前我就收到了要去TWU的通知，当时HR告诉我也可以先不参加，入职之后会陆续安排的。我想着早去晚去都要去，反正也还没上班，先培训一下挺好的。<br>于是选择参加的目的地，去印度还是呆在西安呢？虽说去哪都是全英文的教学和工作环境，但如果去印度，不仅要面对全英文的工作环境，还要面对全英文的生活环境，这对我来说挑战太大了，所以一开始我选择了西安。<br>后来HR又给我打电话，说去印度的人数不够，劝我再挑战一下自己，这也是一次出国旅行的机会，我觉得也有道理，最后还是决定去印度。</p>
<h3 id="行李箱准备"><a href="#行李箱准备" class="headerlink" title="行李箱准备"></a>行李箱准备</h3><p>第一次要在国外呆1个多月，要准备的东西是很多的，衣食住行各方面都得考虑。</p>
<p>首先提交资料给公司办理签证，申请的签证有效期是半年。<br>之后就开始准备行李箱，公司分享了很多去印度生活的小贴士，七八月份的印度浦那也是夏天，但没有西安这么热，所以衣物不必太费心准备了；然后就是食物方面，根据好多去过印度TWU的同事建议，那边的食物很可能不符合国人的胃口，所以最好多带一些自己喜欢的零食还有老干妈过去。</p>
<p>住所是公司提供的，出行也有公司的大巴接送，除了出去玩的费用自己承担外，这两项也不用操心。除此之外，还是有很多生活用品需要准备。<br>首先就是钱了，自己去银行换了200美元的外币，到了印度可以继续换卢比使用。为什么不直接换卢比？因为当时银行只能换美元，据说美元在那边也可以流通，再换卢比也行。然后又在淘宝上买了很多东西，比如印度上网卡、电源转换头之类。</p>
<p>所有的东西加起来，一个24寸的行李箱就搞定了，也不能什么都考虑到，其它的等到印度熟悉之后再购置也可以。</p>
<h2 id="入职-出发"><a href="#入职-出发" class="headerlink" title="入职 &amp; 出发"></a>入职 &amp; 出发</h2><h3 id="行程单"><a href="#行程单" class="headerlink" title="行程单"></a>行程单</h3><p>7.24号，去公司办理入职，领取电脑，由于新电脑还没有到，所以暂时领了旧电脑先用着。和一起去印度的小伙伴面了基，然后一块儿走入职流程。还签了公司的TWU培训协议，这次去印度培训一个月，各种费用加起来至少得4万，公司为了培训新员工成本也不低呀。<br>然后就拿到了行程单，大概是这样的：</p>
<img data-src="https://i.loli.net/2021/07/18/8WP2OFT6A13hGpY.jpg" width="400" height="400" alt="行程单"><span class="image-caption">行程单</span>

<h3 id="去北京"><a href="#去北京" class="headerlink" title="去北京"></a>去北京</h3><p>入职第二天，先坐早上10点的高铁去北京，看到小伙伴们的行李才发现自己有多么克制。到了北京站已是下午3点，稍作休整后又打了企业滴滴去首都机场，一路上和司机师傅聊天，听他讲北京城的繁华也十分有趣。<br>机场值机托运后，我们遇到了同样去TWU的小伙伴，是从成都过来的。一顿寒暄后在机场吃了碗面，就往登机口走去。</p>
<p><img data-src="https://i.loli.net/2021/07/18/OUCGcbAnmdyrvgp.jpg" alt="北京首都机场"><span class="image-caption">北京首都机场</span></p>
<p>飞机有点延误，晚上9点20，我们才登机。看着飞机外渐行渐远的城市灯光，对即将开启的旅程也越发期待起来。</p>
<img data-src="https://i.loli.net/2021/07/18/VHPOgxD31Es6hAc.jpg" width="350" height="500" alt="机窗外的城市灯光"><span class="image-caption">机窗外的城市灯光</span>

<h2 id="到达浦那"><a href="#到达浦那" class="headerlink" title="到达浦那"></a>到达浦那</h2><h3 id="入境登记"><a href="#入境登记" class="headerlink" title="入境登记"></a>入境登记</h3><p>航班虽然延误了，但却比预计时间提前半小时，在凌晨1点到达了德里机场，让我觉得有点玄幻。德里机场的佛手给我的印象很深刻：</p>
<p><img data-src="https://i.loli.net/2021/07/18/VXgGlZCLm5AUTic.png" alt="德里机场"><span class="image-caption">德里机场</span><br>跟着人流走到机场入境登记口，做入境检查和登记，按照提示填写表格，拿上护照排队，窗口的印度小哥边对照我的表格和护照的照片，边上下打量我，感觉有点怪，不过最后他还是拿着印章在护照上按了戳。</p>
<h3 id="到达浦那-1"><a href="#到达浦那-1" class="headerlink" title="到达浦那"></a>到达浦那</h3><p>登记完成后，我们还要坐去浦那的飞机，因为环境太陌生，费了好大劲才办好了值机托运，还在登机口碰到了去TWU的外国朋友，口语经验匮乏的我嘴仿佛被锁死，只能简单say hi然后微笑致意，嗯，毕竟微笑是人类共同的语言嘛。<br>印度时间26日凌晨5点，我们登上了去浦那的飞机，第一次坐国外的飞机，感觉很奇特。</p>
<img data-src="https://i.loli.net/2021/07/18/xTeLE1dmBlbhSQW.jpg" width="500" height="500" alt="印度航空登机牌"><span class="image-caption">印度航空登机牌</span>

<p>飞机餐是印度咖喱和偏黄色的细长米饭，还有白色的糊状物，看着就容易让人产生不好的联想，我没忍心吃，只用面包和黄瓜垫了下肚子。</p>
<p><img data-src="https://i.loli.net/2021/07/19/aKALFXpze3Z17PC.jpg" alt="印度航空飞机餐"><span class="image-caption">印度航空飞机餐</span><br>上午7点，我们到了浦那机场，在行李转盘旁边的卫生间洗手，我第一次体验了被外国人围观的感觉。</p>
<h3 id="前往住所"><a href="#前往住所" class="headerlink" title="前往住所"></a>前往住所</h3><p>取完行李在机场出口看到了公司接机的牌子，然后被安排坐上去住所的面包车，看着窗外浦那街头的人和车，才有种到了印度的真实感。<br>早上8点多，我们到了住处，公司给TWU学员提供的住处规格相当于国内的宾馆，两栋楼，都是6层，一栋叫 <a href="https://www.agoda.com/fabhotel-stay-home-viman-nagar_2/hotel/pune-in.html?cid=-142">STAY@HOME</a>，一栋叫<a href="https://www.agoda.com/oyo-16625-home-from-home/hotel/pune-in.html?cid=-142">Home From Home</a>，距离大概50米，离浦那机场比较近。</p>
<p><img data-src="https://i.loli.net/2021/07/19/JVFep1C6OP4BRwI.png" alt="STAY@HOME"><span class="image-caption">STAY@HOME</span><br><img data-src="https://i.loli.net/2021/07/19/ctpze3hHkjiaDYl.png" alt="Home From Home"><span class="image-caption">Home From Home</span><br>我和一起来的小伙伴们最后入住了STAY@HOME，在一楼休息区歇了会，前台的服务人员给我们发了房间钥匙和一张印度手机卡，然后我们就去各自的房间收拾了。</p>
<p><img data-src="https://i.loli.net/2021/07/19/2ZT5uSxJFjhIDkR.png" alt="旅馆一楼休息区"><span class="image-caption">旅馆一楼休息区</span><br><img data-src="https://i.loli.net/2021/07/19/GOl6tjMuWqyZIai.png" alt="旅馆前台"><span class="image-caption">旅馆前台</span><br><img data-src="https://i.loli.net/2021/07/18/Ud5bC9EX8ySRmGY.jpg" alt="房间内部"><span class="image-caption">房间内部</span><br>房间基本上是一人一间，有的大房间是两个人一起的。从25号早上出发开始，整整一天，我一直在路上奔波，终于可以睡会了。</p>
<h3 id="熟悉环境"><a href="#熟悉环境" class="headerlink" title="熟悉环境"></a>熟悉环境</h3><p>下午3点，在旅馆休息了五六个小时后，终于缓过劲了。小伙伴们也约着一起出去转转，熟悉下周围的生活环境。第二天是周五，工作日，所以晚上打开电脑，准备明天的培训，在印度的第一天就这样结束了。<br>接下来就是连续5周的培训生活，全程都是纯英文环境。就不按照时间线来详细描述了，分几个方面分别概述这五周的经历。</p>
<h2 id="工作篇"><a href="#工作篇" class="headerlink" title="工作篇"></a>工作篇</h2><h3 id="trainer-trainee"><a href="#trainer-trainee" class="headerlink" title="trainer &amp; trainee"></a>trainer &amp; trainee</h3><p>在TWU，培训的学员也叫做trainee，来自不同的国家和地区，比如中国、印度、巴西、英国、美国、新加坡等。每一位trainee都会分配一个trainer，一个trainer也会分配2-3个trainee。<br>trainer会定期与trainee进行 1:1 catch up，至少每周一次，跟进trainee在培训中的学习情况和感受，为trainee答疑解惑，是一个亦师亦友的角色，trainer还负责评估trainee在培训中的表现。<br>为了达到文化交流和口语练习(主要是针对中国学生)的目的，trainer和trainee一般来自不同的国家。我的trainer叫Daniel，就是个英国人。</p>
<h3 id="Session-WorkShop"><a href="#Session-WorkShop" class="headerlink" title="Session &amp; WorkShop"></a>Session &amp; WorkShop</h3><p>既然是员工培训，当然要参加各种培训课，讲师都是Trainer。<br>课程分为两种，一种是Session，就是光听讲师讲，也有互动和问答环节，比如敏捷开发相关的理论知识，还有TW的文化和工作方式，这种课程还经常有group talk环节，让我蹩脚的口语无处可藏；一种是WorkShop，大多偏技术类，得提前准备工具和环境，比如代码实践、自动化测试等等。<br>由于trainee的人数较多，所以随机分为A/B两组分别参加这些课程，课表都是一样的，只是讲师不同。</p>
<p><img data-src="https://i.loli.net/2021/07/19/uYNsIkfGz9DFcqW.jpg" alt="某次session剪影"><span class="image-caption">某次session剪影</span><br><img data-src="https://i.loli.net/2021/07/19/P8Sd4H7QsDmrM3T.jpg" alt="讲需求理解一致重要性的课程_鸟是我画的哈哈哈"><span class="image-caption">讲需求理解一致重要性的课程_鸟是我画的哈哈哈</span></p>
<p>这些培训课有的是需要全体trainee参加的，有的只需要对应角色参加，比如针对BA的需求拆分课、针对Dev的TDD开发课、针对QA的自动化测试和测试理论等等。也有针对BQA角色的故事卡AC编写课，针对QA&amp;Dev的单元测试Pair编写课等等，简直就是知识的海洋。<br>第二天的站会还会有Trainer来提问昨天session讲的内容，很多课程也有课后作业，为忙碌的培训生活添砖加瓦。</p>
<p><img data-src="https://i.loli.net/2021/07/20/imMa5JgQeClHdzV.jpg" alt="站会上的提问环节"><span class="image-caption">站会上的提问环节</span></p>
<h3 id="模拟项目"><a href="#模拟项目" class="headerlink" title="模拟项目"></a>模拟项目</h3><p>后来，A/B两组的trainee又被各自分成不同的小组，每个组大概15人，相当于一个模拟的敏捷开发小组。在接下来的5周内，每个组都要开发完成一个相同的模拟软件项目，然后以小组为单位，进行每日站会、retro、showcase等敏捷会议。</p>
<p><img data-src="https://i.loli.net/2021/07/19/antQGkh6KdmCiA2.jpg" alt="组内站会"><span class="image-caption">组内站会</span><br>小组里的学员角色也不一样，有UX/BA/QA/Dev等，一个完整的敏捷开发项目组这些角色都应该有，但因为是随机分配，角色也就没那么均衡了，我所在的小组挺幸运的，因为啥也不缺，每个角色都有。<br>每个小组还会被分配一个模拟的客户，就是PO(Product Owner)，然后邀请PO参加showcase，和PO比对澄清业务需求等等。PO大多是由trainer客串，也会邀请当地办公室的同事来扮演，我们小组的PO就是一个trainer。更巧的是，她正好是我的trainer-Daniel的女朋友，果然八卦无处不在。</p>
<p><img data-src="https://i.loli.net/2021/07/20/yFoilNcUGMIfg7m.jpg" alt="日常工作(后面的信封上是每个trainer/trainee的名字，用来收集反馈，培训结束后发给每个人)"><span class="image-caption">日常工作(后面的信封上是每个trainer/trainee的名字，用来收集反馈，培训结束后发给每个人)</span><br><img data-src="https://i.loli.net/2021/07/19/MwhdEQe4bgUSpZc.jpg" alt="最后一次showcase"><span class="image-caption">最后一次showcase</span></p>
<h3 id="Lunch-Learn"><a href="#Lunch-Learn" class="headerlink" title="Lunch &amp; Learn"></a>Lunch &amp; Learn</h3><p>Lunch &amp; Learn是指午饭过后，由trainee来讲session，主题不限，自发报名。<br>我这个菜鸡只能听大佬们讲，印象最深的两个session，一个是如何根据用户习惯、利用用户心理学来设计产品页面，是个来自深圳的UX小姐姐讲的，看着人家口语流利、游刃有余的表现，我真的太佩服了。<br>另一个session是来自日本的小哥哥讲的，主题是Yasukuni Shrine (靖国神社): The Dark Side of Japan，是个敏感话题，所以印象深刻。这个小哥哥虽然来自日本，但他却不是日裔，是个混血儿，据说他从小在国际学校长大，之后也是在不同的国家上学，经历十分丰富，总之也是个大佬。<br>其它有关于Node.js的，也有讲Docker、Bash基础的，还有文化类的session。学员中真是藏龙卧虎啊，在一堆大佬面前生存的我不禁瑟瑟发抖。</p>
<h3 id="正装日"><a href="#正装日" class="headerlink" title="正装日"></a>正装日</h3><p>每周周二是TWU的正装日，所有的trainer &amp; trainee都需要穿正装。<br>那时的我还不懂什么是通勤风，就直接提前在淘宝上买了一身正装，结果穿上之后，活脱脱一个房产中介。后来去周围的商场买了一个稍微好看点的衬衫，但也没好到哪去，所以衣品真的很重要。</p>
<h3 id="Pecha-Kucha"><a href="#Pecha-Kucha" class="headerlink" title="Pecha Kucha"></a>Pecha Kucha</h3><div class="note info"><p>Pecha Kucha是TWU的一个演讲活动，每个trainee要在TWU培训的五周内，给大家分享一个主题，时间大概20分钟，主题内容不限。<br>相比于分组做项目、分组做调研，这个可就是孤军奋战了。要在全体trainee和trainer的目光注视下，做一个至少20分钟的全英文演讲，对刚毕业的我来说，真的是一个巨大的挑战。由于这个是每个trainee都要做，所以每天下班前都会有人分享，培训开始的时候会让大家自己选择分享的日期，选好了把写有自己名字的便利贴放在表格里。<br>我最终选择在第三周的周四做分享，也就是8.16，第二天刚好是七夕节，所以就想着干脆讲中国的节日好了，就这么草率的决定了。<br>刚开始看别的trainee分享，每个人都很棒，游刃有余，真的都是大佬。还有印象的几个分享是古筝、移动支付，有一个印度的小姐姐也分享了印度的传统节日，跟我的主题撞了，不过不慌。<br>由于我是懒癌晚期+重度拖延症患者，15号才真正开始准备演讲的PPT，可偏偏那天电脑就突然开始死机了，后来在网上找到一种强制开机的办法，但电脑还是时不时就自动关机，就这样在心惊胆战中准备好了PPT。</p>
<img data-src="https://i.loli.net/2021/07/20/RazVb2EMsYxZqX1.jpg" width="350" height="500" alt="电脑死机了>.<"><span class="image-caption">电脑死机了>.<</span>
8.16很快就到了，白天培训的时候我还在想文案，调整PPT的排版。但无论怎么调整，都控制不住紧张的心跳，晚上还是硬着头皮演讲完了。刚开始讲的时候真的是蜜汁冷场，观众都一脸冷漠，搞得我更紧张了，眼神总是看着PPT，后期靠着提问环节的freestyle才找回了点场子。
按照讲session的惯例，结束后收集了大家的反馈，大多数都是说我缺少eye contact，没有面向观众，还有说我准备不充分的。但更多的小伙伴还是鼓励我，都是善良的人啊。其实自己心里很有逼数，我的演讲打6分不能再多了。</div>

<h3 id="Case-Study"><a href="#Case-Study" class="headerlink" title="Case Study"></a>Case Study</h3><p>Case Study是TWU期间的一个社会调研活动，随机分组进行，每组6-7个人。<br>调研的目的是让trainee从不同的角度来思考社会和经济公正，每个小组会了解到一个具体的社会问题，作为调研的主题，了解TW是如何看待并影响这个问题的，以及TW针对这个问题做了什么。最后把调研结论在第五周的小组演讲中分享给大家，这个演讲还会邀请公司在参与这方面工作的人来听，总之也是一个了解多元文化的机会。<br>我的小组有6个人，有来自中国、印度、巴西、日本的trainee，主题是 <strong>Inequality in India</strong>，调研印度社会的不平等现象，包括经济、宗教、种姓、医疗四个方面。<br>最令我震惊的就是种姓制度了，在培训的第三周，我们有一次和印度同事交流的机会，沟通过程中得知，在印度，低种姓的印度人根本没有机会从事那些体面的工作，只能得到打扫厕所之类的又脏又累的工作，还要遭受别人的唾弃和蔑视，真的很可怕。</p>
<p><img data-src="https://i.loli.net/2021/07/19/aFnGl7KZj2yLNdf.png" alt="PPT上关于种姓制度的一页"><span class="image-caption">PPT上关于种姓制度的一页</span><br>培训第五周，我们做了演讲分享，6个人每人讲一个部分，这次的演讲我的表现还不错，至少比Pecha Kucha好多了，所以还是有进步的。</p>
<h3 id="NGO-Activity"><a href="#NGO-Activity" class="headerlink" title="NGO Activity"></a>NGO Activity</h3><p>第三周的周末，TWU举办了NGO活动，邀请一些贫困地区的小学生来公司，体验代码技术带来的便利。我们和小朋友一起玩游戏，教他们使用电脑。此外，还邀请了一些卖手工艺品的小摊贩来公司售卖，我买了很多纪念品。</p>
<img data-src="https://i.loli.net/2021/07/19/bXoBk4EK2jszepg.jpg" width="350" height="500" alt="和小朋友玩游戏的trainer"><span class="image-caption">和小朋友玩游戏的trainer</span>

<h3 id="Graduation-ceremony"><a href="#Graduation-ceremony" class="headerlink" title="Graduation ceremony"></a>Graduation ceremony</h3><p>5周的时间过的很快，8.31号，在离开浦那前的最后一个工作日，就是我们的Graduation Day了，在酒店里进行。<br>主持人先是让trainer们播放自己制作的小视频，是我们这5周经历的剪影；然后还有印度小姐姐跳舞表演节目，气氛很happy；最后就是每个小组分享，还是首先播放小组制作的小视频，里面是每个小组在这5周的经历，我们组的视频是UX做的。</p>
<p><img data-src="https://i.loli.net/2021/07/20/rBjG4qsic6RoEvZ.png" alt="视频剪影"><span class="image-caption">视频剪影</span><br>然后就是把这五周做的模拟项目进行公开showcase，我们组是我来演示，然后BA小姐姐介绍，但是，演示过程中竟然500了，这个意外让整个会场气氛更high了，好像大家都在等这个彩蛋，我们也是所有小组唯一 showcase 500 的，特别逗。<br>整个Graduation ceremony就这样在欢笑声中结束了，5周的学习生活也告一段落了，虽然整个过程大部分时间我都很自闭，但整体来说收获也是巨大的。</p>
<p><img data-src="https://i.loli.net/2021/07/19/NrTUfJ1OqVQYoX8.jpg" alt="trainer&amp;trainee大合照"><span class="image-caption">trainer&amp;trainee大合照</span></p>
<h2 id="饮食篇"><a href="#饮食篇" class="headerlink" title="饮食篇"></a>饮食篇</h2><h3 id="便利店"><a href="#便利店" class="headerlink" title="便利店"></a>便利店</h3><p>STAY@HOME 旅馆前边的路口旁，有一个小便利店，平时会在那买一些饮用水，因为旅馆的水不太敢喝。也会买一些巧克力、饼干、薯片之类的零食，讲道理只要不是咖喱味的，味道和国内也差不多。<br>本来以为在印度买东西便宜些，结果也和国内差不多，只是面值大一些，比如在国内买瓶矿泉水2块，在这买瓶水也是20卢比。</p>
<h3 id="公司餐厅"><a href="#公司餐厅" class="headerlink" title="公司餐厅"></a>公司餐厅</h3><p>TWU所在的浦那办公室，有一个员工餐厅，早上可以去后厨找服务员要个煎蛋。中午提供的餐食是自助餐，但咖喱太多总是吃不惯，而且也是糊状，颜色和形状也非常容易让人产生联想，每次我都挑没有咖喱的东西吃。<br>每次提到印度的食物，好多人都会说spicy，但他们的辣真的就只是味觉上的辣，吃了不会让人有再吃的欲望，不像国内的辣味，都是香辣，吃了还想吃。<br>此外，公司也提供了零食，比如巧克力饼干、薯片之类，还会定期提供印度的小吃给大家(虽然真的不太符合我的胃口)。</p>
<h3 id="住处餐厅"><a href="#住处餐厅" class="headerlink" title="住处餐厅"></a>住处餐厅</h3><p>虽然我们住在STAY@HOME，但住处的餐厅是在Home From Home的顶楼，厨师全是印度小哥。</p>
<p><img data-src="https://i.loli.net/2021/07/19/gAyodqkEvG38SjI.png" alt="Home From Home餐厅"><span class="image-caption">Home From Home餐厅</span><br>早上可以在这吃早餐，晚上下班回来也可以在这吃饭，餐厅的账单每周一结算。我个人比较常吃的是鸡肉面条和煎蛋卷，有时候也有小伙伴叫外卖买披萨，我也可以蹭一波，除了刚开始的几天，后来这里就很少看到国外小伙伴的身影了，基本上都去外边吃了。</p>
<p><img data-src="https://i.loli.net/2021/07/19/iATXRQPJHhlM3wK.jpg" alt="在餐厅吃饭的小伙伴们"><span class="image-caption">在餐厅吃饭的小伙伴们</span><br>某次空盘行动，两个吃货的盛宴：老干妈+Egg Sandwich+Chicken noodle+2 omelet+fried chicken，右边是我经常吃的Chicken noodle，配上老干妈还不错的。</p>
<p><img data-src="https://i.loli.net/2021/07/20/aCTmZ9cKnXkNO26.jpg" alt="空盘行动"><span class="image-caption">空盘行动</span></p>
<h3 id="出去吃"><a href="#出去吃" class="headerlink" title="出去吃"></a>出去吃</h3><p>住所前边的路口左转200米，有一家西餐厅，忘记名字了，有自助餐也可以点单。刚来印度的时候就发现了这家宝藏餐厅，之后就经常来这里吃，一顿差不多20-40。餐厅的服务很赞，甚至有时候我在吃饭，服务员就站在我旁边，看着我吃，主动帮我加水加米饭，到最后我说了不需要他才走开，和国内同等级的餐厅服务相比，差别巨大。<br>从住处往外走2公里左右，有个商场，叫Phoenix Marketcity，规格和万达广场差不多，里面有很多餐厅，还有肯德基，都可以去吃。<br>此外，TWU也组织了好几次聚餐，可以好好吃一顿。</p>
<img data-src="https://i.loli.net/2021/07/19/lF6BD1x52IPSRK4.jpg" width="450" height="800" alt="外面的美食"><span class="image-caption">外面的美食</span>

<h3 id="自给自足"><a href="#自给自足" class="headerlink" title="自给自足"></a>自给自足</h3><p>时间长了，难免想念国内的美食，有小伙伴自带了螺蛳粉，我经常去蹭吃，第一次吃这个然后就被种草了，感觉人家带的螺蛳粉大部分都被我吃掉了，但这个是真的救命啊。<br>火锅是有几次和成都的小伙伴们一起吃的，锅底也是他们提供的，正好有两个小电锅，所以奇迹般地吃上了鸳鸯锅。食材是在 Phoenix Marketcity 里的超市买的，我在超市里发现了一种叫 Chinese Noodle 的速食面条，下在锅里竟然特别好吃，获得了大家的一致好评。</p>
<p><img data-src="https://i.loli.net/2021/07/19/FGuqYzRQkAJwpIt.jpg" alt="螺蛳粉和火锅"><span class="image-caption">螺蛳粉和火锅</span></p>
<h3 id="叫外卖"><a href="#叫外卖" class="headerlink" title="叫外卖"></a>叫外卖</h3><p>在印度也可以叫外卖，不过我没有尝试过，据说是用 <a href="https://baike.baidu.com/item/Zomato/19499991?fr=aladdin">Zomato</a> 这个软件点的。</p>
<h2 id="娱乐篇"><a href="#娱乐篇" class="headerlink" title="娱乐篇"></a>娱乐篇</h2><h3 id="Phoenix-Marketcity"><a href="#Phoenix-Marketcity" class="headerlink" title="Phoenix Marketcity"></a>Phoenix Marketcity</h3><p>首先就是离住所2公里左右的 Phoenix Marketcity 商场，大家习惯叫 Phoenix Mall，据说是印度最大的购物中心之一。我们经常会来这里逛逛，里边大概4/5层，结构和国内的万达很像。与国内商场不同的是，进这里边还需要做安检，和国内进地铁的流程差不多，有点奇怪。</p>
<p><img data-src="https://dynamic-media-cdn.tripadvisor.com/media/photo-o/13/78/28/0b/phoenix-market-city.jpg?w=1400&amp;h=-1&amp;s=1" alt="商场门口"><span class="image-caption">商场门口</span><br>有时候是我们自己组团去，后来公司的通勤大巴在这里也会停，我们就经常下班后在这下车，然后进里边吃饭买东西。</p>
<h3 id="Team-Outing"><a href="#Team-Outing" class="headerlink" title="Team Outing"></a>Team Outing</h3><p>第三周我们的模拟项目小组进行了唯一一次团建，还是去Phoenix Mall，里面有一个玩乐场，可以打桌球，玩跳舞机，还可以打保龄球。</p>
<p><img data-src="https://i.loli.net/2021/07/20/R3WwcsB9yihkCt2.jpg" alt="大秀舞姿的trainer"><span class="image-caption">大秀舞姿的trainer</span><br><img data-src="https://i.loli.net/2021/07/20/4wmDLG5OWUuT3xX.jpg" alt="保龄球记分板(No1!)和我帅气的背影"><span class="image-caption">保龄球记分板(No1!)和我帅气的背影</span></p>
<h3 id="办公室的欢乐时光"><a href="#办公室的欢乐时光" class="headerlink" title="办公室的欢乐时光"></a>办公室的欢乐时光</h3><p>浦那办公室有很多娱乐设施，比如桌球、台球、乒乓球之类。办公室装修也很有意思，里面还有一排火车车厢式的会议室。TWU的trainer们还会经常组织一些游戏，一群刚毕业的小伙伴聚在一起，也有无穷欢乐。</p>
<p><img data-src="https://i.loli.net/2021/07/20/bqLz5OE3Y86PmCR.jpg" alt="外国小姐姐秒变印度女杀手"><span class="image-caption">外国小姐姐秒变印度女杀手</span></p>
<h3 id="自娱自乐"><a href="#自娱自乐" class="headerlink" title="自娱自乐"></a>自娱自乐</h3><p>有时候，国内的小伙伴们会聚在一起玩狼人杀，在这里我暴露了自己游戏黑洞的本质，最后只能看着大家玩。再最后我选择自己带着电脑去看电影，还被同行的小姐姐种草了一部韩剧。</p>
<h2 id="出行篇"><a href="#出行篇" class="headerlink" title="出行篇"></a>出行篇</h2><h3 id="日常通勤"><a href="#日常通勤" class="headerlink" title="日常通勤"></a>日常通勤</h3><p>首先就是日常通勤啦，上下班都有大巴来接，分不同的班次，大概十几分钟的路程。<br>上班路上看到的浦那街头壁画<a href="https://www.punebiennale.in/yerwada-mural-song-of-the-city.php">《河的故事》</a>：</p>
<video width="500" height="300" controls="">
    <source src="../videos/Punewalldraw.mp4" type="video/mp4">
</video>

<p>这个视频是从浦那办公室出发，到我们住所的全程路线，别的小伙伴拍的：</p>
<video width="500" height="300" controls="">
    <source src="../videos/TWUindiaworkpath.mp4" type="video/mp4">
</video>


<h3 id="组团出行"><a href="#组团出行" class="headerlink" title="组团出行"></a>组团出行</h3><p>日常培训和公司活动都有车接送，自己出去的话就得另想办法了，因为在异国他乡，为了安全起见，我们一般都是结伴出行的。<br>来印度第二天，我们和国外的小伙伴一起步行去Phoenix Mall，回程尝试用Uber打车，但因为交流问题，费了好大劲才找到司机。后来组团出行也多是用Uber打车。<br>Uber打到的车有普通轿车，也有印度的「突突车」。突突车就是下图这种三轮电动车，在浦那街头很常见，感觉像是出租车一样，价格忘记了，反正还可以接受；普通轿车的话，街头最常见的是一种S型车标的轿车，后来了解到这种车叫铃木，是印度最热销的汽车品牌，下图也有：</p>
<p><img data-src="https://i.loli.net/2021/07/20/JrByUkmCX6KQiV2.png" alt="浦那常见的交通车辆"><span class="image-caption">浦那常见的交通车辆</span><br>有一次中国的trainer们约我们出去吃饭，去了一家叫terttulia的餐厅，环境挺不错的：</p>
<p><img data-src="https://i.loli.net/2021/07/20/teumPcO1QFEqVH4.png" alt="pune terttulia"><span class="image-caption">pune terttulia</span><br>这家店所在的位置好像也很好，因为店门口的街道上来往车辆都是豪车，不像上文中提到的满是铃木车的浦那街头，我在店门口看到了一只可以脑补一出偶像剧的狗子，自带忧郁气质：</p>
<img data-src="https://i.loli.net/2021/07/20/iAusQoYyVC3ZxR8.jpg" width="350" height="500" alt="自带忧郁气质的狗子"><span class="image-caption">自带忧郁气质的狗子</span>


<h3 id="Weekend-Trip"><a href="#Weekend-Trip" class="headerlink" title="Weekend Trip"></a>Weekend Trip</h3><p>在TWU，会有一次全体出游的机会，比如TWU西安的出游目的地是城墙。而在浦那，出游日定在第四周的周末，行程是这样的：<br><img data-src="https://i.loli.net/2021/07/20/YhcHPJ8sdjltS5T.png" alt="Weekend Trip行程单"><span class="image-caption">Weekend Trip行程单</span></p>
<h4 id="出发"><a href="#出发" class="headerlink" title="出发"></a>出发</h4><p>周六早上按照计划出发，给大家发了纸质的行程单，里面有景点和住所介绍，当日的天气也是我喜欢的微雨天。</p>
<img data-src="https://i.loli.net/2021/07/20/mWVpy4MeZ9dFNT3.jpg" width="350" height="500" alt="坐大巴出发"><span class="image-caption">坐大巴出发</span>

<h4 id="Aga-Khan-Palace"><a href="#Aga-Khan-Palace" class="headerlink" title="Aga Khan Palace"></a>Aga Khan Palace</h4><p><img data-src="https://i.loli.net/2021/07/20/vp2NohPVtwzbKCS.png" alt="Aga Khan Palace"><span class="image-caption">Aga Khan Palace</span><br>不一会，我们就到了Aga Khan Palace，中文名叫阿迦汗宫，是1940年囚禁莫罕达斯甘地的地方，因此成为印度重要的地标之一。附近还有他妻子和秘书的纪念碑，他们在囚禁期间不幸离世。进入宫内可以参观展示甘地一生特殊事件的照片廊，还有甘地当时的日常生活用品，如甘地的衣物和慷慨激昂的信件。</p>
<p><img data-src="https://i.loli.net/2021/07/20/iXfNkMSu8H4db79.jpg" alt="阿迦汗宫的甘地像"><span class="image-caption">阿迦汗宫的甘地像</span><br><img data-src="https://i.loli.net/2021/07/20/wiGv1mH95n3SKau.jpg" alt="宫内建筑"><span class="image-caption">宫内建筑</span></p>
<h4 id="lonavala-khandala"><a href="#lonavala-khandala" class="headerlink" title="lonavala &amp; khandala"></a>lonavala &amp; khandala</h4><p>lonavala &amp; khandala是纸质行程单上的一个景点，上边说这里是是印度马哈拉施特拉邦西高止山脉上的一个避暑胜地，但因为下雨，所以就没有去。</p>
<h4 id="Lagoona-Resort"><a href="#Lagoona-Resort" class="headerlink" title="Lagoona Resort"></a>Lagoona Resort</h4><p><img data-src="https://i.loli.net/2021/07/20/raKT4xtElA5bvoy.png" alt="Lagoona Resort"><span class="image-caption">Lagoona Resort</span><br>游览完阿迦汗宫，我们来到了晚上休息的酒店，酒店有三层，欧式风格，房间是提前安排好的，两人一间，我和同行的西安小姐姐住一间。吃完午餐，我们在周围转了转，这里还有桌球、台球、积木等等娱乐设施，玩了一会。</p>
<p><img data-src="https://i.loli.net/2021/07/20/fKtFhTJ6oCSu1O9.jpg" alt="酒店内部"><span class="image-caption">酒店内部</span><br>到了晚上，酒店一楼有DJ party，整个楼层瞬间变成了蹦迪现场，周围还提供了酒品、自助餐、甜品，我买了几瓶酒小酌，和大家一起融入了蹦迪的队伍。</p>
<p><img data-src="https://i.loli.net/2021/07/20/qvS7AKlyQWbcs5Y.jpg" alt="印度打碟小哥"><span class="image-caption">印度打碟小哥</span><br><img data-src="https://i.loli.net/2021/07/20/HNDM7VY18cW2OFX.jpg" alt="蹦迪现场"><span class="image-caption">蹦迪现场</span><br>旁边还有个摄影棚可以和小伙伴们一起照相，戴上拍照的道具，一个人可以拿到三张照片。我们还和印度的小伙伴们打了手鼓，总之非常开心。到了晚上1点多，我已经玩不动了，回到楼上，国内的小伙伴约着一起在房间里畅聊，聊到深夜才散场。<br>第二天早上吃完早餐，退了房间，我们就离开了这里，Weekend Trip就这样愉快的结束了。</p>
<p><img data-src="https://i.loli.net/2021/07/20/vBZigRAMqulyWTK.jpg" alt="最后的大合照"><span class="image-caption">最后的大合照</span></p>
<h2 id="其他篇"><a href="#其他篇" class="headerlink" title="其他篇"></a>其他篇</h2><h3 id="国内外trainee文化差异"><a href="#国内外trainee文化差异" class="headerlink" title="国内外trainee文化差异"></a>国内外trainee文化差异</h3><p>在整个TWU的培训过程中，国内的trainee除了英语是最大的挑战外，总会被说不积极，具体表现在听课时不积极提问，除了工作上的沟通外，大多数国内trainee也不积极和国外的trainee交流。<br>但对于我而言，这个是真的没办法避免，因为我是本来就不太会主动和别人交流的类型，更别说第一次在这种纯英文环境下，刚开始连课都听不大懂，更别说提问了，其他小伙伴不积极我就不知道啥原因了，也许和我一样吧；对比我们，国外的trainee确实是更open一点，他们经常晚上出去happy，有一次下班还在大巴里放音乐蹦迪，嗯，可能文化不一样吧。</p>
<h3 id="为「钱」发愁的那些事儿"><a href="#为「钱」发愁的那些事儿" class="headerlink" title="为「钱」发愁的那些事儿"></a>为「钱」发愁的那些事儿</h3><p>来浦那之前我就在国内银行换了200美金，到了之后多番打听，才和同行小伙伴一起在 Phoenix Mall 里换成了卢比，但还要收取手续费，拿到的钱折算成人民币大概1000块左右，钱花完之后我又开始发愁了。好在住处前边有一个ATM，可以取一些现金，但我没有银行卡，所以后来只能和取到钱的小伙伴兑换，然后微信给人家转帐。</p>
<h3 id="浦那市区环境差异"><a href="#浦那市区环境差异" class="headerlink" title="浦那市区环境差异"></a>浦那市区环境差异</h3><p>不同于国内的区域规划，印度的土地好像是部分私有的，这就导致同一片区域生活环境差距很大，比如上文提到的Phoenix Mall明明是个大商场，但商场外不远的地方竟然有个小树林，而且里面垃圾很多，还有污水流在路面；再比如我们住的旅馆，看着环境尚可，但旅馆100米外的路口对面，有一些棚户区，那里的人无论是穿着还是打扮，都感觉比较贫穷，旁边竟然还有一个健身房，但里面健身的人不像是住在这些棚户区里的，就感觉很离谱。</p>
<h3 id="手机开通国际漫游"><a href="#手机开通国际漫游" class="headerlink" title="手机开通国际漫游"></a>手机开通国际漫游</h3><p>来浦那工作的第一天，登录公司办公应用需要接收手机短信，然而我并没有办理手机卡的国际漫游，根本收不到短信。所以赶紧联系家人让他们帮我办理，才可以正常工作，来之前根本没想到这点，真是失策，以后再出国一定要记得开通国际漫游啊。</p>
<h3 id="一些奇怪的小插曲"><a href="#一些奇怪的小插曲" class="headerlink" title="一些奇怪的小插曲"></a>一些奇怪的小插曲</h3><ul>
<li>在上面的下班视频里可以看到，马路上除了车子，有时还有牛羊在上面行走。</li>
<li>有一次工作日，我们被通知放半天假，说是有示威游行。</li>
<li>在上下班的大巴上，有时看到下面有头顶很多东西的人走在路上，而且还走得很稳。</li>
<li>有次坐在上班大巴上，我竟然看到了摩拜单车！但并没有扫着试试看。</li>
</ul>
<img data-src="https://i.loli.net/2021/07/20/ERsOIDPkFarqod9.jpg" width="350" height="500" alt="浦那街头惊现摩拜单车"><span class="image-caption">浦那街头惊现摩拜单车</span>

<h2 id="再见印度"><a href="#再见印度" class="headerlink" title="再见印度"></a>再见印度</h2><h3 id="浦那出发"><a href="#浦那出发" class="headerlink" title="浦那出发"></a>浦那出发</h3><p>Graduation ceremony的第二天，我们就踏上了回国的旅程，是晚上的机票，所以早上和小伙伴去Phoenix Mall买了些纪念品，我主要是买了些印度的零食，其他的买不起也带不走。中午和武汉的小伙伴们，在离住处不远的西餐厅最后吃了一次自助餐。晚上又回去收拾行李。</p>
<img data-src="https://i.loli.net/2021/07/20/c79B8dbvOEezMAI.jpg" width="500" height="400" alt="TWU纪念品"><span class="image-caption">TWU纪念品</span>
到了晚上，旅馆有送我们去浦那机场的面包车，和来时一样，晚上9点多，我们就到了浦那机场。

<img data-src="https://i.loli.net/2021/07/20/M3so7nd84fEYZRr.jpg" width="350" height="500" alt="浦那机场"><span class="image-caption">浦那机场</span>

<h3 id="到达国内"><a href="#到达国内" class="headerlink" title="到达国内"></a>到达国内</h3><p>回程的路线和来时一样，但心境更淡定了，又在德里机场免税店买了点纪念品。9.2日中午12点多，终于到了北京，订了下午回西安的机票，在机场吃了顿包子，真的很香，一个多月的印度咖喱真的是够了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<img data-src="https://i.loli.net/2021/07/20/cI13G8AivFj9JSr.jpg" width="500" height="400" alt="真香"><span class="image-caption">真香</span>

<h2 id="结束之后"><a href="#结束之后" class="headerlink" title="结束之后"></a>结束之后</h2><p>其实这篇TWU回忆，是21年7月份写的，此时距这趟旅程，已经过去了整整3年。那时的我绝对想不到，这会是我工作3年中唯一一次出差，而此后3年的TWU，已经变成了TWUC，再也没有机会去印度参加TWU了，我这届是最后一次，而去年更是因为疫情，TWU只能改成线上课程。</p>
<p>时光荏苒，我却还能如此详细的写出这些回忆，足可见这次旅程对我而言是多么难忘，在搜集整理资料的时候，我也仿佛掉进了时间的漩涡，好像又回到了3年前，一切未曾改变，我还是那个刚毕业，什么都不懂的社会小白菜(虽然现在也没有多老道)，如今的我已经可以完全适应全英文的工作环境，用英语讲session、做showcase也早就习以为常。</p>
<p>曾经一起参加TWU的trainee，有的已经离职，有的还和我在一个部门里工作，也经常见面，去年还碰到了几个来西安出差的小伙伴，而那些国外的trainee却被时光尘封在回忆里，再也没有见过面；我的trainer-Daniel也离职了，至于国内的trainer，曾经和其中的一位在两个项目里工作过，前段时间也离职了，还有一个和我在一个部门，但不在一个项目，偶尔见面，其它的trainer则再也没有见过面。</p>
<p>虽然很多的人和事都已经变了，但在TWU之旅结束后，我就把所有的东西收在了一个资料袋里，所以才能写出这篇博客。这样以后想回忆的时候，除了看这篇文章，也可以打开资料袋，就可以随时回到过去，看看记忆里的那些小伙伴。</p>
<img data-src="https://i.loli.net/2021/07/20/ImP9g5KtChEoUpV.jpg" width="400" height="300" alt="纪念印度之行"><span class="image-caption">纪念印度之行</span>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>旅行</tag>
        <tag>工作</tag>
        <tag>ThoughtWorks University</tag>
      </tags>
  </entry>
  <entry>
    <title>谜一样的测试金字塔</title>
    <url>/Test-Pyramid/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2019/12/30/wVkCrdpXnTN5Pg9.png" alt="题图"><span class="image-caption">题图</span>

<blockquote>
<p>作为一个优秀的QA(老脸一红)，最近突然对各种测试相关概念产生了兴趣。比如<strong>BDD</strong>，<strong>测试金字塔</strong>等等。<br>其实这些大佬们提出的概念是好的，但我们知道了这些概念，却无法将它应用到实际工作中，或者应用错了，那就很尴尬。<br>因此，对这些概念我们不仅要知其然，更要知其所以然。不要让这些好理论变成假大空的纸上模型，那今天就来分析一下<mark class="label success">“测试金字塔”</mark>理论和实际应用<span class="emoji" alias="sunglasses" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60e.png?v8">😎</span></p>
</blockquote>
<h2 id="啥是测试金字塔"><a href="#啥是测试金字塔" class="headerlink" title="啥是测试金字塔"></a>啥是测试金字塔</h2><p>测试金字塔是按照分层测试的理论，将各种测试方法和测试对象分层，用来解决敏捷开发中测什么和怎么测的问题。一般划分为四层：<br><img data-src="https://i.loli.net/2020/01/02/tsJBZ4Cv6gKRGFo.png" alt="测试金字塔"><span class="image-caption">测试金字塔</span></p>
<h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><p>根据单元测试测试范围窄，运行速度快，维护方便的特点，把它放在测试金字塔的最底层，所以它的数量和覆盖率也应当是所有测试中最多的。</p>
<h3 id="服务测试"><a href="#服务测试" class="headerlink" title="服务测试"></a>服务测试</h3><p>第二层，包括集成测试/组件测试/接口测试/契约测试。</p>
<blockquote>
<p>大佬说：所有常见的应用都会和一些外部环境做集成（数据库，文件系统，向其他应用发起网络请求）。为了使测试有更好的隔离、运行更快，我们通常不会在编写单元测试时涉及这些外部依赖。不过，这些交互始终是存在的，它们也需要被测试覆盖到。这正是集成测试的用处所在。它们测试的是应用与所有外部依赖的集成。</p>
</blockquote>
<p>大佬还说：<mark class="label info">服务测试是一个难以掌握的术语，所以很多开发人员完全忽略了这一层。在单页应用框架（如 react，angular，ember.js 等）的时代，UI 测试显然不必位于金字塔的最高层，因为完全可以用这些框架对 UI 进行单元测试。</mark></p>
<h3 id="UI-端到端测试"><a href="#UI-端到端测试" class="headerlink" title="UI&amp;端到端测试"></a>UI&amp;端到端测试</h3><ul>
<li>UI测试</li>
</ul>
<p>就是用户界面测试，有时也可以用某些框架提供的组件来写单元测试代替UI测试，所以UI测试并不等于端到端测试。但主流的UI测试还是用Selenium或者Appium等工具自动化完成的。</p>
<ul>
<li>端到端测试</li>
</ul>
<p>包括针对API和用户界面的端到端测试。</p>
<h3 id="手工测试"><a href="#手工测试" class="headerlink" title="手工测试"></a>手工测试</h3><p>第四层，包括必要的手工测试，探索测试和验收测试。有时候，一些功能无法用自动化进行测试，比如页面的美观性可用性等，只能手工测试。而且尽管有单元测试和自动化测试在前，但依然无法保证覆盖所有边缘情况。此时，一些探索测试是非常有必要的。</p>
<h2 id="一些需要注意的点"><a href="#一些需要注意的点" class="headerlink" title="一些需要注意的点"></a>一些需要注意的点</h2><h3 id="不要纠结各种测试术语"><a href="#不要纠结各种测试术语" class="headerlink" title="不要纠结各种测试术语"></a>不要纠结各种测试术语</h3><p>比如有些人说集成测试就是API测试，UI测试就是端到端测试，有人却说这些概念都是不同的。有人喜欢把集成测试叫组件测试等等。这就会导致同一个东西有很多的名字。容易陷入“你说的黑是什么黑，他说的白是什么白”这种无意义的牛角尖中。这个时候，大佬说的话，就很好<span class="emoji" alias="clap" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44f.png?v8">👏</span>：</p>
<div class="note info"><p>各种测试术语并无绝对的对与错。软件开发社区至今也没法给出关于测试术语的明确定义。<br>术语含义本身有模糊性，不必孜孜不倦于其中。你认为的集成测试，可能和其他公司的人的认知也不同，这也没问题。<br>找到适合你和你团队的术语，这就足够了。</p>
</div>
<h3 id="时刻维护金字塔形状，避免测试重复"><a href="#时刻维护金字塔形状，避免测试重复" class="headerlink" title="时刻维护金字塔形状，避免测试重复"></a>时刻维护金字塔形状，避免测试重复</h3><p>首先要避免在金字塔不同层级进行重复测试，因为浪费时间、浪费金钱<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span><br>在高层次测试发现的问题，想办法写低层测试去覆盖它，尽可能把测试往金字塔下层迁移，维护金字塔形状。</p>
<h3 id="整理测试代码"><a href="#整理测试代码" class="headerlink" title="整理测试代码"></a>整理测试代码</h3><p>重构是个好概念，希望你也知道<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>。<br>测试代码加tag, 根据功能分支分类。<br>运用Given,When,Then口诀写测试，一些BDD的测试工具就很好用，比如 <a href="https://cucumber.io/">Cucumber</a>。</p>
<h2 id="测试金字塔是一成不变的吗"><a href="#测试金字塔是一成不变的吗" class="headerlink" title="测试金字塔是一成不变的吗"></a>测试金字塔是一成不变的吗</h2><mark class="label primary">答案是否定的。</mark>

<p>在实际项目中，上面的三层金字塔模型也许过于简单和概括化了。但它却足够简洁，上述三种测试方法也确实是目前最主流的。所以，可以根据实际情况建立自己的金字塔模型，比如可以再细分几层，把里面的测试方法改成别的等等。但一定要遵守这两条法则：</p>
<ul>
<li>按照测试粒度分层</li>
<li>层次越高，你写的测试应该越少</li>
</ul>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><span id="inline-toc">1.</span><a href="https://insights.thoughtworks.cn/practical-test-pyramid/">ThoughtWorks洞见-测试金字塔实战</a></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>敏捷</tag>
        <tag>测试金字塔</tag>
      </tags>
  </entry>
  <entry>
    <title>WebUI自动化测试框架Demo(上)</title>
    <url>/WebUI-AutoTest-Demo-1/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/15/Fh1dMGlPyOWAKmI.png">

<div class="note info"><p>在前几篇博客中，博主分析了一个好的自动化测试框架应有的6大要素，也学习了Java的基础语法，这些都是为了准备Web UI 自动化测试框架Demo Project workshop产出的内容。<br>现在这个workshop已经结束了，所以想给大家分享一下全过程，概念加实操分为上中下三部分详细介绍。</p>
</div>

<h2 id="Maven-介绍"><a href="#Maven-介绍" class="headerlink" title="Maven 介绍"></a>Maven 介绍</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><blockquote>
<p><a href="http://maven.apache.org/">Maven</a>是一个使用POM来构建项目的项目管理工具，它固化了软件开发中的一些最佳实践和模式(比如项目的目录模式，项目的依赖管理，再到整个项目的构建模式)。<br>所以一旦熟悉了一个Maven项目，就知道所有Maven项目是如何构建的，这样可以节省浏览多个项目时的时间。虽然Maven主要用于管理Java项目，但它也可以用于构建和管理C#，Ruby，Scala和其他语言编写的项目。</p>
</blockquote>
<p><strong>POM(Project object model)</strong>: 项目对象模型，可以通过一小段描述信息来管理项目的构建，报告和文档。</p>
<h3 id="没有Maven之前"><a href="#没有Maven之前" class="headerlink" title="没有Maven之前"></a>没有Maven之前</h3><p>我们知道，Maven是一个项目管理工具。</p>
<p>但是项目管理是一个很抽象的概念，它既可以指技术上的管理手段，也可以指“以人为本”的非技术因素，那么Maven自然指的是前者了。为了更好的理解Maven的作用，就要知道没有Maven这类管理工具之前，开发团队是怎么做项目技术管理的。</p>
<div class="note primary"><p>以Java项目为例，在开发中，为了保证编译通过，我们会到处去寻找jar包。<br>有时当编译通过了，运行的时候，却发现”ClassNotFoundException”，我们想到的是，难道还差jar包？很难定位或避免jar包和依赖缺失的问题。<br>而且每个Java项目的目录结构都没有一个统一的标准，配置文件到处都是，单元测试代码到底应该放在哪里也没有一个权威的规范，项目构建过程无法准确定义，流程复杂。给项目的交接带来了困难。</p>
</div>

<p>基于这种种困难，我们希望有一种标准的方式来构建项目，清晰地定义项目的组成，简便的发布项目信息，以及实现在多个项目之间共享JAR。Maven这样的项目管理工具就应运而生了。</p>
<h3 id="有了Maven以后"><a href="#有了Maven以后" class="headerlink" title="有了Maven以后"></a>有了Maven以后</h3><pre><code>不用到处去找项目依赖的jar包了
</code></pre>
<p>在pom文件列出项目依赖：提供自动下载，方便引入项目所需依赖 Jar 包。<br>仓库管理(本地仓库/远程仓库)：提供统一管理所有 Jar 包的工具，想要什么jar包直接从仓库中去取，不必每个人去开源项目的站点去苦苦搜寻了。</p>
<blockquote>
<p><strong>举个例子</strong><br>比如做酸菜鱼，可以直接去超市买酸菜鱼调料包，就不用自己去买各种配料了，也不用操心配料怎么配。Maven就是这个超市，只是它卖的不是酸菜鱼调料包，而是一个jar包已经和它有依赖关系的其他jar包。这样，就不用在项目开始前，去各个网站下载各种不同的jar包了，也不用考虑它们之间的依赖关系。</p>
</blockquote>
<pre><code>目录结构标准化
</code></pre>
<p>Maven提供了一套标准的目录结构，下边是最基本的：<br><img data-src="https://i.loli.net/2020/05/20/qPQsLF6JdGVuOic.png" width="300" height="250"></p>
<pre><code>用配置文件描述项目信息
</code></pre>
<p>用配置文件的方式对项目的描述、名称、版本号、项目依赖等等信息进行描述。使项目描述结构清晰，任何人接手的成本比较低。</p>
<pre><code>用生命周期描述项目构建过程
</code></pre>
<p>用生命周期的概念进行项目构建，就是什么时候干什么事，下文中有详细介绍。</p>
<h3 id="同类常见技术"><a href="#同类常见技术" class="headerlink" title="同类常见技术"></a>同类常见技术</h3><ul>
<li>Ant+lvy: 用build.xml设置task，指定顺序，声明项目构建。使用Apache Ivy来处理Jar包的依赖(在ivy.xml中指定依赖)。</li>
<li>Gradle: 用build.gradle文件声明项目构建，使用Groovy代替xml声明设置项目。</li>
</ul>
<div class="note info"><p><strong>比较：</strong><br>Ant(2000)的主要优点在于对构建过程的控制上，可以自定义构建脚本。但除非是很小的项目，否则它的XML文件很快就大得无法管理。</p>
<p>Maven(2004)的主要优点是生命周期，而且提供自动下载jar包。但正因Maven“约定大于配置”的思想，很难写出复杂、定制化的构建脚本，牺牲了灵活性，甚至不如Ant。同样，用XML写的配置文件会变得越来越大。</p>
<p>Gradle(2012)结合了前两者的优点，它具有Ant的灵活，又有Maven的生命周期管理且易于使用，也提供自动下载jar包。而且它用一种基于Groovy的特定领域语言来声明项目设置，而不是传统的XML，语法更加短小精悍、易于理解。</p>
</div>

<h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><blockquote>
<p>常用的开发工具里面都集成了Maven，提供了图形化操作Maven项目的方式(可能有少许的Bug)，比较方便。下文Demo Project Set Up中会展示在IDEA中创建Maven项目。为了熟悉常用的Maven命令，这里我们就不用图形化操作这种方式，尝试使用本地maven创建一个简单的java工程,深入理解它的作用，体验一下Maven高度自动化构建项目的过程，并解释一些重要的概念。</p>
</blockquote>
<h4 id="Maven安装和环境变量配置"><a href="#Maven安装和环境变量配置" class="headerlink" title="Maven安装和环境变量配置"></a>Maven安装和环境变量配置</h4><img data-src="https://i.loli.net/2020/05/21/oZpv5dSm7J4yXgP.png">

<ul>
<li><a href="https://www.jianshu.com/p/191685a33786">MacOS</a></li>
<li><a href="https://www.jianshu.com/p/62a76daf5096">Windows</a></li>
</ul>
<h4 id="使用Maven项目模版快速创建java项目"><a href="#使用Maven项目模版快速创建java项目" class="headerlink" title="使用Maven项目模版快速创建java项目"></a>使用Maven项目模版快速创建java项目</h4><p><strong>archetype(原型)</strong>，是一个 Maven 插件，准确说是一个项目模板，它的任务是根据模板创建一个项目结构。我们将使用 quickstart 原型插件的RELEASE版本创建一个简单的 java 应用程序。在你想要生成Maven项目的文件夹(我就直接在桌面创建了)输入命令：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">mvn archetype:generate -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=RELEASE<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>Maven将开始处理， 询问项目细节并确认设置，选择默认设置直接按Enter继续：<br><img data-src="https://i.loli.net/2020/05/26/t7iC5AY8BeZdNuj.png"></p>
<div class="note primary"><p> 知识点来了</p>
<p>GroupId: 工件组名，顾名思义，这个应该是公司名或是组织名。一般由三个部分组成，每个部分之间以”.”分隔，第一部分是项目用途，比如用于商业的就是”com”，用于非营利性组织的就是”org”；第二部分是公司名，比如”tengxun”、”baidu”、”alibaba”；第三部分是你的项目名。</p>
<p>ArtifactId: 项目名</p>
<p>Version: 项目版本号，SNAPSHOT版本代表不稳定、尚处于开发中的版本。</p>
<p>package: 资源包名，默认为工件组名。</p>
<p>GroupId/ArtifactId/Version 合称为<strong>Artifact coordinates(工件坐标)</strong>：每一个 Jar包/插件/项目都需要定义一个唯一标识，方便管理维护，因此 Maven 使用 groupId, artifactId, versionId 三元素组成一个 Jar 的坐标。当我们依赖该 Jar 包时，同样需要指定该 Jar 包的坐标。</p>
</div>

<p>之后 Maven 就开始创建项目结构，显示如下:<br><img data-src="https://i.loli.net/2020/05/26/DeYf9bPKNWta71l.png"></p>
<p>现在桌面已经生成了Maven项目Hello, 它具有Maven标准的目录结构，还有Maven帮我们自动生成的App.java和AppTest.java文件：<br><img data-src="https://i.loli.net/2020/05/26/TYhkuHLzJgdvsfw.png"><br><img data-src="https://i.loli.net/2020/05/26/dRIEoeAKfUGsizF.png"></p>
<h4 id="m2文件夹"><a href="#m2文件夹" class="headerlink" title=".m2文件夹"></a>.m2文件夹</h4><p>上文提到，Maven通过仓库统一管理jar包，包括本地仓库和远程仓库。Maven工作时，首先会从本地仓库中获取jar包，当无法获取指定jar包时，本地仓库会从远程仓库中下载jar包，并放入本地仓库以备将来使用。</p>
<p>Maven本地仓库的配置文件和本地jar包存放在.m2文件夹中:<br><img data-src="https://i.loli.net/2020/05/18/hBRzedQJP3CK4yT.png"></p>
<ul>
<li><mark class="label info">.m2文件夹</mark>：当使用maven命令的时候，maven才会创建.m2文件夹，所以如果我们只是在电脑上下载安装了maven，你会发现在用户目录下不存在.m2文件夹，因为并没有让maven执行真正的任务。</li>
<li><mark class="label info">.m2/settings.xml</mark>: maven配置文件。默认情况下.m2文件夹是没有setting.xml的，所以我们可以看到上图中的.m2文件夹并没有setting.xml。我们一般把Maven全局仓库设置文件%MAVEN_HOME%/conf/settings.xml拷贝到这个文件夹下，修改成用户仓库设置，后者优先级更高：</li>
</ul>
<img data-src="https://i.loli.net/2020/05/18/UhTxj6nr7pcNe9V.png">
- <mark class="label info">.m2/repository</mark>: maven项目所有的jar包，下载后都会存放在此处。

<h4 id="pom-xml文件结构解释"><a href="#pom-xml文件结构解释" class="headerlink" title="pom.xml文件结构解释"></a>pom.xml文件结构解释</h4><p>pom.xml配置文件是Maven的核心，它包含了项目的基本信息，用于描述项目如何构建，声明项目依赖，等等。<br>Maven工作时，会在当前目录中查找pom.xml并读取内容，获取所需的配置信息，然后执行目标。<br>这里我们用默认生成的pom.xml为例详细解释下它的结构：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;!-- 当前Maven模型的版本号，对于Maven2和Maven3来说，它只能是4.0.0 --&gt;

&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;
  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;

&lt;!-- 项目信息：坐标、版本、名称、url等等 --&gt;

  &lt;groupId&gt;org.me.hello&lt;/groupId&gt;
  &lt;artifactId&gt;Hello&lt;/artifactId&gt;
  &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;

  &lt;name&gt;Hello&lt;/name&gt;
  &lt;!-- FIXME change it to the project's website --&gt;
  &lt;url&gt;http://www.example.com&lt;/url&gt;

&lt;!-- 定义项目的配置属性的，例如项目构建源码编码方，maven编译插件版本等等 --&gt;

  &lt;properties&gt;
    &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;
    &lt;maven.compiler.source&gt;1.7&lt;/maven.compiler.source&gt;
    &lt;maven.compiler.target&gt;1.7&lt;/maven.compiler.target&gt;
  &lt;/properties&gt;

&lt;!-- 项目依赖及其坐标，相关jar包存放在.m2/repository下 --&gt;

  &lt;dependencies&gt;
    &lt;dependency&gt;
      &lt;groupId&gt;junit&lt;/groupId&gt;
      &lt;artifactId&gt;junit&lt;/artifactId&gt;
      &lt;version&gt;4.11&lt;/version&gt;
      &lt;scope&gt;test&lt;/scope&gt;
    &lt;/dependency&gt;
  &lt;/dependencies&gt;

&lt;!-- 构建项目需要的信息，包括Mave生命周期中的插件目标列表等等。  --&gt;

  &lt;build&gt;
    &lt;pluginManagement&gt;&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;
      &lt;plugins&gt;
        &lt;!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-clean-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.1.0&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.8.0&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.22.1&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-install-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.5.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-deploy-plugin&lt;/artifactId&gt;
          &lt;version&gt;2.8.2&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle --&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-site-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.7.1&lt;/version&gt;
        &lt;/plugin&gt;
        &lt;plugin&gt;
          &lt;artifactId&gt;maven-project-info-reports-plugin&lt;/artifactId&gt;
          &lt;version&gt;3.0.0&lt;/version&gt;
        &lt;/plugin&gt;
      &lt;/plugins&gt;
    &lt;/pluginManagement&gt;
  &lt;/build&gt;
&lt;/project&gt;
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>Maven生命周期</strong></p>
<p>Maven有三个标准的生命周期(clean/default/site)，每一个生命周期都有一个或多个插件目标，每个插件目标代表一个特定的任务/命令/生命周期阶段。所有的插件目标都在pom文件中保存。Maven的生命周期是为了对所有的构建过程进行抽象，便于统一。就是什么时候干什么事。</p>
<ul>
<li><mark class="label info">clean lifecycle</mark></li>
</ul>
<p>此生命周期是在给工程做清理工作，它包含以下阶段：pre-clean(执行项目清理前所需要的工作), clean(清理上一次build项目生成的文件), post-clean(执行完成项目清理所需的工作)等等。<br>在一个生命周期中，运行某个阶段的时候，它之前的所有阶段都会被运行，也就是说，如果执行“mvn clean”将运行pre-clean&amp;clean两个生命周期阶段。</p>
<ul>
<li><mark class="label info">default lifecycle</mark></li>
</ul>
<p>这是 Maven 的主要生命周期，被用于构建应用。它主要包括项目的compile(编译)，test(测试)，package(打包)，install(安装)，deploy(部署)等阶段。</p>
<ul>
<li><mark class="label info">site lifecycle</mark></li>
</ul>
<p>Site生命周期是用来创建新的报告文档、部署站点等。它主要包含pre-site(执行一些生成项目站点前的准备工作), site(生成项目站点的文档), post-site(执行需完成站点生成的工作，如站点部署的准备工作), site-deploy(向制定的web服务器部署站点生成文件)等阶段。</p>
<h4 id="使用Maven编译项目"><a href="#使用Maven编译项目" class="headerlink" title="使用Maven编译项目"></a>使用Maven编译项目</h4><p>将App.java代码改动如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.me.hello;

public class App 
{
    public String sayHello(String name){
        return "Hello "+name+"!";
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>将AppTest.java代码改动如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.me.hello;

import static org.junit.Assert.*;

import org.junit.Test;

public class AppTest 
{

    @Test
    public void testApp(){
        App app = new App();
        String results = app.sayHello("gacl");
        assertEquals("Hello gacl!",results);        
    }

}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>


<p>进入Hello项目根目录执行 <strong>mvn compile</strong> 命令编译项目的java类:<br><img data-src="https://i.loli.net/2020/05/26/qdcOrMWeVPR1Z3G.png"><br>观察终端输出结果，可以看到：</p>
<ul>
<li>maven运行了default lifecycle的 resources&amp;compile 两个生命周期阶段。因为在我们的pom文件中resources阶段是在compile之前的，所以compile阶段运行的时候，在它之前的resources阶段也会被运行。</li>
<li>我们在pom文件里添加了junit的依赖，如果本地仓库中没有相关的jar包，终端输出结果会包含去远程仓库下载的信息。由于我本地已经有了相关的jar包，所以这里终端输出结果中并没有下载相关依赖的内容。</li>
</ul>
<p>这就是使用Maven自动编译项目的过程，可以看到Hello项目的根目录下多了一个 <strong>target</strong> 文件夹，这个文件夹就是编译成功之后Maven帮我们生成的目标文件夹，在target/classes路径下可以看到编译好的.class文件：<br><img data-src="https://i.loli.net/2020/05/26/EXtn39ymWNbzh7V.png"></p>
<h4 id="使用Maven清理项目"><a href="#使用Maven清理项目" class="headerlink" title="使用Maven清理项目"></a>使用Maven清理项目</h4><p>继续执行 <strong>mvn clean</strong> 命令清理项目，清理项目的过程就是把执行”mvn compile”命令编译项目时生成的target文件夹删掉：<br><img data-src="https://i.loli.net/2020/05/26/G4twiEaUZbCeNQR.png"></p>
<h4 id="使用Maven测试项目"><a href="#使用Maven测试项目" class="headerlink" title="使用Maven测试项目"></a>使用Maven测试项目</h4><p>执行 <strong>mvn test</strong> 命令测试项目，依次运行在它之前的resources、compile生命周期阶段，然后运行surefire插件，从中央仓库下载了一些相关的jar包，执行测试并输出报告：<br><img data-src="https://i.loli.net/2020/05/26/tp7dlvLCeBzJW9F.png"><br>在target文件夹下可以看到编译好的源代码和测试代码文件，和其他生命周期阶段运行后的一些目标文件夹：<br><img data-src="https://i.loli.net/2020/05/25/evEHVoR4xmQ3q2g.png"></p>
<h4 id="使用Maven打包项目"><a href="#使用Maven打包项目" class="headerlink" title="使用Maven打包项目"></a>使用Maven打包项目</h4><p>执行 <strong>mvn package</strong> 命令打包项目，依次执行在它之前的生命周期阶段，然后运行maven-jar-plugin插件打包项目：<br><img data-src="https://i.loli.net/2020/05/26/kJN8EGcFpSMavTR.png"><br>在target文件夹可以看到打包好的jar文件：<br><img data-src="https://i.loli.net/2020/05/26/E35Msda4onlvbP9.png"></p>
<h4 id="使用Maven安装项目"><a href="#使用Maven安装项目" class="headerlink" title="使用Maven安装项目"></a>使用Maven安装项目</h4><p>执行 <strong>mvn install</strong> 命令安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。依次执行在它之前的生命周期阶段，然后执行install生命周期阶段：<br><img data-src="https://i.loli.net/2020/05/26/uZDcXbNQ68KBe4C.png"><br>在本地仓库就可以看到Hello项目的jar包了，路径就是它的包名：<br><img data-src="https://i.loli.net/2020/05/26/5DRTF9OtZMoxXJ3.png"></p>
<h4 id="使用Maven部署项目"><a href="#使用Maven部署项目" class="headerlink" title="使用Maven部署项目"></a>使用Maven部署项目</h4><p>执行 <strong>mvn deploy</strong> 命令将最终的项目包复制到远程仓库中与其他开发者和项目共享。这里因为我们是一个练习项目，就不运行这个命令了。</p>
<h4 id="组合使用Maven命令"><a href="#组合使用Maven命令" class="headerlink" title="组合使用Maven命令"></a>组合使用Maven命令</h4><p>不同生命周期的命令也可以组合使用，比如:</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">mvn clean compile
mvn clean test
mvn clean package
mvn clean install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<img data-src="https://i.loli.net/2020/05/26/YZhiaIcmGxTzVBF.png">

<h4 id="使用Maven生成的jar包"><a href="#使用Maven生成的jar包" class="headerlink" title="使用Maven生成的jar包"></a>使用Maven生成的jar包</h4><p>上面我们已经把Hello项目的jar包安装到了本地仓库，接下来我们练习下在别的项目中使用它，依然通过maven命令新建HelloFriend项目：<br><img data-src="https://i.loli.net/2020/05/26/nSkF6D4fm3CyAWQ.png"></p>
<p>将App.java改名为AppFriend.java，并添加如下代码：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.me.hellofriend;

import org.me.hello.App; //引入hello项目的App.class

public class AppFriend {

    public String sayHelloToFriend(String name){
        
        App app = new App();
        String str = app.sayHello(name)+" I am "+this.getMyName();
        System.out.println(str);
        return str;
    }
    
    public String getMyName(){
        return "John";
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>将AppTest.java改名为AppFriendTest.java，并添加如下代码：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.me.hellofriend;

import static org.junit.Assert.*;

import org.junit.Test;

public class AppFriendTest {

    @Test
    public void tesAppFriend(){
        
        AppFriend appFriend = new AppFriend();
        String results = appFriend.sayHelloToFriend("gacl");
        assertEquals("Hello gacl! I am John",results);
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>因为要使用Hello项目的jar包，我们在pom.xml里添加依赖：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;dependency&gt;
    &lt;groupId&gt;org.me.hello&lt;/groupId&gt;
    &lt;artifactId&gt;Hello&lt;/artifactId&gt;
    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;
&lt;/dependency&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>然后执行 <strong>mvn test</strong> 执行测试：<br><img data-src="https://i.loli.net/2020/05/26/UMrVpTFjC9vyoiS.png"><br>运行成功，说明Hello的jar包已经成功在HelloFriend项目里生效了。</p>
<h2 id="Demo-Project-Set-Up"><a href="#Demo-Project-Set-Up" class="headerlink" title="Demo Project Set Up"></a>Demo Project Set Up</h2><h3 id="创建Maven-Project"><a href="#创建Maven-Project" class="headerlink" title="创建Maven Project"></a>创建Maven Project</h3><p><span id="inline-toc">1.</span> 装好JDK之后，打开IDEA，点击<mark class="label info">File-&gt;New-&gt;Project-&gt;Maven</mark>，勾选“Create from archetype”，然后选择quick start：<br><img data-src="https://i.loli.net/2020/05/15/fk5CHuj3VSzcxsK.jpg"></p>
<p><span id="inline-toc">2.</span> 点击Next，命名项目：<br><img data-src="https://i.loli.net/2020/05/15/JzQ2vPyFL1tm7iA.jpg"></p>
<p><span id="inline-toc">3.</span> 命名为Automation，点击Next：<br><img data-src="https://i.loli.net/2020/05/15/nuy6grKl4vSMkEd.png"></p>
<p><span id="inline-toc">4.</span>点击Finish后, 项目就创建好了，控制台输出的内容和我们上文中用命令创建的时候终端输出内容是一样的：<br><img data-src="https://i.loli.net/2020/05/15/ejac3QP5tVzq6Ls.png"></p>
<h3 id="添加Selenium依赖"><a href="#添加Selenium依赖" class="headerlink" title="添加Selenium依赖"></a>添加Selenium依赖</h3><p>在IDEA点击<mark class="label info">code-&gt;generate-&gt;dependency</mark>(或者在pom.xml文件里Ctrl+N-&gt;Dependency)，打开Maven Artifact Search窗口，这里可以搜索并添加依赖，搜索selenium, 因为我们是用java写代码，所以要加入selenium.java依赖包，选择任一版本：<br><img data-src="https://i.loli.net/2020/05/15/N9yA8i1kGMqOJ6I.png"></p>
<blockquote>
<p>如果怎么都打不开Maven Artifact Search窗口，还可以打开maven <a href="https://mvnrepository.com/">中央仓库</a> 的网站，首页搜索selenium，选择selenium.java依赖包版本，然后将依赖包代码粘贴到pom文件中：</p>
<img data-src="https://i.loli.net/2020/06/02/2pWOkP4cG7TqfKA.png">
<img data-src="https://i.loli.net/2020/06/02/CawP49RQxu3gUhL.png"></blockquote>
<p>之后在pom.xml文件里就可以看到Selenium依赖已经添加了。显示红色因为还没有下载，所以我们要点击页面右上角的Maven小图标下载依赖包:<br><img data-src="https://i.loli.net/2020/05/15/aYy6lZ4ML1UNdRS.png"><br>下载完成后就可以看到相应依赖已经添加到项目的Extenral Libraries中了：<br><img data-src="https://i.loli.net/2020/05/15/BAs3H5etboJ7Lxh.png"><br>下载的依赖文件也可以在创建项目时设置的<strong>Local repository</strong>路径里找到，默认是在<mark class="label info">.m2/repository/</mark>路径下。</p>
<h3 id="下载WebDriver"><a href="#下载WebDriver" class="headerlink" title="下载WebDriver"></a>下载WebDriver</h3><p>有了Selenium依赖，我们还需要下载WebDirver，因为我们是用WebDriver开启浏览器测试。这里我们下载<a href="https://github.com/mozilla/geckodriver/releases">Firefox</a>和<a href="https://chromedriver.chromium.org/downloads">Chrome</a>的WebDriver，下载完成后在项目新建drivers文件夹放置，便于管理：<br><img data-src="https://i.loli.net/2020/05/15/IisXJT1xD4q2yCG.png"></p>
<div class="note warning"><p>注意，下载WebDriver之前，需要确保电脑上已经下载了对应的浏览器，否则是不能使用的。</p>
</div>

<h3 id="编写并运行测试Case"><a href="#编写并运行测试Case" class="headerlink" title="编写并运行测试Case"></a>编写并运行测试Case</h3><p>到这里，我们所有的准备工作都做好了，在org.example包下新建<mark class="label info">SeleniumTest.java</mark>文件，首先编写一个简单的测试case：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">//百度搜索Selenium
package org.example;

import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

public class SeleniumTest {

    @Test
    public void searchSelenium()
    {
        System.setProperty("webdriver.gecko.driver", "drivers/geckodriver");
        //指定要调用的WebDriver,也可以用Chrome
        //语法相应变为：System.setProperty("webdriver.chrome.driver", "drivers/chromedriver")

        WebDriver driver = new FirefoxDriver();

        driver.manage().window().maximize();
        driver.get("https://www.baidu.com/");
        driver.findElement(By.id("kw")).clear();
        driver.findElement(By.id("kw")).sendKeys("selenium");
        driver.findElement(By.id("su")).click();
        driver.quit();
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>运行成功之后，我们的Demo Project Set Up就结束了:<br><img data-src="https://i.loli.net/2020/05/15/iDmgZtcjeTzqfEL.png"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jianshu.com/p/28b7ae892ed1">Maven + TestNG + Jenkins搭建自动化测试框架</a></li>
<li><a href="https://baike.baidu.com/item/Maven">Maven百度百科</a></li>
<li><a href="https://blog.csdn.net/napolunyishi/article/details/39345995">Java构建工具：Ant vs Maven vs Gradle</a></li>
<li><a href="http://www.codingwhy.com/view/718.html">maven .m2文件夹在哪？</a></li>
<li><a href="https://www.cnblogs.com/easonjim/p/6827058.html">.m2\setting.xml文件</a></li>
<li><a href="https://www.zhihu.com/question/20104186">maven是干嘛的？</a></li>
<li><a href="https://www.zhihu.com/question/30432152">如何通俗地理解 Gradle？</a></li>
<li><a href="https://www.runoob.com/maven/project-templates.html">Maven菜鸟教程</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>WebUI自动化测试框架Demo(中)</title>
    <url>/WebUI-AutoTest-Demo-2/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/15/hVCWgPazcRirtLj.jpg">

<div class="note info"><p>上篇博客我们已经完成了Demo Project的Set Up, 这篇文章就来简单用TestNG的注解和testng.xml文件，使代码结构更清晰，并实现element object的good practice.</p>
</div>

<h2 id="TestNG介绍"><a href="#TestNG介绍" class="headerlink" title="TestNG介绍"></a>TestNG介绍</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><pre><code>TestNG是一个开源的自动化测试框架， NG表示Next Generation。 
</code></pre>
<p>TestNG的灵感来源于Junit和Nunit,但其功能优于前面两个框架，例如TestNG支持依赖测试，测试分组等功能，并且它旨在涵盖所有类别的测试：单元测试，功能测试，端到端测试，集成测试等等。</p>
<h3 id="同类技术对比"><a href="#同类技术对比" class="headerlink" title="同类技术对比"></a>同类技术对比</h3><p>上篇博客中我们使用了Junit的注解@Test来识别测试代码，所以我们来看看TestNG和Junit的对比：<br><img data-src="https://i.loli.net/2020/05/26/GD37i9WBUE52v8d.png">可以看到TestNG比Junit支持的功能更多，比如分组测试，参数化测试等等。</p>
<h3 id="TestNG注解"><a href="#TestNG注解" class="headerlink" title="TestNG注解"></a>TestNG注解</h3><p>TestNG注解可以标记测试方法，设置测试方法运行顺序，将测试分组，还能向方法体传参。</p>
<p><span id="inline-toc">1.</span> 常见的TestNG注解</p>
<ul>
<li>@Test：最基本的注解，用来把方法标记为测试的一部分</li>
<li>@BeforeTest：在所有测试之前运行</li>
<li>@AfterTest：在所有测试执行之后运行</li>
<li>@BeforeClass：在调用当前类之前运行</li>
<li>@AfterClass：在调用当前类之后运行</li>
<li>@BeforeMethod：在每个测试方法执行之前都会运行</li>
<li>@AfterMethod：在每个测试方法执行之后都会运行</li>
<li>@BeforeGroups：在调用属于该组的第一个测试方法之前运行</li>
<li>@AfterGroups：在调用属于该组的最后一个测试方法执行之后运行</li>
</ul>
<p><span id="inline-toc">2.</span> 注解运行顺序</p>
<p>TestNG运行时，顺序是这样的：</p>
<p>@BeforeSuite-&gt;@BeforeTest-&gt;@BeforeClass-&gt;{@BeforeMethod-&gt;@Test-&gt;@AfterMethod-&gt;@AfterClass-&gt;@AfterTest-&gt;@AfterSuite</p>
<p>其中{}内的有多少个@Test，就循环执行多少次。</p>
<p><span id="inline-toc">3.</span> 传参注解</p>
<p>有时我们想要把测试数据当作参数传入测试方法，然后在别的地方定义参数对应的测试数据，这时就要用到TestNG的传参注解。</p>
<ul>
<li>@Parameters：描述如何将参数传递给@Test方法，下文中会用到。</li>
<li>@DataProvider：当参数类型较为复杂时，@Parameters无法满足需要，此时可以利用@DataProvider传参标记一种方法来提供测试数据。该方法会返回一个Object二维数组或一个Iterator&lt;Object[]&gt;来提供复杂的参数对象。</li>
</ul>
<h3 id="TestNG的xml文件"><a href="#TestNG的xml文件" class="headerlink" title="TestNG的xml文件"></a>TestNG的xml文件</h3><blockquote>
<p>testng.xml是TestNG的配置文件，以xml格式记录测试文件。xml文件里的tags可以帮助理解测试代码的结构，设置参数数据，还可以和注解配合使用决定测试代码的运行规则，包括测试方法的执行顺序，测试方法个数和分组等等。每一个tag都有自己的参数设置。</p>
</blockquote>
<p>一个简单的testng.xml结构如下：<br><img data-src="https://i.loli.net/2020/05/26/Xb75whadgGBYJ1x.png"></p>
<pre><code>&lt;suite&gt;&lt;/suite&gt;
</code></pre>
<p>suite是testng.xml文档中最上层的元素，一个xml文件只能有一个suite，它是一个xml文件的根级。<br>suite tag的paraller和thread-count参数共同控制多线程运行，实现并发测试。paraller参数指定并发的级别，比如tests/classes/methods级别。thread-count参数指定线程个数。</p>
<pre><code>&lt;test&gt;&lt;/test&gt;
</code></pre>
<p>一个suite tag下可以有多个test tag，它是一个测试单元。</p>
<pre><code>&lt;classes&gt;&lt;/classes&gt;
</code></pre>
<p>方法选择器，要执行的方法写在这里。classes tag下必须包含执行的class，否则不会执行任何内容。</p>
<pre><code>&lt;parameter&gt;&lt;/parameter&gt;
</code></pre>
<p>提供测试数据，和@Parameters注解配合使用。<br>parameter tag可以声明在suite/tests/classes级别，在内层的parameter tag声明的变量会覆盖在外层声明的同名变量。</p>
<h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><p>TestNG的一般使用步骤是：</p>
<ul>
<li>编写测试业务逻辑代码并添加TestNG的注解</li>
<li>在TestNG的xml文件配置测试信息(如果有需要的话)</li>
<li>运行TestNG的xml文件</li>
</ul>
<p>下文的代码改造会详细介绍怎么做。</p>
<h2 id="代码改造"><a href="#代码改造" class="headerlink" title="代码改造"></a>代码改造</h2><h3 id="BeforeTest-AfterTest"><a href="#BeforeTest-AfterTest" class="headerlink" title="BeforeTest/AfterTest"></a>BeforeTest/AfterTest</h3><p>要使用TestNG的注解，我们必须添加TestNG依赖，步骤和之前添加Selenium依赖相同：<br><img data-src="https://i.loli.net/2020/05/15/19UmfH3uSvCMDLn.png"><br>接下来就可以使用TestNG的BeforeTest和AfterTest这两个注解了，我们可以把之前代码中在测试开始之前执行的操作，比如设置WebDriver、打开测试url都放在BeforeTest中，把测试执行结束后退出Driver的操作放在AfterTest中，这样改造之后的代码如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">public class SeleniumTest {
    WebDriver driver;

    @BeforeTest
    public void beforeTest()
    {
        System.setProperty("webdriver.gecko.driver", "drivers/geckodriver");
        driver = new FirefoxDriver();
        driver.manage().window().maximize();
        driver.get("https://www.baidu.com/");
    }

    @Test
    public void searchSelenium()
    {
        driver.findElement(By.id("kw")).clear();
        driver.findElement(By.id("kw")).sendKeys("selenium");
        driver.findElement(By.id("su")).click();
    }

    @AfterTest
    public void afterTest()
    {
        driver.quit();
    }
}
<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="添加自定义testng-xml"><a href="#添加自定义testng-xml" class="headerlink" title="添加自定义testng.xml"></a>添加自定义testng.xml</h3><p>在BeforeTest中，我们手动设置了测试浏览器和url，但标准的做法是将这种设置提出来变成参数传入，而具体的数据可以放在一个单独的文件中。testng.xml文件可以帮助我们实现这点。<br>首先，我们使用TestNG的Parameters注解，将browser和url这两个数据作为参数传入beforeTest做处理，这样改造后的beforeTest方法如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">@Parameters({"browser", "url"})
@BeforeTest
public void beofreTest(String browser, String url)
{
    switch (browser){
        case "chrome":
            System.setProperty("webdriver.chrome.driver", "drivers/chromedriver");
            driver = new ChromeDriver();
            break;
        case "firefox":
            System.setProperty("webdriver.gecko.driver", "drivers/geckodriver");
            driver = new FirefoxDriver();
            break;
        default:
            System.out.println("can't supply such browser.");
    }
    driver.manage().window().maximize();
    driver.get(url);
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>此时运行测试，因为我们没有在系统默认的testng.xml文件<mark class="label info">temp-testng-customsuite.xml</mark>里定义browser和url这两个参数，所以不难猜到运行失败：<br><img data-src="https://i.loli.net/2020/05/15/ogdLlYPhr54WEck.png"><br><img data-src="https://i.loli.net/2020/05/15/8W1a7Y6JSvNrT9Q.png"><br>所以，有两种解决办法：</p>
<ul>
<li>直接改动默认的testng.xml文件</li>
<li>新建自定义testng.xml文件，然后在pom.xml中指定此文件为默认的testng.xml<br>为了方便以后改动，我们采用第二种办法，新建testng.xml，使用<mark class="label info">parameter</mark> tag定义browser和url参数：</li>
</ul>
<img data-src="https://i.loli.net/2020/05/17/vMOhB3FHkNRTnJK.png">

<p>此时我们可以在新建的testng.xml文件右键点击运行，就可以运行成功啦。<br>然后在pom.xml文件的maven-surefire-plugin里指定我们要引用的testng.xml，之后使用jenkins部署运行时就不会报错了：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;plugin&gt;
  &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;
  &lt;version&gt;2.22.1&lt;/version&gt;
  &lt;configuration&gt;
    &lt;suiteXmlFiles&gt;
      &lt;!--可以添加多个xml文件--&gt;
      &lt;file&gt;testng.xml&lt;/file&gt;
    &lt;/suiteXmlFiles&gt;
  &lt;/configuration&gt;
&lt;/plugin&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="设置多个Test执行顺序"><a href="#设置多个Test执行顺序" class="headerlink" title="设置多个Test执行顺序"></a>设置多个Test执行顺序</h3><p>我们现在只有1个searchSelenium()的TestCase，如果有多个Test，它们的运行顺序会是怎样的呢？<br>为了找到答案，我们添加一个searchJava()的TestCase:</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">@Test
public void searchJava()
{
    driver.findElement(By.id("kw")).clear();
    driver.findElement(By.id("kw")).sendKeys("java");
    driver.findElement(By.id("su")).click();
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><span id="inline-toc">1.</span> 在testng.xml中指定执行顺序</p>
<p>首先再回到我们自定义的testng.xml文件，可以发现有一个<methods> tag, 其中包含了所有要执行的test列表，我们把searchJava()也加进去：</methods></p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;methods&gt;
    &lt;include name="searchSelenium"/&gt;
    &lt;include name="searchJava"/&gt;
&lt;/methods&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>运行testng.xml可以发现searchSelenium先执行，searchJava后执行。<br>那么把这两个方法在methods list里的顺序交换呢？<br>没错，又变成searchJava先执行，searchSelenium后执行了，所以我们可以通过<strong>设置方法在methods list的顺序，达到指定方法执行顺序的目的。</strong></p>
<p><span id="inline-toc">2.</span> 默认执行顺序</p>
<p>为了看到默认的执行顺序，我们先把methods list注释掉，再运行testng.xml。<br>可以看到依然是searchJava先执行，searchSelenium后执行。没错，默认的执行顺序是<strong>将方法名按照字符串排序的方式执行</strong>的：<br><img data-src="https://i.loli.net/2020/05/17/tOuk64Mg3GCdB51.png"></p>
<p><span id="inline-toc">3.</span> 给testng注解加上priority顺序</p>
<p>其实，我们还可以通过<strong>给方法的@Test直接后边加上priority参数</strong>，数字小的先执行，达到设置执行顺序的目的。为了看到效果，我们将执行顺序设为和默认顺序相反：<br><img data-src="https://i.loli.net/2020/05/17/Z6kA2HVbhOeJPUq.png"><br>运行testng.xml之后，可以发现searchSelenium先执行，searchJava后执行。</p>
<div class="note info"><p>既然priority参数和上边的methods list都能设置执行顺序，那这两种方式谁的优先级更高呢？</p>
</div>
<p>为了解答这个问题，我们去掉testng.xml的注释，运行testng.xml观察效果：<br><img data-src="https://i.loli.net/2020/05/17/geaxQjf2I4JXdqO.png"><br>可以发现仍然是searchSelenium先执行，searchJava后执行。</p>
<blockquote>
<p>所以，priority参数方式要比methods list方式优先级高。</p>
</blockquote>
<h3 id="testng-xml的多线程设置"><a href="#testng-xml的多线程设置" class="headerlink" title="testng.xml的多线程设置"></a>testng.xml的多线程设置</h3><p>多线程运行测试代码，可以减少运行时间，提高测试效率。实际应用中要按照设备/服务器属性进行设置。<br>我们可以通过在testng.xml添加<strong>parallel</strong>和<strong>thread-count</strong>参数达到多线程运行测试的目的：<br>其中：</p>
<ul>
<li>paralle: 表示线程级别</li>
<li>thread-count: 线程个数<br>这里我们按照tests级别，将testng.xml改造如下：</li>
</ul>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd"&gt;
&lt;suite name="Default Suite" parallel="tests" thread-count="2"&gt;
    &lt;parameter name="url" value="https://www.baidu.com/"&gt;&lt;/parameter&gt;
    &lt;test name="Automation1"&gt;
        &lt;classes&gt;
            &lt;class name="org.example.SeleniumTest"&gt;&lt;/class&gt;
            &lt;parameter name="browser" value="chrome"&gt;&lt;/parameter&gt;
        &lt;/classes&gt;
    &lt;/test&gt;
    &lt;test name="Automation2"&gt;
        &lt;classes&gt;
            &lt;class name="org.example.SeleniumTest"&gt;&lt;/class&gt;
            &lt;parameter name="browser" value="firefox"&gt;&lt;/parameter&gt;
        &lt;/classes&gt;
    &lt;/test&gt;
&lt;/suite&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>为了让效果更明显，在每个@Test方法里加上：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">System.out.println("Thread id is " + Thread.currentThread().getId());
//打印出方法所在线程id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>接着运行testng.xml，可以看到不同test在不同的线程运行，同一test的测试在一个线程运行：<br><img data-src="https://i.loli.net/2020/05/17/VlObW86dHQ2Y7ry.png"></p>
<h3 id="Element-Object"><a href="#Element-Object" class="headerlink" title="Element Object"></a>Element Object</h3><div class="note info"><p>在实际工作中，编写测试代码的时候，以beforeTest()和searchSelenium()方法为例，我们可以把beforeTest()/afterTest()这种公共方法提出来放在单独的文件中，searchSelenium()方法里的常用/公有元素也提出来放在单独的文件中，公共方法也可以提出来，以实现Element/Page Object，不把测试数据暴露在外边，这样就能更关注于测试代码的设计了。</p>
</div>

<p>根据上边的思想，我们将代码结构改动如下：<br><img data-src="https://i.loli.net/2020/05/26/98npgJdoQbmlvTM.png"><br>新建了两个class文件，SetUp和Functions。<br>SetUp.class用于存放beforeTest方法，然后在测试代码中调用：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.example;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

public class SetUp {

    WebDriver driver;

    public WebDriver beofreTest(String browser, String url)
    {
        switch (browser){
            case "chrome":
                System.setProperty("webdriver.chrome.driver", "drivers/chromedriver");
                driver = new ChromeDriver();
                break;
            case "firefox":
                System.setProperty("webdriver.gecko.driver", "drivers/geckodriver");
                driver = new FirefoxDriver();
                break;
            default:
                System.out.println("can't supply such browser.");
        }
        driver.manage().window().maximize();
        driver.get(url);
        return driver;
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>Functions.class里是一些页面元素和操作这些元素的公共方法，也可以在测试代码里直接调用：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">package org.example;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;

public class Functions {

    public By _searchBox = By.id("kw");
    public By _searchButton = By.id("su");

    public void searchText(WebDriver driver, String text)
    {
        driver.findElement(_searchBox).clear();
        driver.findElement(_searchBox).sendKeys(text);
        driver.findElement(_searchButton).click();
    }
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="TestNG-Report"><a href="#TestNG-Report" class="headerlink" title="TestNG Report"></a>TestNG Report</h3><p>漂亮的测试报告是自动化测试中不可缺少的元素，TestNG也支持生成测试报告，在页面右上角找到Edit Configurations:<br><img data-src="https://i.loli.net/2020/05/17/J4EibfRV2wcI9Du.png"><br>在当前页面找到Listeners然后勾选”Use default reporters”选项，确认：<br><img data-src="https://i.loli.net/2020/05/17/1iVejFuwCdcf7YB.png"><br>再次右键运行testng.xml之后，可以看到项目目录自动生成的”test-output”文件夹，点击test-output文件夹下的index.html文件，在浏览器打开，就可以看到TestNG的测试报告了：<br><img data-src="https://i.loli.net/2020/05/17/BrM578TpDidxc13.png"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jianshu.com/p/28b7ae892ed1">Maven + TestNG + Jenkins搭建自动化测试框架</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>TestNG</tag>
      </tags>
  </entry>
  <entry>
    <title>WebUI自动化测试框架Demo(下)</title>
    <url>/WebUI-AutoTest-Demo-3/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/19/dKSi3gZFTJchr6P.png">

<div class="note info"><p>上篇博客我们已经完成了Demo Project的代码优化, 这篇文章我们就利用Jenkins和GoCD这两种工具来实现Demo Project的持续集成。</p>
</div>

<h2 id="CI-CD介绍"><a href="#CI-CD介绍" class="headerlink" title="CI&amp;CD介绍"></a>CI&amp;CD介绍</h2><h3 id="是什么"><a href="#是什么" class="headerlink" title="是什么"></a>是什么</h3><pre><code>持续集成CI(Continuous Integration)
</code></pre>
<p>持续集成指的是，频繁地（一天多次）将代码集成到主干。基本流程为：</p>
<ul>
<li><p>提交代码</p>
</li>
<li><p>执行第一轮测试(单元/集成测试)</p>
</li>
<li><p>代码合到master</p>
<p>  持续交付(Continuous Delivery)</p>
</li>
</ul>
<p>持续交付指的是，频繁地将软件的新版本，交付给质量团队或者用户，以供评审。如果评审通过，当前代码就是一个可以直接部署的版本。基本流程为：</p>
<ul>
<li><p>代码集成完成</p>
</li>
<li><p>构建项目，将源码转换为可以运行的实际代码</p>
</li>
<li><p>执行第二轮测试(端到端/手工测试)</p>
<p>  持续部署(Continuous Deployment)</p>
</li>
</ul>
<p>持续部署是持续交付的下一步，指的是代码通过评审以后，自动部署到生产环境。持续部署的目标是，代码在任何时刻都是可部署的，可以进入生产阶段。基本流程为：</p>
<ul>
<li>持续交付流程完成</li>
<li>利用工具自动部署到生产环境</li>
</ul>
<p>持续部署和持续交付的区别在于，前者可以自动化部署过程，后者只能手工部署。</p>
<h3 id="怎么做"><a href="#怎么做" class="headerlink" title="怎么做"></a>怎么做</h3><p>CI&amp;CD的实现离不开自动化工具，比较流行的有关注持续集成的Jenkins/Travis CI/…, 关注持续交付/部署的GoCD等等。</p>
<h2 id="使用Jenkins集成"><a href="#使用Jenkins集成" class="headerlink" title="使用Jenkins集成"></a>使用Jenkins集成</h2><blockquote>
<p>Jenkins 是一个开源软件项目，是基于 Java 开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件的持续集成变成可能。</p>
</blockquote>
<p>完成后的效果，小太阳标志：<br><img data-src="https://i.loli.net/2020/05/17/Q5FMxDSWvgNUoXB.png"><br>首先把本地的DemoProject推送到Github，然后请直接按照 <a href="https://www.jianshu.com/p/28b7ae892ed1">这篇文章的Jenkins部分</a> 设置，已经写的很详细了，主要包括：</p>
<p><span id="inline-toc">1.</span> Jenkins安装：在本地8080端口运行Jenkins并设置管理员账号</p>
<blockquote>
<p>小知识：WAR(Web应用程序归档，英語：Web application archive)，也是一种Java归档，存储XML文件、Java类、JSP和Web应用程序中的其他文件。</p>
</blockquote>
<p><span id="inline-toc">2.</span> Jenkins配置：添加JDK和Maven<br><span id="inline-toc">3.</span> Jenkins添加GitHub server：Github生成token并在github的DemoProject项目里添加本地Webhook</p>
<blockquote>
<p>这部分Payload URL里的Jenkins server IP就是你电脑的IP，可以通过<strong>ifconfig</strong>命令获得，在结果的最后一行。</p>
</blockquote>
<p><span id="inline-toc">4.</span> Jenkins新建并配置Maven项目：绑定Github的DemoProject<br><span id="inline-toc">5.</span> Jenkins运行Maven项目并查看结果</p>
<h2 id="使用GoCD集成"><a href="#使用GoCD集成" class="headerlink" title="使用GoCD集成"></a>使用GoCD集成</h2><pre><code>GoCD是一种开源工具，用于软件开发，可帮助团队和组织使软件的持续交付/部署(CD)自动化。
</code></pre>
<p>完成后的效果，绿色的pipeline：<br><img data-src="https://i.loli.net/2020/05/26/eKa2fnP1oMQB7WL.png"></p>
<h3 id="下载GoCD-Server-Agent"><a href="#下载GoCD-Server-Agent" class="headerlink" title="下载GoCD Server&amp;Agent"></a>下载GoCD Server&amp;Agent</h3><div class="note primary"><p>Server和Agent</p>
<p>GoCD的基础架构由Server和Agent组成，Server 负责配置和控制，Agent负责执行。</p>
<p>Server：控制一切配置，关联仓库，触发pipeline执行，配置每个Job对应的Agent，将Job分配给Agent去执行，整理信息判断该Stage的状态。<br>Agent：接收Server分配的Job，执行Job下的Task（运行命令、部署等），并将Job的状态报告给Server。</p>
</div>

<p>打开GoCD官网 <a href="https://www.gocd.org/download/#osx">下载页面</a>, 根据系统下载：<br><img data-src="https://i.loli.net/2020/05/28/UmGMZHN7CudP5zJ.png"><br>这里我们下载19.9.0版本，所以点击下方 show old releases按钮，下载Server&amp;Agent:<br><img data-src="https://i.loli.net/2020/05/28/tUZ5lM4WDznbroh.png"><br>解压后放在新建的Pipeline文件夹下，就安装完成了：<br><img data-src="https://i.loli.net/2020/05/28/TZPhSqW6frYkC7b.png"></p>
<h3 id="启动Server-Agent"><a href="#启动Server-Agent" class="headerlink" title="启动Server&amp;Agent"></a>启动Server&amp;Agent</h3><p>首先确保自己安装了Java11, 然后切换到server目录执行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">./bin/go-server console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>启动GoCD Server:<br><img data-src="https://i.loli.net/2020/05/28/AgyOR9KpqYLvHPl.png"><br>Server启动成功后，默认的端口号是 8153/8154 (HTTPS)，访问 <a href="https://localhost:8154/">https://localhost:8154</a> 就可以看到GoCD Server页面啦：<br><img data-src="https://i.loli.net/2020/05/28/roFANt8naqGH9SR.png"><br>打开一个新的终端窗口，同样切换到agent目录执行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">./bin/go-agent console<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>启动GoCD Agent:<br><img data-src="https://i.loli.net/2020/05/28/yRMoriNK2bQlqUh.png"></p>
<h3 id="创建Pipeline"><a href="#创建Pipeline" class="headerlink" title="创建Pipeline"></a>创建Pipeline</h3><p>回到Server页面，点击页面按钮，创建Pipeline。</p>
<pre><code>Pipeline: 管道，在GoCD里，Pipeline就像是一个工作流水线。它的结构如下所示：
</code></pre>
<img data-src="https://i.loli.net/2020/05/28/T5nXiopQ4OAWVNC.png">
首先指定Pipeline的Material，就是Demo Project在Github上的仓库地址：
<img data-src="https://i.loli.net/2020/05/28/wPsHAvpSVMeg3bh.png">


<pre><code>Material
</code></pre>
<p>用来触发Pipeline的条件，可以是代码的存储仓库，可以是其他Pipeline某个Stage执行成功后的产出。在这里，我们把Github仓库作为Material，如果有新的改动会触发Pipeline重新运行。</p>
<p>接着输入Pipeline名字，自定义就可以。这里我设为Auto:<br><img data-src="https://i.loli.net/2020/06/01/WoS7B3KN4qYL8jF.png"><br>输入Stage名字，这里我设为Test：<br><img data-src="https://i.loli.net/2020/06/01/EAmzj12fKLsvOrt.png"></p>
<pre><code>Stage
</code></pre>
<p>pipeline可以有多个Stage，每个Stage按照顺序执行，一个Stage Fail，则不会执行后边的Stage，pipeline也会是Fail状态。比如常见的这几个stage: Build，Package，Deploy，Smoke，FunctionTest</p>
<p>创建job和tasks，这里创建了一个名为run_tests的job, 并给它加上一个task，脚本命令:mvn test<br><img data-src="https://i.loli.net/2020/06/01/6Oxp31ysZQ8goe7.png"></p>
<pre><code>Job
</code></pre>
<p>一个Stage可以有多个Job，多个Job之间是相互独立的，一个Job失败，不会影响其他Job的执行，但是一个Stage中的任何一个Job失败，则这个Stage失败</p>
<pre><code>Task
</code></pre>
<p>一个Job由一个或多个Task组成，且Task按照顺序执行，一个Task fail，则后续的Task都不会被执行。Task就是Script，用命令行对代码进行进行编译，部署，或者运行测试。</p>
<p>点击”Save + Edit Full Config”按钮，保存pipeline并进入pipeline的设置界面，可以看到，它是按照 pipeline(Auto)-&gt; stage(Test) -&gt; job(run_tests)的结构展示的，在job的Tasks tab中，也已经加上了我们上边设置的mvn test：<br><img data-src="https://i.loli.net/2020/06/01/l2WCYqejKFuw9hX.png"><br>首先打开Auto pipeline设置，在Materials Tab下，可以看到我们设置的远程仓库地址：<br><img data-src="https://i.loli.net/2020/06/01/hguki5Ctl8zaHST.png"><br>接着点击上边的Url, 进入Edit Material页面，给Material加上一个Destination Directory，然后保存。因为在运行pipeline的时候，Server会从远程仓库克隆代码到Agent上去运行，需要设置Destination Directory，Server就会把克隆的的代码放进这个Destination Directory里，所以它的名字一般就是代码库的名字：<br><img data-src="https://i.loli.net/2020/06/01/1VJ6r2bRQI3BLOx.png" width="340" height="380"><br>接着进入job设置页面，点击右边的Tasks Tab：<br><img data-src="https://i.loli.net/2020/06/01/l2WCYqejKFuw9hX.png"><br>点击Custom Command按钮，进入Edit Custom Command task页面。将Working Directory设为我们刚才添加的Destination Directory，然后保存：<br><img data-src="https://i.loli.net/2020/06/01/pwLmgRn7GHTEFlC.png" width="340" height="430"><br>到这里，Pipeline就已经创建好了。</p>
<h3 id="运行pipeline"><a href="#运行pipeline" class="headerlink" title="运行pipeline"></a>运行pipeline</h3><h4 id="运行成功"><a href="#运行成功" class="headerlink" title="运行成功"></a>运行成功</h4><p>回到Pipeline首页, 点击Pause按钮，取消pipeline的暂停状态，取消之后pipeline就会自动运行了：<br><img data-src="https://i.loli.net/2020/06/01/jAINYbglrB7HFd2.png" width="340" height="300"><br><img data-src="https://i.loli.net/2020/06/01/MbOUDyBxQjirYHZ.png" width="340" height="300"><br>如果我们的代码没有问题，前面的设置也做好了的话，在运行过程中应该会跳出chrome/firefox窗口测试。pipeline就会运行成功了(绿色的标志)：<br><img data-src="https://i.loli.net/2020/06/01/XugQEJG6SR8wylx.png" width="340" height="300"></p>
<h4 id="console-log和本地目录结构解读"><a href="#console-log和本地目录结构解读" class="headerlink" title="console log和本地目录结构解读"></a>console log和本地目录结构解读</h4><p>点击绿色状态条进入运行结果界面，里面有当前代码库的版本号，作者，以及comment信息；还可以在右侧看到运行历史，以后多次运行的时候，也可以看到之前的运行结果：<br><img data-src="https://i.loli.net/2020/06/01/CPNkGsM58eKozlv.png"><br>点击上图中的job名称run_tests，可以看到本次运行的console log:<br><img data-src="https://i.loli.net/2020/06/01/fHeIkUuWD9Ynhc3.png"><br>观察console log我们可以理解pipeline的运行流程：</p>
<p><span id="inline-toc">1.</span> Server开始准备并克隆代码到Agent<br><img data-src="https://i.loli.net/2020/06/01/3bL6KV7ivwufAcX.png"><br>上图中，Agent会生成Auto/1/Test/1/run_tests文件夹记录本次运行信息，然后，Server克隆远程代码到Agent对应的Pipeline文件夹下：<br><img data-src="https://i.loli.net/2020/06/01/xghnt9A7YDJWC4l.png"><br>第一次运行之后，Server将会持续check远程仓库中的代码更新，并自动运行Pipeline，这是它的默认机制。<br><span id="inline-toc">2.</span> 设置环境变量<br><img data-src="https://i.loli.net/2020/06/01/BUsoWfS85gyjxvk.png"><br><span id="inline-toc">3.</span> 在Agent运行task<br>准备工作做好之后，Server就会把Job分配给Agent去执行，这里是build代码并执行命令 <strong>mvn test</strong> , 输出内容在本系列第一篇博客介绍Maven的时候已经给大家 <a href="https://jmyblog.top/WebUI-AutoTest-Demo-1/#%E4%BD%BF%E7%94%A8Maven%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE">剖析过了</a> :<br><img data-src="https://i.loli.net/2020/06/01/UMBKXvbWL9siulE.png"><br><span id="inline-toc">4.</span> Agent将运行结果报告给Server<br><img data-src="https://i.loli.net/2020/06/01/R3enSwrBATx1zYE.png"><br>Agent将记录本次运行信息的文件夹Auto/1/Test/1/run_tests，上传到本地Server文件夹下：<br><img data-src="https://i.loli.net/2020/06/01/eObyG4WmvJHg9hP.png"></p>
<pre><code>Artifact
</code></pre>
<p>Artifact是运行Job的产出物，在Agent生成，由Server接收并保存。存放在上图的 <strong>artifact</strong> 文件夹下。<br>比如此次运行中Agent生成的Auto/1/Test/1/run_tests文件夹，就是由Server接收保存的。它有一个保存运行日志console.log的cruise-output文件夹：<br><img data-src="https://i.loli.net/2020/06/01/mv1zS4twIC7d6G8.png"><br>运行结束之后，在页面上也可以看到它：<br><img data-src="https://i.loli.net/2020/06/01/IgyWiRALq1Kfh3x.png"></p>
<h3 id="利用Custom-Tabs展示测试报告"><a href="#利用Custom-Tabs展示测试报告" class="headerlink" title="利用Custom Tabs展示测试报告"></a>利用Custom Tabs展示测试报告</h3><p>我们已经理解了Artifact的概念，知道它是在Agent生成，由Server接收并保存的。</p>
<blockquote>
<p>还记得我们在本系列第二篇博客中提到的 <a href="https://jmyblog.top/WebUI-AutoTest-Demo-2/#TestNG-Report">TestNG测试报告</a> 吗？它也是在Agent生成的，这里我们就新建一个Artifact来让Server接收Agent生成的TestNG测试报告，并利用Custom Tabs将它展示在页面上。</p>
</blockquote>
<p>回到首页，点击Auto的设置按钮：<br><img data-src="https://i.loli.net/2020/06/01/hrjgN7QpREdlCwZ.png" width="340" height="300"><br>进入Job run_tests的Artifacts Tab, 添加一个Test Artifact:<br><img data-src="https://i.loli.net/2020/06/01/9tJCNTMsRaGWxqV.png"><br><img data-src="https://i.loli.net/2020/06/02/r3DHx1Oz9tKXmqv.png"><br>这里的Source就是指Artifact在Agent的生成路径，由于Agent的Working Directory是AutoTest文件夹，所以这里我们用Agent本地文件夹的绝对路径 <strong>AutoTest/target/surefire-reports</strong> 来获得测试报告。<br>没错，Maven的surefire插件会帮我们保存TestNG测试报告index.html:<br><img data-src="https://i.loli.net/2020/06/01/xuiPTJvkBZ9Rpsw.png"><br>Destination就是Server存放测试报告的路径，这里是相对路径。我们指定TestResult文件夹来保存测试报告，它比较完整的路径是 run_tests/TestResult，和上文中artifact文件夹下的run_tests/cruise-output是同一级。</p>
<p>保存之后，切换到Custom Tabs下，新建TestResult Tab，用来展示我们获取的index.html文件，路径 <strong>TestResult/surefire-reports/index.html</strong> ：<br><img data-src="https://i.loli.net/2020/06/02/Mvn2PpYIl7DfOaK.png"></p>
<p>保存，然后再次运行Pipeline:<br><img data-src="https://i.loli.net/2020/06/01/bTX3FeNJ5hqHPZ4.png" width="340" height="300"><br><img data-src="https://i.loli.net/2020/06/01/tuKZHPbk3hoUlFe.png" width="340" height="300"><br>运行完成之后，在console log可以看到Agent上传测试报告的过程，首先是把surefire-reports文件夹下的内容上传到Server的TestResult文件夹，然后还上传了Agent自己生成的index.html测试报告到系统默认的testoutput文件夹：<br><img data-src="https://i.loli.net/2020/06/01/1x34XyBNoG25imq.png"></p>
<p>在Artifacts Tab可以看到多了两个artifact文件夹，TestResult文件夹是我们添加的，testoutput文件夹是系统默认生成的，它们都是test artifact：<br><img data-src="https://i.loli.net/2020/06/01/BY1ikDzFc4Rl8Hf.png" width="370" height="500"><br>图中一共有3个index.html文件，图片下方的index.html和testoutput/result文件夹里的index.html是Agent自己生成的测试报告，内容一致，默认会放在名为testoutput的Test Artifact文件夹里。展示在Test Tab下：<br><img data-src="https://i.loli.net/2020/06/01/Lzy8UaEvg5HcIFu.png"><br>TestResult Tab里展示的是我们指定的surefire文件夹下的index.html文件：<br><img data-src="https://i.loli.net/2020/06/01/odCli5zbFgDXpHN.png"></p>
<h3 id="其它的pipeline设置"><a href="#其它的pipeline设置" class="headerlink" title="其它的pipeline设置"></a>其它的pipeline设置</h3><p>以上都是最基本的GoCD使用，它还有很多比较高端的设置，这里再举几个例子。<br><span id="inline-toc">1.</span> Label Template<br>pipeline的build number可以自己配置，默认是1/2/3。实际项目中，build number一般会表示特定的含义，比如版本号等等：<br><img data-src="https://i.loli.net/2020/06/02/JNd7UVsXEutA2qy.png"><br><span id="inline-toc">2.</span> Timer Settings<br>可以设置触发Pipeline的运行时间，有固定的语法，比如 ‘0 0 10 ? * MON-FRI’ 就是让pipeline在周内每天早上10点整运行：<br><img data-src="https://i.loli.net/2020/06/02/MY8bkZ7LoXTAVtz.png"><br><span id="inline-toc">3.</span> Agent的Resource标签<br>当有多个Agent时，可能每个Agent有不同的配置，不同的空间大小，根据Agent的不同，可以通过设置Resource标签指定Job在某一类的Agent上执行：<br><img data-src="https://i.loli.net/2020/06/01/KOsPSIf9gWkwGYD.png"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://www.jianshu.com/p/28b7ae892ed1">Maven + TestNG + Jenkins搭建自动化测试框架</a></li>
<li><a href="https://devops.phodal.com/home">DevOps 元素周期表</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/09/continuous-integration.html">阮一峰：CI&amp;CD是什么</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Jenkins</tag>
        <tag>GoCD</tag>
      </tags>
  </entry>
  <entry>
    <title>当代打工人职场生存现状</title>
    <url>/WorkerStates/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/07/01/UMFEbBhrX6vW5xN.png">


<div class="note default"><p>王铁锤是一个打工人。</p>
<p>因为公司的OKR和KPI制度，他每隔一段时间就要给自己定一些目标和期望，然后到年底或年中的时候，把这些目标拿出来溜溜看完成度，评估后公司再决定涨薪幅度和职级调整。</p>
<p>然而，这些目标不能是王铁锤的日常工作，而是要做一些具体的事情刷存在感，否则到了评估的时候，王铁锤就会因为啥也没干而失去涨薪和升职的可能性。</p>
<p>王铁锤一直很疑惑，明明自己每天都在认真搬砖，为啥做好日常工作就不算对自己的期望和目标了呢？我就想每天搬砖不行嘛？</p>
<p>答案是不行，只要王铁锤在职场里，就不能躲过OKR和KPI制度带来的灵魂拷问，这种制度下，佛系打工是不可能的。</p>
<p>那王铁锤得怎么办呢？</p>
<p>选择一：依然坚持把每天搬砖作为自己的目标和期望</p>
<p>做此选择后，王铁锤可以实现自己佛系打工的愿望，但只能维持几年。<br>随着新人不断涌入，王铁锤会逐渐陷入这样一种境地：年龄比新人高，工作年限比新人高，<del>工资比新人高</del>(随着工资倒挂现象愈发严重，此项大概率作废)，做的事情和新人一样。<br>到了最后，公司会裁掉他以防影响到其它做选择二的员工。</p>
<p>选择二：制定符合公司OKR/KPI制度的目标和期望</p>
<p>做此选择后，王铁锤将很难实现自己佛系打工的愿望。<br>他得按照套路，制定一些匹配自己甚至更高职级水平的目标，和别的同事一起卷起来，这样才能符合公司的期望，在职场里生存下去。<br>但也只能做到生存，至于升职？加薪？呵呵，随缘吧。<br>就算王铁锤卷成功了，随着职级变高，他需要达到的目标也越来越难实现，内卷的成功率也越来越低，这样在一个职级上一直停留，等待他的也只能是被裁掉，或者主动退出这个内卷修罗场。</p>
<p>选择三：转到一个内卷没有那么残酷的行业</p>
<p>王铁锤有想过找一个没有内卷，没有年龄焦虑的行业，比如教师。然而先不想自己适不适合做，能否转行成功，主要现在他严重怀疑这个选择还存不存在。也想过考公，找个铁饭碗，可每年考公人数那么多，录取比例也极低，让人望而却步。</p>
<p>王铁锤不知道自己还能有什么选择，他是一个拒绝内卷的佛系青年，没有太多欲望。从开始打工到现在，他一直在做选择一，但时间长了，好像又不得不做选择二。至于选择三，王铁锤也一直在观望。</p>
<p>先这样吧，希望王铁锤可以找到一个改变的契机。</p>
</div>

]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>王铁锤</tag>
      </tags>
  </entry>
  <entry>
    <title>一则小故事</title>
    <url>/a-story-about-z/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/07/23/dtEjI9VsoQzrURx.png">

<div class="note info"><ul>
<li>主题：职场性骚扰</li>
<li>主角：我，Z某</li>
<li>时间线：2022.05 - 2022.07</li>
</ul>
</div>

<h2 id="Z某其人"><a href="#Z某其人" class="headerlink" title="Z某其人"></a>Z某其人</h2><p>Z某是去年年底加入公司的第三方外包员工，一月初开始和我在同一个项目工作。</p>
<p>最初由于疫情一直各自在家办公，工作原因日常交流非常频繁，每天都会线上开会沟通，复工后开始线下接触，不过也只会聊工作，后来工作上也分开了，交集不是很多，私下也没有任何联系，一切正常。</p>
<p>个人方面，Z某给人的第一印象其实是比较好的，外表看起来文质彬彬，谈吐让人觉得比较舒服，工作上也认真努力，其它的我不是很了解，只知道他结婚了，孩子也在上学，后来有段时间他请了好几次假，听说是家里人(好像是他老婆？)生病了蛮严重的要回去照顾。</p>
<p>所以刚开始大家(包括我)对他的评价都挺好，感觉就是一个对工作、对家庭都很负责且认真踏实的人。</p>
<h2 id="开始不对劲"><a href="#开始不对劲" class="headerlink" title="开始不对劲"></a>开始不对劲</h2><p>转折是在5月份，Z某的一些行为让我觉得不对劲：</p>
<div class="tabs" id="不对劲"><ul class="nav-tabs"><li class="tab active"><a href="#不对劲-1">不对劲 1</a></li><li class="tab"><a href="#不对劲-2">不对劲 2</a></li><li class="tab"><a href="#不对劲-3">不对劲 3</a></li><li class="tab"><a href="#不对劲-4">不对劲 4</a></li></ul><div class="tab-content"><div class="tab-pane active" id="不对劲-1"><p><strong>追车</strong></p>
<p>没有摩托之前我上下班都是用电动滑板车🛴通勤，时速大概20km/h，走在自行车道时只有那种山地自行车🚴才能跟得上我，而且需要骑的比较努力，这是前提。</p>
<p>某次下班，我骑着滑板车停在路口等红绿灯，感觉背后有人盯着我，回头发现是骑着共享单车的Z某，简单打了个招呼后等到绿灯，想着我比较快各走各的就行了，没想到Z某非常努力的骑着共享单车跟在我的后面，甚至还并排跟我说话。</p>
<p>我当时非常尴尬，因为自行车道还有电动车在走，他也不在乎一路被滴就要并排跟我走，我只能尬笑着简单回应他，心里恨不得滑板车时速再加20码，到下个红绿灯，他说自己家的方向也在这边，所以跟我回家路线就比较重叠，我只能内心苦笑。</p>
<p>接下来一路，他都非常努力的骑车跟着我，一直到我小区门口，现在想来有点后怕，不过当时只是觉得这人有点奇怪，没多想。</p></div><div class="tab-pane" id="不对劲-2"><p><strong>过度关心</strong></p>
<p>Z某在一个同事群里加了我的私人微信(这个时候我已经有摩托了)，我礼貌回应之后就没有主动联系过他，但他开始对我有一些过度关心的言语(那会我因为别的事心情不好发了一些吐槽的朋友圈还请了一天假)：</p>
<img data-src="https://s2.loli.net/2022/07/23/cyNJdUPHBxSrhej.jpg" height="600" width="280" alt="过度关心"><span class="image-caption">过度关心</span>

<p>试问，一个有老婆孩子的正常男性会私下给女同事发消息，关心她遇到了啥不好的事吗？不过我还是没有多想，只把这个当作普通同事的关心，但还是觉得有些奇怪。</p></div><div class="tab-pane" id="不对劲-3"><p><strong>朋友圈点赞</strong></p>
<p>第一次骑摩托去加油，我发了条朋友圈，图就下边这个：</p>
<img data-src="https://s2.loli.net/2022/07/23/ORZrwiFTUAYGLeD.jpg" height="400" width="300" alt="朋友圈图"><span class="image-caption">朋友圈图</span>

<p>Z某神奇的从上图左下角的后视镜里发现有一家KFC(真是了不得)，好像是他们家那边的，然后开始了一系列对我摩托车的追问：</p>
<img data-src="https://s2.loli.net/2022/07/23/u6fC3EK8WqGSUsY.png" height="370" width="300" alt="追问"><span class="image-caption">追问</span>

<p>在我尴尬的回复他之前有发过摩托车后，他竟然去翻我的朋友圈找到了半个月前发的那条动态(因为我朋友圈挺活跃的基本上每天都发有时候一天发好几条)，然后，点了个赞。</p>
<p>我觉得非常的诡异，然后联想到前边这俩事件，开始觉得这个人不对劲，但也没有表露什么。</p></div><div class="tab-pane" id="不对劲-4"><p><strong>喝东西</strong></p>
<p>在朋友圈点赞事件的第二天，Z某又发微信给我说要单独请我喝东西「聊一聊」：</p>
<img data-src="https://s2.loli.net/2022/07/23/2zkFsSeOj4uZpl3.jpg" height="600" width="280" alt="喝东西事件"><span class="image-caption">喝东西事件</span>

<p>虽然还是礼貌回复，不过这个人已经很明显有问题了。</p></div></div></div>

<h2 id="第一次机会：禁朋友圈"><a href="#第一次机会：禁朋友圈" class="headerlink" title="第一次机会：禁朋友圈"></a>第一次机会：禁朋友圈</h2><p>在感觉到Z某有问题后，我听取了一些朋友的建议，决定不回复他发的消息然后对他禁掉朋友圈和动态(不删掉是因为想保留证据怕他还会有别的举动)，希望他可以得到警示并停止自己的行为，这是我给他的第一次机会。</p>
<h2 id="第二次机会：点名越界行为"><a href="#第二次机会：点名越界行为" class="headerlink" title="第二次机会：点名越界行为"></a>第二次机会：点名越界行为</h2><p>然而，Z某无视了我的第一次警告，甚至还发了所谓的测试消息给我，想看我有没有删掉他，之后更是想让我把朋友圈权限放开：</p>
<img data-src="https://s2.loli.net/2022/07/23/5riPmQqnIZEFG3s.jpg" height="400" width="390" alt="第二次警告"><span class="image-caption">第二次警告</span>

<p>我不再沉默了，明确拒绝了他并且点明了他越界的行为，他也承认是自己的「问题」向我道歉，还希望我可以回到之前和他正常交流，这当然是不可能的，所以之后除了工作上必要的会面(不说话没有眼神交流的那种多人会议)，其它场景我都对他视而不见。</p>
<p>这是我给他的第二次机会。</p>
<h2 id="第三次机会：正面交锋"><a href="#第三次机会：正面交锋" class="headerlink" title="第三次机会：正面交锋"></a>第三次机会：正面交锋</h2><p>我以为Z某已经认识到了自己的错误并停止对我的骚扰，可一周以后，他又发消息说自己有话说，想到之前他虽然有越界的言语，但这只是我个人的主观感受(不过正常人都会有这种感受吧)，所以为了让他暴露更多的「想法」，拿到证据，我同意了他的要求：</p>
<img data-src="https://s2.loli.net/2022/07/23/aObMcK2XVIUZWwN.jpg" height="340" width="300" alt="有话说？"><span class="image-caption">有话说？</span>

<p>第二天，我和Z某在会议室谈了大约半小时，全程录音：</p>
<img data-src="https://s2.loli.net/2022/07/23/JuvwLkPYqTFZSbg.jpg" height="220" width="300" alt="录音"><span class="image-caption">录音</span>

<div class="note primary"><p>录音内容大致如下(我全程保持微笑)：</p>
<ul>
<li>7min 15s - 9min 55s: 承认自己对我有不切实际的想法，加我微信是有别的目的，以及越界是自己的问题，还说怕我会觉得他是一个无耻好色的老男人(可不就是嘛)。</li>
<li>12min 0s - 13min 30s: 说自己还有一点理性，要遵守我的界限，想让我继续跟他交流。</li>
<li>15min 50s - 17min 40s : 再次承认自己对我有别的想法，然后我拒绝并提出以后私下不交流。</li>
<li>18min 25s -20min 40s :说自己还是有别的想法但没什么用，还「发誓」自己之前没有过对别的女同事越界，然后我提到了他的家庭，他说人有时候没那么理性。</li>
<li>21min 05s - 22min 15s: 同意我提出的私下不交流，然后他哭了？！</li>
<li>23min 0s - end 依然坚持提出要遵守我的界限，想让我继续跟他交流，我拒绝了，然后应他的要求留他独自在会议室思考人生。</li>
</ul>
</div>

<p>谈话之后，我虽然非常不适，而且已经拿到了他性骚扰我的实锤，但还想着他可能是一个家庭的主心骨，生活压力大，工作不容易，怕对他造成很大的影响(因为大概知道如果举报之后，他很可能会丢掉这份工作，他自己的公司也可能会fire他)，所以不想举报他，只是明确表示拒绝并且达成了之后除了工作私下不交流的共识。</p>
<p>说白了，我就准备忍着膈应直到他下项目(因为第三方一般到年底就合约到期了)，反正已经说清楚了，只要他后边不继续骚扰我，剩下半年相安无事也就罢了(我可太善良了)。</p>
<p>这是我给他的第三次机会。</p>
<h2 id="最后一根稻草"><a href="#最后一根稻草" class="headerlink" title="最后一根稻草"></a>最后一根稻草</h2><p>万万没想到，半个月后，他竟然通过「企业微信」(?!)发消息给我想让我继续和他交流，刚开始我猜他可能以为我把他删了(其实没有就想看看他还会不会有别的举动)，所以只能用企业微信发消息给我，后来我才发现是他把我删了(一个伏笔)：</p>
<img data-src="https://s2.loli.net/2022/07/23/A8YgL9OroPkZfxS.png" height="500" width="250" alt="够了"><span class="image-caption">够了</span>

<p>这可真是压死骆驼的最后一根稻草了，事不过三，已经给过他三次机会，但他还是不知收敛，说什么「还有些不清楚」？<br>我已经不想再跟他沟通了，决定按照公司流程举报处理，所以我说「你会清楚的」。</p>
<h2 id="举报和处理"><a href="#举报和处理" class="headerlink" title="举报和处理"></a>举报和处理</h2><p>当天下午，我就开始查公司处理这种事的流程资料，查到之后，直接和相关同事约了会详谈，后来就是一系列调查处理，公司给的结论是确认Z某行为不当，会和他解除劳动合同并把这件事同步给他自己的公司，我很满意，毕竟我的诉求就是让他尽快消失在我眼前。</p>
<p>整个处理过程历时18天，虽然有点久，不过公司调查还是挺隐秘的，因为我手里的证据已经足够说明整个事情，根本不用找他聊，所以到第12天Z某才知道自己被举报，并且他自己的公司和我的部门leader都轮番找他约谈，目的就是让他认识到自己的错误，有个心理准备，然后再辞退他，减少他之后私下报复我的可能性，中间为了安全我也几次在家办公。</p>
<p>公司当然没有说是我举报他，只是说他被人举报有不当行为，警告他注意言行，也没说让他直接下项目辞退他，不过他但凡还有点脑子都会猜到是我吧。</p>
<p>最后的处理结果，当然是他被辞退，last day当天他的backup就已经在onboarding了，上午交接完工作，下午3点他就走人了。</p>
<h2 id="Z某其人-1"><a href="#Z某其人-1" class="headerlink" title="Z某其人"></a>Z某其人</h2><p>事情到这里真的结束了，不过为了首尾呼应，重新聊聊卸下面具后的Z某其人吧，首先来品品「最后一根稻草」之后，Z某做出的其它一系列奇葩举动：</p>
<div class="tabs" id="z某其人"><ul class="nav-tabs"><li class="tab active"><a href="#z某其人-1">Z某其人 1</a></li><li class="tab"><a href="#z某其人-2">Z某其人 2</a></li><li class="tab"><a href="#z某其人-3">Z某其人 3</a></li><li class="tab"><a href="#z某其人-4">Z某其人 4</a></li></ul><div class="tab-content"><div class="tab-pane active" id="z某其人-1"><p><strong>学不会</strong></p>
<p>举报第8天(他还不知道自己被举报)，Z某又给我微信发消息，想让我把朋友圈权限放开，还说什么「不清楚学不会」的绿茶发言(搁这儿装林俊杰呢？)：</p>
<img data-src="https://s2.loli.net/2022/07/24/yWrXGRdeQHmSj5L.jpg" height="600" width="230" alt="学不会"><span class="image-caption">学不会</span>

<p>明明已经说清楚以后私下不交流了，结果还在这说我不跟他聊天打招呼，<mark class="label primary">所以他就是不管我之前说了什么达成了什么样的共识，就只是想继续纠缠骚扰我而已。</mark>「我不知道他怎么想的」？(我可太知道了)</p>
<p>这里有个细节是微信提示打招呼内容，这种就是他把我删了，然后又把我加回来，我这边就会有这个提示(drama的老男人)。</p></div><div class="tab-pane" id="z某其人-2"><p><strong>狼人自曝</strong></p>
<p>Z某知道被举报的第二天，在他自己工作小组的私人微信群里公布了这件事：</p>
<img data-src="https://s2.loli.net/2022/07/24/OzqEmx8T7oraPWY.jpg" height="100" width="250" alt="狼人自曝"><span class="image-caption">狼人自曝</span>

<p>没错，他竟然自己自曝！我真的不李姐，难道他不明白这样的事情曝出来，会被众人唾弃的是他自己吗？！</p>
<p>本来公司出于对他的尊重，想保留他的最后一丝体面，根本没有向更多人透露这件事，没想到他竟然自曝！引起大家的猜测和好奇，真的是脸都不要了。</p>
<p>我之前以为他认识到自己的错误默默走了就好了，可他这样做，感觉根本不觉得自己有错，还挺委屈？！因为没几个知情人，所以大家的回复也大多是安慰他让他配合调查，「清者自清」，给我气坏了。</p></div><div class="tab-pane" id="z某其人-3"><p><strong>隐形的枪</strong></p>
<p>自曝的第二天，他又跟同组的同事(一个知情的姐妹)主动提起这件事，可能察觉到姐妹是知情的，就对姐妹说「你别装了，我知道你知情」，然后撕下面具说出了下面这段话：</p>
<blockquote>
<p>有的人手里有把枪，但是她不告诉你自己手里有抢，而是等你靠近后，直接开枪打死你。</p>
</blockquote>
<p>这已经表明Z某猜到是我举报的他，而且不觉得自己有错，甚至怪我不提前把后果告诉他就直接举报，这就是他扭曲的三观。</p></div><div class="tab-pane" id="z某其人-4"><p><strong>电话骚扰</strong></p>
<p>他被辞退当天下午7时，给我打了电话，一般情况下陌生来电我都是直接挂掉，因为那天买了东西所以怕是快递的电话就接了，没想到是他。</p>
<p>他问是不是我举报的他，想确认一下，在我默认之后，说我没必要这样做，导致他被fire这么严重的后果，他说话还有点哽咽，后来又很气愤，说我不善良(他在跟我聊善良？！)，说自己又没做什么伤害我的事，不就是发了几条信息说了一些话么，还说他觉得自己还算是比较善良的人(excume me?!)。。。</p>
<p>总之就是在说我不应该举报他让他丢工作，还想带偏我让我觉得自己不善良做错了，给我气坏了，这次我没忍着，正面刚了他几句挂了电话拉黑，这是我和Z某的最后一次交锋。</p></div></div></div>

<p>总结：<strong>Z某就是一个又蠢又坏的好色无耻绿茶老男人。</strong></p>
<h2 id="我的心路历程"><a href="#我的心路历程" class="headerlink" title="我的心路历程"></a>我的心路历程</h2><blockquote>
<p>整件事情的时间线是5月到7月，从发觉Z某不对劲给他机会到举报他再到他走人，大概2个月。</p>
</blockquote>
<mark class="label info">吃瓜</mark>

<p>一开始，我是抱着吃瓜的心态看待这件事(没错自己吃自己的瓜)，想看这个老男人都能整出什么幺蛾子来，还分享给了几个姐妹一起讨论怎么整治他。</p>
<mark class="label info">生气</mark>

<p>接着就很生气，因为这人根本不觉得自己有错，甚至还挺委屈，明明我是受害者，但他全程都把自己的姿态放得很低，经常绿茶发言还哭哭啼啼的，好像他才是受害者，而且一边扮演受害者的角色一边不停的骚扰我，就一整个情感PUA大师呗？！巧了，我可是反PUA专家。</p>
<p>在我和他约谈的时候，也多次提到他的家庭，他都避而不谈，只说是自己的问题，希望我不要不理他之类的话，然后就非常心疼Z某老婆，一个女人，给他生了孩子，自己还生着病(一开始提到的)，可能还帮他操持着一家子的柴米油盐，结果自己的老公在外边搞这个，一代入就更生气了。</p>
<mark class="label info">害怕</mark>

<p>虽然我全程表现的很镇定，还和Z某正面交锋刚他，不过我也只是个女孩子啊。</p>
<p>我知道世界上没有绝对的黑与白，正常人心里都会有一些灰色地带，可这种事发生在我身上还是第一次，刷新了我的三观，所以就有种对未知的恐惧和后怕。</p>
<p>而且他知道是我举报的他，最后打电话给我的时候也表达了一些愤怒，他也知道我住在哪，虽然不知道具体楼栋和门牌号，但谁知道这种人会不会做出啥疯狂的事儿来，比如蹲在小区门口藏个刀捅我、往我脸上泼硫酸啥的(一些猜想)，所以这段时间我上下班路上都很小心，经常回头看看有没有人跟着我。</p>
<mark class="label info">委屈</mark>

<p>还有些委屈，就觉得我做了什么要遇上这样的事，还得自己一个人默默处理好，那段时间我工作的时候也经常失神、心不在焉，每天承受那种被人暗自窥视的不适感，心很累。</p>
<mark class="label info">思考</mark>

<p>接着就在想，如果Z某不是第三方员工，而是公司的正式员工，或者职级比我高很多的人，我还会这么直接的举报吗？或者公司在我举报之后会站在我这边处理他吗？如果这种事不是发生在外企，而是国内公司或体制内的企业，受害者还会勇敢发声吗？这些问题，我都不敢给出肯定的回答。</p>
<p>而且就算是我这种情况，好多姐妹说换做她们，最多也只会阴阳怪气的在微信里羞辱Z某，并不会直接举报他。但我觉得这样没用，他连这种事都做得出来，阴阳怪气能让他受到惩罚吗？</p>
<p>甚至被举报之后他都不觉得自己有错，还怪我，所以后来我都想把这件事和录音po到网上，让那些人网暴他，让他身败名裂，但还是算了，这样做的话，被网暴的不只有他，可能还有我。</p>
<mark class="label info">女性的困境</mark>

<p>这件事结束之后，我还想到之前也有别的男同事对我说过一些轻微冒犯的话，分享给姐妹之后她说要不以后就直接说，可这样的话，别人会觉得我难相处孤立我吧？而且这些男同事在我们看来都已经是人比较好的男生了，可就连他们有时也会说出一些不合适的话，甚至他们自己并不觉得是冒犯的。</p>
<p>所以我觉得这是一个社会问题，公共良俗还有很大的进步空间，比如最近的社会事件(唐山打人什么的)，需要对女性多一些关怀吧，只有当大家都觉得不合适的时候，我的发声才有意义，在这之前，只要不是特别冒犯的举动，我应该也只会忍忍一笑而过吧。</p>
<h2 id="我变强了"><a href="#我变强了" class="headerlink" title="我变强了"></a>我变强了</h2><p>经历过这件事之后，我觉得自己的内心更强大了(虽然本来也很强大)，然后就是奉劝大家，看人真的不能看表面，千万不要以貌取人，毕竟这个世界上金玉其外的人太多了，要学会辨别。</p>
<div class="note warning"><p>最后，Z某也知道我的博客链接，所以如果你看到了这篇，希望可以认识到自己的错误，多关注自己的家庭，以后不要再对别的女生有冒犯的举动，洗心革面，做个人吧。</p>
</div>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>性骚扰</tag>
        <tag>女权</tag>
      </tags>
  </entry>
  <entry>
    <title>敏捷测试浅谈</title>
    <url>/agile-test/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/09/16/XSmLbJgiMNPhHjA.png">

<div class="note info"><p>下周要给同事分享关于敏捷测试的session，简单介绍敏捷测试的概念和实践，虽然没有多少人听<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，不过准备的过程中自己还是挺有收获的，所以先用这篇博客总结下。</p>
</div>

<h2 id="是什么：敏捷测试的道与术"><a href="#是什么：敏捷测试的道与术" class="headerlink" title="是什么：敏捷测试的道与术"></a>是什么：敏捷测试的道与术</h2><p>首先，我们知道，「敏捷测试」是一种项目实践，说白了就是方法，即「术」；那在谈论「术」之前，我们应当知道它所遵循的方法论和道理，即「道」，很明显，从字面上就可以看出，这个「道」就是「敏捷」。<br>所以我们得先搞清楚「敏捷」这个概念是怎么来的，又是怎么衍生出现在的敏捷开发和敏捷测试的。</p>
<h3 id="Scrum-极限编程-80-90s"><a href="#Scrum-极限编程-80-90s" class="headerlink" title="Scrum&amp;极限编程(80-90s)"></a>Scrum&amp;极限编程(80-90s)</h3><p>所谓「实践出真知」，「道」也是从「术」中来的，在敏捷这个概念出现之前，已经有一些早期的敏捷实践在流行，比如 <a href="https://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1">Scrum</a> 和 <a href="https://jmyblog.top/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E6%B5%8B%E8%AF%95/#XP%E7%BC%96%E7%A8%8B">极限编程</a> 。</p>
<ul>
<li><mark class="label primary">Scrum</mark> ：80s-90s诞生，一种敏捷项目的管理方法，提出了迭代、站会、IPM、Retro、User Story这些实践，并引入PO(Product Owner)、SM(Scrum Master)角色。</li>
<li><mark class="label primary">极限编程</mark>：全称为Extreme Programming，缩写为XP，80s后期诞生，一种软件开发方法，对测试高度重视，提出了测试驱动开发(TDD)、结对编程、重构、持续集成等实践。</li>
</ul>
<h3 id="Agile-2001"><a href="#Agile-2001" class="headerlink" title="Agile(2001)"></a>Agile(2001)</h3><p>因势所趋，基于以上实践，有17个志同道合的人聚在一起，开了一个研讨会，根据这些实践的共性，比如轻量级、快速迭代等等，决定使用「敏捷」(即Agile)作为这些共性的总称，并提出了部分 <a href="https://agilemanifesto.org/iso/zhchs/manifesto.html">敏捷宣言与原则</a> ，后来在Wiki上将其开发完善，「敏捷」这个概念及其代表的方法论就此诞生。<br>再然后，更多有相似想法的人又形成了 <a href="https://www.agilealliance.org/">敏捷联盟</a> ，是一个促进和研究敏捷方法的非营利组织。</p>
<h3 id="Scrum-敏捷开发-敏捷测试-Now"><a href="#Scrum-敏捷开发-敏捷测试-Now" class="headerlink" title="Scrum&amp;敏捷开发&amp;敏捷测试(Now)"></a>Scrum&amp;敏捷开发&amp;敏捷测试(Now)</h3><p>即然有了方法论，那更多的敏捷实践也就应运而生了，比如「敏捷开发」和「敏捷测试」。</p>
<ul>
<li><mark class="label info">敏捷开发</mark> ：事实上，上文中的「极限编程」就是现在「敏捷开发」的前身，「敏捷开发」在「极限编程」的基础上进行了完善和扩充，引入了更多开发实践，我并不是开发，所以具体又多了哪些实践就无法娓娓道来了。</li>
<li><mark class="label info">敏捷测试</mark>：在「极限编程」中，只提出了单元测试和验收测试的实践，不够满足测试需求，所以之后又根据Scrum的项目管理模式，尝试将测试深入到软件开发的每个步骤，进而提出了更多优秀的测试实践，具体是什么实践，下文中会详细介绍。</li>
</ul>
<div class="note primary"><p>到这里，敏捷测试的概念已经很明显了： <strong>敏捷测试就是遵循敏捷方法论的测试实践</strong> ，其实这个定义也可以通用到敏捷开发身上。</p>
<p>现在的敏捷项目，多是以Scrum作为项目管理方式，开启迭代、组织每日站会、迭代计划等会议，并以用户故事卡为交付单位进行日常开发工作，然后用「敏捷开发」和「敏捷测试」的实践保证项目交付效率和产品质量，需要注意的是，「敏捷开发」和「敏捷测试」并不能独立于彼此存在，两者是相互依赖、相辅相成的关系，所以脱离「敏捷开发」来谈「敏捷测试」，无异于纸上谈兵，是完全行不通的。</p>
</div>

<h2 id="为什么：敏捷测试与传统软件测试的区别"><a href="#为什么：敏捷测试与传统软件测试的区别" class="headerlink" title="为什么：敏捷测试与传统软件测试的区别"></a>为什么：敏捷测试与传统软件测试的区别</h2><p>之前「有幸」参加过几次传统软件项目，包括毕业前实习的时候也是，在我看来他们有以下区别：</p>
<p><img data-src="https://i.loli.net/2021/09/17/j2Rfx1wV4YAlmqt.png" alt="传统测试与敏捷测试"><span class="image-caption">传统测试与敏捷测试</span></p>
<p>不难看出，两者的核心不同，传统测试以「质量检测」为核心，目标是为了发现更多的bug；敏捷测试则以「质量内建」为核心，目标在于预防缺陷：</p>
<p><img data-src="https://i.loli.net/2021/09/17/KZCxYy51Smk2X79.png" alt="质量内建"><span class="image-caption">质量内建</span></p>
<blockquote>
<p>软件的缺陷暴露的越晚，修复的成本就越高；前期对缺陷预防的少，后期发现的缺陷就会多；前期做好了缺陷预防，后面暴露的缺陷就会减少。因此，我们需要提前预防缺陷，而不是等开发完成了才发现很多的问题，这就是 <strong>「质量内建」</strong> 。</p>
</blockquote>
<h2 id="怎么做：敏捷测试策略"><a href="#怎么做：敏捷测试策略" class="headerlink" title="怎么做：敏捷测试策略"></a>怎么做：敏捷测试策略</h2><div class="note primary"><p>俗话说「先把事情做对，再把事情做好。」，怎样才能做好敏捷测试呢？答案是通过敏捷测试策略。<br><strong>敏捷测试策略</strong> 是一系列敏捷测试实(tao)践(lu)的集合，在项目刚开始的Inception阶段，由QA主导，团队成员一起讨论输出，输出结果可以用任意的方式记录，文档、脑图都行，关键是要在团队内达成共识。</p>
</div>

<p>之前也有写过 <a href="https://jmyblog.top/testStrategy/">一篇文章</a> 来介绍测试策略，里面列出了一些实践，但没有按照敏捷项目的流程进行分类，事实上，所有的敏捷测试实践都可以按照引入时间的不同分为三类：<strong>测试左移</strong>、<strong>持续测试</strong>、<strong>测试右移</strong>。</p>
<h3 id="测试左移"><a href="#测试左移" class="headerlink" title="测试左移"></a>测试左移</h3><mark class="label info">测试左移</mark> 是说测试在项目开始早期介入(其实做敏捷测试策略这个实践本身，就已经算是测试左移了)，可以是需求分析阶段，也可以是更早的inception阶段。
<hr>
<blockquote>
<p>左移的测试人员可以做的事情有：和团队一起挖掘需求、分析需求、澄清需求、评审需求、参与技术方案讨论等，主要目的是利用测试人员独有的视角和对系统的了解，在各个环节进行必要的输入，确保团队对于需求理解的一致性，确保团队能够做正确的事情。</p>
</blockquote>
<p>以下是在此阶段可以引入的测试实践。</p>
<h4 id="环境策略"><a href="#环境策略" class="headerlink" title="环境策略"></a>环境策略</h4><pre><code>所谓「打工人欲善其事，必先利其器」。
</code></pre>
<p>稳定的环境是高效开发和测试的先决条件，所以在项目开始开发之前就应该配置好各种环境以及流水线等基础设施，比如：</p>
<ul>
<li>DEV环境：Dev自测和联调使用。</li>
<li>QA环境：QA日常测试使用。</li>
<li>UAT环境：用户验收测试。</li>
<li>Staging环境：模拟的Prod环境，有时也用UAT环境代替。</li>
<li>其他环境：按照项目开发/测试需求准备安全环境、性能环境等等。</li>
<li>搭建CI：代码持续集成/部署，保证产品稳定交付。</li>
</ul>
<h4 id="测试四象限"><a href="#测试四象限" class="headerlink" title="测试四象限"></a>测试四象限</h4><p>利用测试四象限，可以在项目开始前期，帮我们确定做什么测试的问题，比如测功能、组件、性能、可靠性等等。</p>
<p><img data-src="https://i.loli.net/2021/09/18/XgT4iveAmUjVnd7.png" alt="测试四象限"><span class="image-caption">测试四象限</span></p>
<h4 id="测试金字塔"><a href="#测试金字塔" class="headerlink" title="测试金字塔"></a>测试金字塔</h4><p>利用测试金字塔原则，将上边确定好的测试方法，结合项目架构，进行测试分层，确保覆盖全面：</p>
<p><img data-src="https://i.loli.net/2021/09/18/awPHkol1BumJ28A.png" alt="测试金字塔"><span class="image-caption">测试金字塔</span><br>之前有写过 <a href="https://jmyblog.top/Test-Pyramid/">一篇文章</a> 详细介绍。</p>
<h4 id="测试矩阵"><a href="#测试矩阵" class="headerlink" title="测试矩阵"></a>测试矩阵</h4><p>确定了测试方法和测试分层，我们还需要考虑一些细节，比如用什么工具来做这些测试、在哪个环境运行、还有需要集成到CI吗等等问题，这个时候，就可以利用测试矩阵来生成细化方案：</p>
<p><img data-src="https://i.loli.net/2021/09/18/xB46Nmb9aT1zvoA.png" alt="测试矩阵"><span class="image-caption">测试矩阵</span><br>将确定要做的测试方法放在首行，纵向则陈列各种测试细节，这样清晰明了，更容易和团队达成一致。之前博主也写过 <a href="https://jmyblog.top/%E6%B5%8B%E8%AF%95%E7%9F%A9%E9%98%B5/">一篇文章</a> 介绍测试矩阵，但那时举的例子比较简单，现在就更加全面了。</p>
<h3 id="持续测试"><a href="#持续测试" class="headerlink" title="持续测试"></a>持续测试</h3><mark class="label info">持续测试</mark> 是指在项目开发过程中，进行持续的功能测试，也包括性能、安全等的内建；形式可以是静态分析、评审，也可以是动态的测试，包括手动执行的各种测试，以及集成流水线上持续执行的自动化测试。
<p>事实上，也就是以用户故事为一个单位，敏捷团队日常进行的一些测试实践，比如KickOff、TDD、DeskCheck等等。</p>
<p><img data-src="https://i.loli.net/2020/11/30/TpxlCFQ4uYWa58s.png" alt="测试四象限"><span class="image-caption">测试四象限</span></p>
<p>详细可以看我 <a href="https://jmyblog.top/testStrategy/#%E6%95%8F%E6%8D%B7%E5%9B%A2%E9%98%9F%E7%9A%84%E8%B4%A8%E9%87%8F%E4%BF%9D%E8%AF%81%E7%AD%96%E7%95%A5">之前的文章</a>。</p>
<h3 id="测试右移"><a href="#测试右移" class="headerlink" title="测试右移"></a>测试右移</h3><p><strong>测试右移</strong> 是指在项目进行一段时间、或者上线后，进行的一些测试管理和测试总结的相关实践，比如 <a href="https://jmyblog.top/BugBash/">BugBash</a> 、Bug管理、BugReport、ShowCase等等，又比如根据项目风险随时调整测试策略、上线前的测试计划、以及自动化代码的重构、<a href="https://www.bylinzi.com/2020/11/30/testing-logging-monitoring/">数据分析</a>……每一个实践都可以拉出来细细讨论。</p>
<hr>
<div class="note info"><p>好了，以上就是所有关于敏捷测试的简单介绍，总之，全是套路，以后有什么新的套路我也会更新在这里，但是这个分类和规律是不变的。</p>
</div>

<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://www.zhihu.com/question/38168328">极限编程与敏捷开发？</a></li>
<li><a href="https://martinfowler.com/articles/newMethodology.html">martinfowler-新方法论</a></li>
<li><a href="https://insights.thoughtworks.cn/agile-testing-core/#comment-71291">Thoughtworks洞见-敏捷测试的核心</a></li>
<li><a href="https://insights.thoughtworks.cn/agile-testing-manifesto/">Thoughtworks洞见-敏捷测试宣言和原则</a></li>
</ul>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>敏捷测试</tag>
      </tags>
  </entry>
  <entry>
    <title>测试课程学习笔记第一弹：自动化测试理论</title>
    <url>/auto-test-learning/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2019/11/19/bKwNRZ3XJYpPyI5.png" alt="题图" height="400" width="600"><span class="image-caption">题图</span>

<blockquote>
<p>近段时间报名了一个自动化测试课程，首先学习了自动化测试理论。有很多也是我目前在做的，还有一些之前没有了解到。所以想整理一下，分点描述。</p>
</blockquote>
<mark class="label success">绿色</mark>是我目前在做的，<mark class="label warning">黄色</mark>是在实践但没有深入了解的，<mark class="label danger">红色</mark>是我没有了解或者没有实践的。

<h2 id="分层测试体系"><a href="#分层测试体系" class="headerlink" title="分层测试体系"></a>分层测试体系</h2><p>也就是说自动化测试，要根据 <mark class="label success">测试金字塔</mark>分层来做。之前我写了 <a href="http://jmyblog.top/Test-Pyramid/">这篇文章</a> 总结了一下。 </p>
<h2 id="自动化测试场景"><a href="#自动化测试场景" class="headerlink" title="自动化测试场景"></a>自动化测试场景</h2><ul>
<li><mark class="label success">冒烟测试</mark>：check主要功能</li>
<li><mark class="label success">功能测试</mark>：自动化case覆盖功能</li>
<li><mark class="label danger">验收测试</mark>：兼容性测试，可用性测试，无障碍测试等，这部分我目前是Manual测试</li>
<li><mark class="label danger">性能测试</mark>： 测试性能/卡顿/应用健壮性，这部分也没了解过，我目前没做过</li>
</ul>
<h2 id="对自动化测试的错误观点和假“瓶颈”"><a href="#对自动化测试的错误观点和假“瓶颈”" class="headerlink" title="对自动化测试的错误观点和假“瓶颈”"></a>对自动化测试的错误观点和假“瓶颈”</h2><p>澄清了一些对自动化测试常见的错误观点，还有我们“以为”的瓶颈<span class="emoji" alias="wink" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">😉</span></p>
<p><span id="inline-toc">1.</span> <mark class="label success">UI和业务流程变更导致自动化测试代码不可用</mark></p>
<p>这种问题其实是一种Technical debt.<br>比如一般UI自动化测试，都是根据 <strong>id/class</strong> 等属性定位页面元素，然后对页面进行测试的。然而，这些元素并非一成不变，这就导致需要频繁更换，使代码变得难以维护，此时我们可以在写测试的时候，要求开发给元素加上一个固定的 <strong>QA-hook</strong>，这样就不用频繁更换了。</p>
<p><span id="inline-toc">2.</span> <mark class="label danger">UI自动化测试只能模拟人工</mark></p>
<p>另一种说法是“UI自动化测试”就是机器点点点。<br>按课程所说，UI自动化测试发展到现在是有3个阶段：</p>
<div class="note default"><ul>
<li><mark class="label success">传统自动化测试</mark>：就是我现在做的，写常规测试，加断言，需要用例维护。可以帮助做回归测试。</li>
<li><mark class="label danger">自动探索测试</mark>：可以利用自动化对新功能进行测试，也可以对老功能做回归。没有接触过。</li>
<li><mark class="label danger">codeless方向及智能生成测试用例方向</mark>：自动智能化生成case，不用写代码就可以完成自动化测试。也没有接触过。</li>
</ul>
</div>

<h2 id="根据分层测试体系控制自动化场景和规模"><a href="#根据分层测试体系控制自动化场景和规模" class="headerlink" title="根据分层测试体系控制自动化场景和规模"></a>根据分层测试体系控制自动化场景和规模</h2><p>就是在项目开发上线整个流程中的自动化测试实践，主要是三个部分：<br><span id="inline-toc">1.</span> <mark class="label success">核心用例自动化覆盖</mark><br>写Smoke测试覆盖核心功能，这块已经实践了。<br><span id="inline-toc">2.</span> <mark class="label success">基础回归自动化覆盖</mark><br>老功能用自动化覆盖，也实践了。<br><span id="inline-toc">3.</span> <mark class="label success">新功能手工测试</mark><br>这块其实说的有点笼统，应该是对新功能做一些不能自动化的测试，比如探索测试，可用性测试等等。基础的功能测试应当提前写好自动化case去覆盖。</p>
<h2 id="如何高效落地自动化"><a href="#如何高效落地自动化" class="headerlink" title="如何高效落地自动化"></a>如何高效落地自动化</h2><p>以移动端自动化测试为例，要做到三点：<br><span id="inline-toc">1.</span> <mark class="label warning">了解待测产品和平台</mark><br>移动端有Android/iOS/App/小程序等应用，我是没有深入了解其差异的。而Desktop端有哪些应用也并没有了解。<br><span id="inline-toc">2.</span> <mark class="label warning">精通好的测试框架</mark><br>比如Selenium(虽然是TW开发的), Appium等等，前者目前在用，但远远谈不上精通。后者完全无了解。<br><span id="inline-toc">3.</span> <mark class="label warning">掌握一些自动化测试代码编写技巧和关键点</mark><br>比如PageObject模型，TDD，智能等待，失败重试机制。这些 Good Practice 项目上在用，但自己没有深入了解。</p>
<h2 id="常用自动化测试框架"><a href="#常用自动化测试框架" class="headerlink" title="常用自动化测试框架"></a>常用自动化测试框架</h2><ul>
<li><mark class="label warning">Web应用自动化</mark>：Selenium</li>
<li><mark class="label danger">App手机应用自动化</mark>：Appium</li>
<li><mark class="label danger">PC端的应用的GUI自动化</mark>：Unkown</li>
<li><mark class="label danger">微信小程序自动化</mark>：App+Web测试技术的外延形态</li>
<li><mark class="label danger">智能设备自动化</mark>：Unknown</li>
</ul>
<h2 id="自动化遍历测试和探索测试工具"><a href="#自动化遍历测试和探索测试工具" class="headerlink" title="自动化遍历测试和探索测试工具"></a>自动化遍历测试和探索测试工具</h2><p>是指能够以自动化的方式对 app 进行充分的功能遍历以探索 bug 的工具，以移动端为例。</p>
<ul>
<li><mark class="label danger">Android原生Monkey</mark></li>
<li><mark class="label danger">百度 SmartMonkey</mark></li>
<li><mark class="label danger">腾讯 NewMonkey</mark></li>
<li><mark class="label danger">阿里 Macaca 的 NoSmoke</mark></li>
<li><mark class="label danger">Google出品的 AppCrawler</mark></li>
</ul>
<h2 id="The-End"><a href="#The-End" class="headerlink" title="The End"></a>The End</h2><div class="note info"><p>这么多的红色和黄色，主要是一些新型工具的学习，看来真是学海无涯啊<span class="emoji" alias="relieved" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">😌</span></p>
</div>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Github+jsDelivr创建个人图床</title>
    <url>/blog-picture-service/</url>
    <content><![CDATA[<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN@1.1/images/blog-picture-service/1.jpg">

<h2 id="关于图床"><a href="#关于图床" class="headerlink" title="关于图床"></a>关于图床</h2><p>俗话说「无图言X」，图片就相当于博客的灵魂，非常重要。</p>
<p>在Hexo博客里插入图片，一般用html和markdown两种格式，指定图片路径之后才能展示在页面上，这里又有两种方式：</p>
<ul>
<li>图片保存在Github代码仓库，直接指定仓库里的图片路径来访问。</li>
<li>图片上传到「图床」，获取图片外链，用外链来展示图片。</li>
</ul>
<p>Github单个仓库的容量限制在1G左右，所以把图片保存在代码仓库，不但占用资源，而且由于GithubPages是国外服务，在国内访问加载慢，容易导致图片挂掉。</p>
<p>所以用图床服务，是明智的选择。一个好的图床，应该保证图片在国内外访问的稳定性，而且还能做一个图片仓库，保存博客的图片，起到文件备份的作用。</p>
<p>然而，同时满足这两个要求的图床，都是收费的，而且要做域名备案，比如七牛云等；作为一个怕麻烦的穷逼，这显然不是我的option，年少无知的时候用过七牛云，没想到用的只是一个测试外链，结果期限一到图片全挂了，真是血的教训。</p>
<p>之后我一直都用的免费图床，比如微博图床、PicGo等等，但各有各的槽点，写这篇文章之前我用的是 <a href="https://sm.ms/">SM.MS</a>，使用很方便，虽然加载速度尚可，可有时图片也会挂，而且它无法做文件备份，所以一直以来我的博客图片都像在裸奔，十分没有保障。</p>
<p>今天终于有闲暇再折腾图床了，然后我就发现了Github+jsDelivr的图床创建方式。</p>
<h2 id="Github-jsDelivr"><a href="#Github-jsDelivr" class="headerlink" title="Github+jsDelivr"></a>Github+jsDelivr</h2><ul>
<li>Github: 谁人不知</li>
<li><a href="https://www.jsdelivr.com/">jsDelivr</a>: 一个开源、免费的CDN工具</li>
</ul>
<div class="note info"><p>简而言之，就是说在Github上创建一个专门用来保存博客图片的仓库，把图片的github链接传给jsDelivr，生成一个CDN图片外链，然后再插入到博客里。<br>这样，就生成了自己的图床，图片上传到github，文件备份可以放心了；访问图片时有jsDelivr做CDN加速，速度也ok了，它不香吗？<br>虽然图片还是保存在github仓库，有1个G的容量限制，但且不说博客图片啥时候才能到1个G，就算1个G，还可以再新建一个github库来存。</p>
</div>

<p>具体做法请直接看参考文章第一篇，人说的挺清楚了，我就不啰嗦了。</p>
<h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/76951130">免费CDN：jsDelivr+Github 使用方法</a></li>
<li><a href="https://www.jianshu.com/p/a200f116c3ce">一次艰难的图床选择经历(MWeb+PicGo+Github)</a></li>
</ul>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>一点都不香了！！！这个有50M的限制。。。到了图片就访问不了了：</p>
<p><img data-src="https://s2.loli.net/2022/05/28/8Qm2D7XIKtTJcey.png" alt="不香了"><span class="image-caption">不香了</span></p>
<p>所以目前还是用回 <a href="https://sm.ms/">SM.MS</a> ，现在有Dashboard可以管理图片了：</p>
<p><img data-src="https://s2.loli.net/2022/05/28/Zt68ySuJb9YOhpD.png" alt="DashBoard"><span class="image-caption">DashBoard</span></p>
<p>还有5G的存储，也算靠谱了：</p>
<p><img data-src="https://s2.loli.net/2022/05/28/pu3Be61SJDdrf9j.png" alt="5GLimit"><span class="image-caption">5GLimit</span></p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>图床</tag>
        <tag>Github</tag>
        <tag>jsDelivr</tag>
        <tag>CDN</tag>
      </tags>
  </entry>
  <entry>
    <title>最近读了几本书</title>
    <url>/books-thinking/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/08/21/EcVkwOKxCmU4svj.jpg">

<div class="note info"><p>前段时间一个 <a href="https://blog.kedamanga.com/">怨种同事</a> 推荐了两本书给我看，主题比较相似，一个是教人怎么好好活着，一个是看别人怎么好好活着，两本书都让我有不同程度的共鸣，然后下面是一些我个人的想法。</p>
</div>

<h2 id="人生的智慧"><a href="#人生的智慧" class="headerlink" title="人生的智慧"></a><a href="https://book.douban.com/subject/1292409/">人生的智慧</a></h2><p>这本书其实是后人成书，出自叔本华的封笔之作《附录和补遗》。</p>
<p>书的主题是「幸福论」，也就是教人怎么好好活着。那怎么才能好好活着呢？一句话：<strong>拥有健康的身体和健康的心灵</strong>。</p>
<p>这听起来好像是句废话，但也有可仔细推敲的地方。书中把人的个体做了基本的划分：</p>
<ul>
<li>人的自身：健康、智商、外貌、道德品质等</li>
<li>人的身外之物：钱财及各种被世俗赋予价值的占有物</li>
<li>人所展现的表象：人在其他人眼中所呈现的样子即别人对他的看法</li>
</ul>
<p>要想好好活着，人的自身才是最重要的，其他两样都是放屁。所以每个人都必须成为和做最好的自己，幸福属于能够自得其乐的人。</p>
<p>可只要在人群中生活，后两样也是不能丢弃的。所以叔本华说：卓越的精神思想会导致一个人不喜与他人交往，这样的人更愿意独处甚至隐居，只有独处的时候，人才会真正成为自己。</p>
<p>嗯，中心思想大概就上面这些，来来回回讲了半本书(可能跟翻译也有关系)，书的后半部分是叔本华的建议和格言(讲道理)，关于怎么对待自己、他人、命运以及世事发展，一共53条大道理。</p>
<p>整本书的内容我是褒贬不一的(当然褒比较多)，也有一些疑问和想吐槽的地方：</p>
<div class="tabs" id="吐槽"><ul class="nav-tabs"><li class="tab active"><a href="#吐槽-1">吐槽 1</a></li><li class="tab"><a href="#吐槽-2">吐槽 2</a></li><li class="tab"><a href="#吐槽-3">吐槽 3</a></li><li class="tab"><a href="#吐槽-4">吐槽 4</a></li><li class="tab"><a href="#吐槽-5">吐槽 5</a></li><li class="tab"><a href="#吐槽-6">吐槽 6</a></li></ul><div class="tab-content"><div class="tab-pane active" id="吐槽-1"><blockquote>
<p>Page44: 那些经历过匮乏和贫穷的人，比起那些只是听说过贫困的人更新不害怕贫困，因此更加倾向于奢侈豪华，后一类人更加着眼于未来，因此他们比起前者过着更加节俭的生活。</p>
</blockquote>
<p>excume me? 我小时候家里就没啥钱，因为经历过，所以才害怕贫困，然后走了出来，可也只是满足于现在的生活，并不想变得多奢侈豪华啊，从小过着挥金如土生活的人会知道什么叫节俭嘛？我不理解。</p></div><div class="tab-pane" id="吐槽-2"><blockquote>
<p>Page66-Page69讲的性别名誉</p>
</blockquote>
<p>在我看来整篇对女性名誉的论述都是放屁，当然这跟叔本华所处的封建社会有关系，不过也跟他从小与母不和导致他对女性产生敌意也有很大关系。</p></div><div class="tab-pane" id="吐槽-3"><blockquote>
<p>Page69-Page91讲的骑士荣誉</p>
</blockquote>
<p>不是很理解这么无聊且睚眦必报精神的名誉，为啥要这么多篇幅讲，看得我都困了，当然可能跟年代有关系吧。</p></div><div class="tab-pane" id="吐槽-4"><blockquote>
<p>Page121: 衡量一个人是否过得幸福，我们不应该向他询问那些令他高兴的赏心乐事，而应该了解那些让他烦恼操心的事情；因为烦扰他的事情越少越微不足道，那么他就生活得越幸福。</p>
</blockquote>
<p>这句话我既认可也不认可，叔本华认为人的一生都在受罪，所以痛苦越少越幸福，这也是他为什么被叫做「现代悲观主义创始人」吧。</p></div><div class="tab-pane" id="吐槽-5"><blockquote>
<p>Page122: 一般来说，人们最常做的一大蠢事就是过分地为生活未雨绸缪，无论这种绸缪准备以何种方式进行。</p>
</blockquote>
<p>嗯，对，毕竟能不能活到那个时候还不一定。</p>
<blockquote>
<p>Page125: 一个人的一生越有价值，越有意义和计划，越具有独特的个性，他就越有必要不时地认清自己生命总体发展的大致脉络和自己的计划，这对他大有好处。</p>
</blockquote>
<p>嗯？咋又要做生命计划，叔叔叔(人家中文名姓叔)您自己说的话是不有些相悖呢？那我到底计划还是不计划？算了随缘吧。</p></div><div class="tab-pane" id="吐槽-6"><blockquote>
<p>Page227叔本华自己的注释: 一般来说人只有卒于90-100岁之间才算是寿元已尽。</p>
</blockquote>
<p>hummm…结果自己72岁就走了。</p></div></div></div>

<p>所以其实人生的智慧(如何才能幸福度过一生)很简单，就是保持身体健康，然后管好自己别瞎搞些有的没的，就行，可惜，这世上又有多少人能真正做到呢？</p>
<h2 id="做二休五"><a href="#做二休五" class="headerlink" title="做二休五"></a><a href="https://book.douban.com/subject/30413046/">做二休五</a></h2><p>叔本华说：卓越的精神思想会导致一个人不喜与他人交往，这样的人更愿意独处甚至隐居，只有独处的时候，人才会真正成为自己。</p>
<p>这本书的作者大原扁理，大概就是这样的人。<br>在996盛行、社会高度老龄化、年轻人低欲望甚至躺平啃老、一股子乌烟瘴气的日本都市，作者在20多岁选择了离群索居，过起了大隐隐于市的隐居生活。</p>
<p>书里就是一些关于他为什么想隐居、隐居之前的生活、以及隐居后衣食住行的描述。做二休五是指他隐居时的看护工作，每周只要两天去照顾重度身障者，5天休息日，月薪大概四千人民币。</p>
<p>看书的时候我蛮有共鸣的，因为毕业后我一直一个人住(我也算有卓越的精神思想了吧hhhhh)，到现在也快4年了，工作虽然基本上965但我很宅，一直过着深居简出的生活。去年有小半年我都在家办公，那会子的感觉完全就如书里所写，每天安排好自己的生活，我甚至会一个多月都不踏出小区门。所以作者在书中描述的很多生活场景我都很熟悉。</p>
<p>作者说小苏打很好用(被他捧上神坛的小苏打)，可以免去买洗衣粉和皂类清洁洗碗；他还会去采野菜，书里甚至介绍了不同形态的各种可食野菜；向流浪汉请教如何不花钱也能活下去。。。总之这书看的人很治愈，很像我之前看过的一本漫画书，叫 <a href="https://book.douban.com/subject/1346815/">一个人住第五年</a>，也是个日本独居女生写的，不过作者也是个姐妹(Gay)。</p>
<p>虽然很有共鸣，但我可做不到像他那样的极致低欲望，我虽然也没什么欲望，但对生活品质还是有一定要求的，最近借鉴了他书里描述的每天早上做操的活动，我也经常早上一遍第八套广播体操，通体舒畅。</p>
<h2 id="作者对比"><a href="#作者对比" class="headerlink" title="作者对比"></a>作者对比</h2><p>接下来让我们来对比这两本的作者，你会发现他们有一个神奇的共同点。</p>
<mark class="label info">叔本华</mark>

<p>德国哲学家，富二代，父亲自杀，与母不和之后独居，少时默默无闻，晚年声名鹊起，终身未婚。</p>
<mark class="label info">大原扁理</mark>

<p>普通家庭，高中毕业后因为在思考自己想做什么，错过了大学志愿填报期限，所以既没读大学也没就职，在老家打了三年工后去国外旅行，回国后来到东京接着打工受到了资本家的压榨迫害，然后辞职正式开始隐居到现在。</p>
<p>共同点？<br>单身啊！不跟我一样吗？叔本华因为是富二代有钱又有闲独居几十年成为了哲学家；大原扁理有闲没钱隐居8年写了做二休五，后来火了还赚了不少钱现在也有钱有闲了。<br>所以我想我要是还找不着对象继续独居几年，说不定也能大彻大悟，即使写不出什么传世佳作，也能跟大原哥一样写本书指不定也火了呢是吧，阿巴阿巴。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>幸福论</tag>
        <tag>隐居</tag>
      </tags>
  </entry>
  <entry>
    <title>雨天挤公交有感</title>
    <url>/bus-story/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/09/13/CgLRPnaU5dDvuSx.jpg">

<h2 id="极少数的公交通勤"><a href="#极少数的公交通勤" class="headerlink" title="极少数的公交通勤"></a>极少数的公交通勤</h2><p>又是雨天☔️。</p>
<p>6点钟，下班，外边的雨势未减。打车🚕，XX出行里已经排了100多人，只能坐公交🚌了。</p>
<p>其实我已经很少坐公交通勤了。因为之前住处并没有直达的公交去公司，所以天气晴好时多是骑着滑板车🛴，不能骑车的天气，也会提前打车回家，后来发现有了直达的公交，也没坐过。</p>
<p>极少数的时候，比如今天，下雨，又忘记提前打车，实在失策，只能选择坐公交，所以我公交通勤的频率大概是几个月一次吧。</p>
<p>为什么不在公司等雨停了再走？hummm… 实在不是我的习惯，对我而言，公司只能拥有我8小时，在8小时以外，无论我在公司干什么，总会让我有一种加班的错觉。</p>
<p>于是收拾行装出发去站牌。</p>
<h2 id="你喜欢哪一种雨天呢？"><a href="#你喜欢哪一种雨天呢？" class="headerlink" title="你喜欢哪一种雨天呢？"></a>你喜欢哪一种雨天呢？</h2><p>外面的雨不大，算是中雨，雨中行人匆匆。</p>
<p>其实我很喜欢雨天，尤其是微雨的天气，世界被朦胧的雨雾遮罩，沉静、新鲜，每个人都藏在伞下，像开在雨中的花，神秘的，甚至还有一种浪漫的氛围感，好像时间在这一刻慢了下来。</p>
<p>但如果是中雨，或是大雨，这种感觉就会被打破。雨滴加速落下，时间也像按了加速键，雨伞噼啪作响，思绪被打乱，地面积水渐深，身周也不可避免的被淋湿，让人只想逃离，无暇顾及其它，所以我加快了脚步。</p>
<h2 id="初始化：打工人和雨中的公交站"><a href="#初始化：打工人和雨中的公交站" class="headerlink" title="初始化：打工人和雨中的公交站"></a>初始化：打工人和雨中的公交站</h2><p>到了公交站，站牌下已经站满了人，路边和路沿上也全是翘首以盼的打工人。</p>
<p>双向马路本来就窄，等公交的人太多，又是雨天，所以车辆流动的很慢。站点的公交也多，一辆接着一辆进站，车间距很小，站在人堆里根本看不清后车的车号，只能走到后面去看。</p>
<p>还没到站牌下，就远远看到了两辆直达我住处的公交车，可车门口扎满了人，车也快要走了，赶不上，所以又等第三辆。</p>
<p>人群中打伞的人很多，但因为密度太大，我不时被别人伞上的积水浇到身上，防不胜防。因为公交很多，而且大都同时到站点，有的司机根本等不及到正确的位置就打开车门，这时在前面等车的人又辗转跑到后面上车，十分艰辛。</p>
<h2 id="注定无缘的第三趟公交"><a href="#注定无缘的第三趟公交" class="headerlink" title="注定无缘的第三趟公交"></a>注定无缘的第三趟公交</h2><p>第三辆车到了，停在了离站点还有30米的距离。</p>
<p>我随着人流跑到后面，又被夹杂着挤在车门口，身周扎满了人。因为是第二站，车上早已没了座位，能够站立的空间也并不充裕，所以每个人只能尽力往前挤，渴望车上能有自己的一席之地。</p>
<p>我知道，这是一场无声的Battle。<br>好久不坐公交的我有点被这种阵势吓到，反应过来的时候，已经被排在几圈之外，希望渺茫，但一时也无法脱身，只能被动向前挪。</p>
<p>雨还在下，但挤公交的人是没有资格打伞的，因为太拥挤，根本没有撑伞的空间，而且很不方便。我也收起了伞，幸亏穿了连帽外套，可以勉强遮雨，否则真要体会「冷冷的冰雨在脸上胡乱的拍」了。</p>
<p>人群继续向前挪动，我头顶是公交车的二维码。因为疫情，坐公交时要扫这个码，扫好之后向司机出示绿码才可以上车。而且现在坐公交，基本上都是用乘车码扫码付款，很少有人刷实体的公交卡或者投币，所以扫完公交车的二维码，还要再打开乘车码，扫码付款后才能成功上车。</p>
<p>这意味着，即使挤到了车前，却没有扫好公交的绿码；或者上车后，打不乘车码；又或者打开了乘车码，却一时半会对不准扫码口，都有可能被挤下去从头开始，十分致命。如果此时网路不畅或者手机死机，就更加让人绝望。</p>
<p>所以当我旁边女孩子的伞遮住了二维码后，我非常能理解那些外围人焦灼的目光，并善意提醒她把伞收起来。</p>
<p>然而第三趟公交注定与我无缘，在离车门还有几步之遥的地方，司机无奈地说「挤不上了，等下一辆吧」，人群散开，我又回到了原点。</p>
<h2 id="一步之遥的第四趟公交，我悟了"><a href="#一步之遥的第四趟公交，我悟了" class="headerlink" title="一步之遥的第四趟公交，我悟了"></a>一步之遥的第四趟公交，我悟了</h2><p>继续等第四趟，这次我很清醒的做了规划，我暗暗告诫自己，等车来的时候，一定要身轻如燕的挤到前排。</p>
<p>车来了，在看清车号的那一刻，我就开始了追逐。然而车速太快，停在了我的前面，车门立刻围满了人，即使我不甘其后的往前挣扎，也无法靠近车门，最后挤在了这个位置：</p>
<p><img data-src="https://i.loli.net/2021/09/15/Fjeo9SI5DCWb7mT.png" alt="卑微的我"><span class="image-caption">卑微的我</span></p>
<p>环顾四周，我发现自己并没有处于一个有利的竞争位置，以车门为中心，人流分成三组，车门右边、车门对面、以及车门左边，我所处的位置显然非常不利，但并不是没有希望。</p>
<p>人群向前挪动着，人太多，司机也站起来，指挥大家扫码、付款、然后上车，一波波的人扫好公交车的二维码，然后出示给司机，司机也一波波的确认绿码。<br>我对这个过程真的抱有疑问，这么多人，这么多绿码塞进司机的视野，如果有人没扫码，也可以混水摸鱼的上车吧，但是无解。</p>
<p>车门离我越来越近，终于，我前面的小伙伴踏上了车门，成功只有一步之遥！然后，司机又无奈地说「挤不上了，等下一辆吧」，人群散开，我又回到了原点。</p>
<h2 id="成功上车，第五趟公交"><a href="#成功上车，第五趟公交" class="headerlink" title="成功上车，第五趟公交"></a>成功上车，第五趟公交</h2><p>可能人生就是这样吧，不断地重启。所以又继续等第五辆车，这次我汲取了上次的教训，计划去车门对面那组，成功率应该更高。</p>
<p>第五趟公交终于来了，我又开始了追逐，但这次的司机似乎很有原则，不在后边停车，而是停在站牌旁边，正确的停车位置。</p>
<p>因为没有深谙司机的心理，所以我和大家一样，以为车会停在后面，所以都向后奔，车先是停了几秒，然后又开始向前开，就这样和我计算好的上车位置失之交臂。<br>人群又反应过来，众星捧月般追着车向前跑，队头和队尾奇妙的调换，所以我没有挤到前排。但我仍然坚持在车门对面的位置上车，所以挤在了这个位置：</p>
<p><img data-src="https://i.loli.net/2021/09/15/Ub2MvApmqaXRY6V.png" alt="转换策略"><span class="image-caption">转换策略</span></p>
<p>我还是被人群推着向前挪动，扫好上车码之后像个守财奴一样，将手机护在怀里，生怕页面退出。<br>收起了伞，我的帽子也全湿了，每个人都死盯着车门口的位置，计算着自己上车的距离，像一场无声的角逐。</p>
<p>真狼狈啊，看着自己以及周围的人群，我突然有点想笑，然后也这么做了，旁边的男孩听见了我的笑声，疑惑看向我，于是我笑的更厉害了。这场面，既狼狈激烈，又荒诞有趣，难道不可笑吗？</p>
<p>在这样自嘲般的笑声中，我上车了，也许是我明白了下雨天挤公交的艺术，又或许只是侥幸，总之，我上车了，在6点45分，一个平时已经在家躺尸的时间。</p>
<h2 id="上车之后的煎熬"><a href="#上车之后的煎熬" class="headerlink" title="上车之后的煎熬"></a>上车之后的煎熬</h2><p>上车之后，成功的喜悦渐退，手机却响了起来，原来在我上车的那一刻，也打到了车。又自嘲的笑了笑，也许是命运的安排吧，原本可以体面的坐车回家，但还是历经万难挤上了公交站位，时也，命也？</p>
<p>雨中的公交车摇摇晃晃，车里挤满了人，不可避免的产生肢体碰撞。我的两只手，既要拿着手机、雨伞，还要牢牢抓住头顶的栏杆，像是个在做指定动作的杂技演员，一时间额头沁出了细汗。</p>
<p>车窗渐渐被雾气掩盖，看不清外面的景象。车里，雨水、汗水、汽油味，还有许多难以言喻的味道，充斥着我的鼻腔，只能尽力屏气噤声，十分煎熬。</p>
<p>这样的境况下，我还要不时给下车的乘客让出本就不多的空间，身体交错时，背包、外套也被蹂躏，和我的身体分离，惨不忍睹。</p>
<p>下车之后，我如释重负，恍若重生，深吸几口气，才从刚才的酷刑中缓过神来。看着一同下车的乘客背影渐行渐远，他们是否也和我有同样的感受呢，还是早已习以为常，毫无所觉？</p>
<h2 id="个人尊严"><a href="#个人尊严" class="headerlink" title="个人尊严"></a>个人尊严</h2><blockquote><p>人有无尊严，有一个简单的判据，是看他被当作一个人还是一个东西来对待。这件事有点两重性，其一是别人把你当做人还是东西，是你尊严之所在。其二是你把自己看成人还是东西，也是你的尊严所在。挤火车和上公共厕所时，人只被当身体来看待。这里既有其一的成份，也有其二的成份；而且归根结蒂，和我们的文化传统有关。<br>说来也奇怪，中华礼仪之邦，一切尊严，都从整体和人与人的关系上定义，就是没有个人的位置。一个人不在单位里、不在家里，不代表国家、民族，单独存在时，居然不算一个人，就算是一块肉。这种算法当然是有问题。我的算法是：一个人独处荒岛而且谁也不代表，就像鲁滨孙那样，也有尊严，可以很好的活着。这就是说，个人是尊严的基本单位。知道了这一点，火车上太挤了之后，我就不会再挤进去而且浑然无觉。</p>
<footer><strong>王小波</strong><cite><a href="http://www.bwsk.com/xd/w/wangxiaobo/qt/019.htm">个人尊严</a></cite></footer></blockquote>

<hr>
<div class="note primary"><p>这次的经历，让我想到了王小波的这篇文章，「挤火车和上公共厕所时，人只被当身体来看待。」，挤公交又何尝不是呢？当我一次次追逐公交车的时候、当我在人群中向前挪动的时候、当我挤上车忍受「酷刑」的时候，我，这个人，都只能被当作身体来看待。<br>但至少，我并不是「浑然无觉」的，这样，勉强还算得上是「有尊严的活着」吧。</p>
</div>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>活着</tag>
      </tags>
  </entry>
  <entry>
    <title>CodingPages的真面目</title>
    <url>/bye-coding-pages/</url>
    <content><![CDATA[<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/0.jpeg">

<h2 id="CodingPages停服"><a href="#CodingPages停服" class="headerlink" title="CodingPages停服"></a>CodingPages停服</h2><p>CodingPages是一个国内的静态网站托管服务，与GithubPages类似，我在最开始搭建博客时就在用，它可以加速博客内容在国内的访问，同时由于GithubPages不能被百度爬虫，所以CodingPages作为替代品，可以方便进行百度收录，实现博客在国内的SEO。</p>
<p>去年就折腾过一次博客的 <a href="https://jmyblog.top/PageServiceUpdate/">Pages服务</a> ，那时得知CodingPages被腾讯云收购了，也在腾讯云做了一些配置，让博客还能使用CodingPages。<br>前段时间我发现在晚上经常打不开博客内容，就算是GithubPages不稳定吧，可既然有CodingPages理论上不应该如此，但也没深究，也有小伙伴联系我说CodingPages的事，还推荐了gitee，我也依然不置可否：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/6.jpg" height="500" width="250" alt="博客来访者的吐槽"><span class="image-caption">博客来访者的吐槽</span>

<p>直到收到了CodingPages停服的消息：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/5.jpg" height="300" width="240" alt="停服短信"><span class="image-caption">停服短信</span> 

<p>害，看来必须得搞一波了，首先进入Coding的项目详情，果然已经没了「静态网站」的入口，只能去腾讯云看看了。</p>
<h2 id="腾讯云Serverless"><a href="#腾讯云Serverless" class="headerlink" title="腾讯云Serverless"></a>腾讯云Serverless</h2><h3 id="Serverless控制台"><a href="#Serverless控制台" class="headerlink" title="Serverless控制台"></a>Serverless控制台</h3><p>按照短信提示进入腾讯云Serverless控制台，发现了之前配置好的两个静态网站应用，其中，「Summyj.coding.me」是我在CodingPages的初始应用，「谁把钱丢了」是上次升级后的应用，也是停服之前在用的：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/2.jpg">

<p>打开之前升级好的应用，发现开发部署和日志这两项置灰了，看不了细节：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/4.jpg">

<p>没办法，只能重新搞了，但我对腾讯云的这个服务又不熟悉，所以搜了下 <a href="https://github.com/serverless-components/tencent-website">咋用</a>，发现跟CodingPages的服务差不多，不难理解。</p>
<h3 id="新建应用"><a href="#新建应用" class="headerlink" title="新建应用"></a>新建应用</h3><p>所以直接开整，新建一个应用，依次是：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/10.jpg" alt="选择静态网站"><span class="image-caption">选择静态网站</span>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/11.jpg" alt="基础配置"><span class="image-caption">基础配置</span>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/7.jpg" alt="选择代码托管"><span class="image-caption">选择代码托管</span>

<p>保存之后就开始自动部署应用，然后就能用腾讯云分配的 <a href="https://jmyblog-top-1306110219.cos-website.ap-beijing.myqcloud.com/">二级域名</a> 来访问博客了。</p>
<h3 id="CDN加速和自定义域名"><a href="#CDN加速和自定义域名" class="headerlink" title="CDN加速和自定义域名"></a>CDN加速和自定义域名</h3><p>到这里，就有了一个可以在国内稳定访问博客的链接，但是我还需要绑定自己的个人域名，然后设置CDN加速，和之前就没有什么区别了。然而，还是和之前一样的问题，无论是要用个人域名做源站域名还是CDN加速域名，都得搞我最讨厌的域名备案，害，想用个人域名，咋就这么难呢？</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/12.jpg">

<p>之前不需要备案是因为应用的地域是香港(如下图)，大陆访问还是慢，相当于折腾了个寂寞：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/4.jpg">

<p>这次我把地域设成了北京，所以要用个人域名，就得备案了，但我实在不想搞那玩意，没得办法，只能用腾讯云给的二级域名了，这样在GithubPages不稳定的时候，起码还有个备用链接可以访问博客。</p>
<p>到这里，加上之前的配置，博客的访问域名和对应证书如下：</p>
<div class="note info"><ul>
<li><a href="https://jmyblog.top/">jmyblog.top</a><br>博客本来的域名，阿里云买的，算是博客主站，由GithubPages提供网站托管服务。<br>域名本身解析到了GithubPages，也开启了强制HTTPS，证书是Github给申请的，Let’s Encrypt签发的证书，一般有效期是三个月，到期会自动续签。</li>
<li><a href="https://jmyblog-top-1306110219.file.myqcloud.com/">https://jmyblog-top-1306110219.cos-website.ap-beijing.myqcloud.com</a><br>腾讯云的二级域名，现在算是博客在国内的副站，作为GithubPages国内访问不稳定时的备选，由腾讯云Serverless提供网站托管服务，证书是腾讯云默认证书，会自动续签。</li>
</ul>
</div>

<h2 id="SEO验证"><a href="#SEO验证" class="headerlink" title="SEO验证"></a>SEO验证</h2><p>由于GithubPages不能被百度抓取，所以想参考 <a href="https://jmyblog.top/BlogSEO/">之前的文章</a> 把腾讯云给的二级域名做一个百度收录。</p>
<h3 id="Google收录"><a href="#Google收录" class="headerlink" title="Google收录"></a>Google收录</h3><p>之前为了解决 <a href="https://jmyblog.top/PageServiceUpdate/#GithubPages%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3">GithubPages Warning</a> ，给主站域名加上了www前缀，当时没毛病，后来发现科学上网的时候，访问博客老是会自动加上这个前缀，然后页面就挂了，只有强制去掉www才能正常打开页面。<br>所以这次我直接在GithubPages里去掉了www前缀，虽然还是会有Warning，但至少页面不会挂了，之后我需要验证一下自己之前的Google收录是否正常，所以登陆管理台，发现一切ok：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/18.jpg" alt="少的可怜的web点击量(怀疑都是我点的)"><span class="image-caption">少的可怜的web点击量(怀疑都是我点的)</span>

<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/19.jpg" alt="Google搜索域名验证"><span class="image-caption">Google搜索域名验证</span>

<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/20.jpg" alt="Google搜索博名验证"><span class="image-caption">Google搜索博名验证</span>


<h3 id="百度收录"><a href="#百度收录" class="headerlink" title="百度收录"></a>百度收录</h3><h4 id="主站"><a href="#主站" class="headerlink" title="主站"></a>主站</h4><p>虽然不能抓取GithubPages，但是聊胜于无，我之前也做过百度的主站收录，就还好吧，只是发现无论是搜索域名还是博名，搜索结果要么很少，要么只能搜到别的结果，可能是因为我没交钱？</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/9.jpg" alt="百度搜索域名验证"><span class="image-caption">百度搜索域名验证</span>

<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/8.jpg" alt="百度搜索博名验证"><span class="image-caption">百度搜索博名验证</span>

<p>而且我试着抓取一篇文章，发现也可以抓到，hummm…所以百度不能抓取GithubPages是个谣言？</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/25.jpg" alt="百度抓取文章"><span class="image-caption">百度抓取文章</span>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/23.jpg" alt="百度sitemap抓取成功"><span class="image-caption">百度sitemap抓取成功</span>

<h4 id="副站"><a href="#副站" class="headerlink" title="副站"></a>副站</h4><p>然后就是这次搞的副站了，验证站点所有权之后进入管理台，这个只能做手动收录，因为自动收录只能在主站做：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/21.jpg" alt="副站手动收录"><span class="image-caption">副站手动收录</span>

<p>完了之后同样做搜索验证，发现。。。啥也没有？</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/27.jpg" alt="搜了个寂寞"><span class="image-caption">搜了个寂寞</span>

<p>但文章是能抓到的：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/bye-coding-pages/26.jpg" alt="副站抓取成功"><span class="image-caption">副站抓取成功</span>

<p>所以就这样吧，我也累了，本次折腾到此结束！</p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>CodingPages</tag>
        <tag>腾讯云</tag>
      </tags>
  </entry>
  <entry>
    <title>真.Charles抓包配置大全</title>
    <url>/charles-connect/</url>
    <content><![CDATA[<h2 id="添加Charles-Keychain"><a href="#添加Charles-Keychain" class="headerlink" title="添加Charles Keychain"></a>添加Charles Keychain</h2><h3 id="下载Charles-CA"><a href="#下载Charles-CA" class="headerlink" title="下载Charles CA"></a>下载Charles CA</h3><p>打开Charles，依次点击菜单栏 <mark class="label primary">Help - SSL Proxying - Install Charles Root Certificate</mark>：<br><img data-src="https://i.loli.net/2021/07/06/6E3AXOaWcfgodDT.png" alt="下载CharlesCA到本地"><span class="image-caption">下载CharlesCA到本地</span></p>
<h3 id="信任Charles-CA"><a href="#信任Charles-CA" class="headerlink" title="信任Charles CA"></a>信任Charles CA</h3><p>之后打开电脑的 Keychain Access，搜索 “Charles” 找到Charles CA，然后设置它为始终信任：<br><img data-src="https://i.loli.net/2021/07/06/SEqwaRA6sGPQ3zl.png" alt="设置信任证书"><span class="image-caption">设置信任证书</span></p>
<h2 id="浏览器抓包"><a href="#浏览器抓包" class="headerlink" title="浏览器抓包"></a>浏览器抓包</h2><p>打开Charles, 确保 <mark class="label primary">Proxy-macOS Proxy</mark>设置是开启(打勾)的，开启之后Charles左边的请求列表里应该会出现一些请求信息，这些都是电脑上正在发出的请求，没有的话建议重启电脑再打开Charle，开启macOS Proxy。</p>
<p>打开浏览器在你想要抓取请求的测试网站里做一些操作，直到在Charles请求列表里看到你要抓取的请求，此时还需要开启SSL Proxy你才能看到请求的具体信息，否则会有下图的提示：</p>
<p><img data-src="https://i.loli.net/2021/07/07/orQJheFv2mKna91.png" alt="需要开启SSL提示"><span class="image-caption">需要开启SSL提示</span></p>
<p>鼠标选中想要抓取的请求域名，右键在选项列表中开启 SSL Proxy，然后就可以正常抓取Https请求了，如果只想关注这个请求，也可以在右键的选项列表中选中Focus，其他的请求就会被分组到Other Hosts：</p>
<p><img data-src="https://i.loli.net/2021/07/07/chOZeBxnHwtNSyM.png" alt="右键选项列表"><span class="image-caption">右键选项列表</span></p>
<p>打开<mark class="label primary">Proxy-SSL Proxy Settings</mark>，也可以对所有在抓取的请求地址进行管理：<br><img data-src="https://i.loli.net/2021/07/07/fVdGbDXUhPlejHg.png" alt="SSL Proxy Settings"><span class="image-caption">SSL Proxy Settings</span></p>
<h2 id="iOS抓包"><a href="#iOS抓包" class="headerlink" title="iOS抓包"></a>iOS抓包</h2><h3 id="iOS-Simulator"><a href="#iOS-Simulator" class="headerlink" title="iOS Simulator"></a>iOS Simulator</h3><h4 id="下载Charles-CA-1"><a href="#下载Charles-CA-1" class="headerlink" title="下载Charles CA"></a>下载Charles CA</h4><p>打开Charles，依次点击菜单栏 <mark class="label primary">Help - SSL Proxying - Install Charles Root Certificate in iOS Simulators</mark>：<br><img data-src="https://i.loli.net/2021/07/07/kzsAhKJD8icNY5M.png" alt="下载CharlesCA到iOS Simulator"><span class="image-caption">下载CharlesCA到iOS Simulator</span><br>之后Charles会弹出添加成功的提示：<br><img data-src="https://i.loli.net/2021/07/07/L1mPro8s7UZxARI.png" alt="添加成功提示"><span class="image-caption">添加成功提示</span><br>打开iOS Simulator，进入<mark class="label primary">Settings - General</mark>，此时应该有一个 <strong>Profile</strong> 选项显示：<br><img data-src="https://i.loli.net/2021/07/07/c1x7tjPR8S9EI3Q.png" width="230" height="500" alt="CA Profile"><span class="image-caption">CA Profile</span><br>如果没有的话， 开启Charles的 <mark class="label primary">Proxy-macOS Proxy</mark>设置，再打开Simlator的Safari浏览器，输入 <strong>chls.pro/ssl</strong>，手动下载Charles，之后再去<mark class="label primary">Settings - General</mark>就可以看到Profile了，里面就是下载的Charles CA:<br><img data-src="https://i.loli.net/2021/07/07/9KhcPUoGeL7s3Vu.png" alt="手动下载CharlesCA到iOS Simulator"><span class="image-caption">手动下载CharlesCA到iOS Simulator</span></p>
<h4 id="安装Charles-CA"><a href="#安装Charles-CA" class="headerlink" title="安装Charles CA"></a>安装Charles CA</h4><p>点击上边下载好的Charles CA，一路点击安装即可，直到CA为Verified：<br><img data-src="https://i.loli.net/2021/07/07/U19N8bHGYKpifIc.png" alt="安装Charles CA到iOS Simulator"><span class="image-caption">安装Charles CA到iOS Simulator</span></p>
<h4 id="信任Charles-CA-1"><a href="#信任Charles-CA-1" class="headerlink" title="信任Charles CA"></a>信任Charles CA</h4><p>去<mark class="label primary">Settings - General - About - Certificate Trust Settings</mark>，打开Charles CA的信任按钮就好了：<br><img data-src="https://i.loli.net/2021/07/07/6B19UTo7jVrYIia.png" width="230" height="500" alt="信任CA"><span class="image-caption">信任CA</span></p>
<h4 id="抓取Simulator请求"><a href="#抓取Simulator请求" class="headerlink" title="抓取Simulator请求"></a>抓取Simulator请求</h4><p>打开Charles, 确保 <mark class="label primary">Proxy-macOS Proxy</mark>设置是开启的，再打开Simulator在你想要抓取请求的测试应用里做一些操作，确保你可以在Charles的请求列表里看到相关信息，如果看不到，可以试试重启Simulator。<br>抓取请求和上文 <a href="https://jmyblog.top/charles-connect/#%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8A%93%E5%8C%85">浏览器抓包</a> 一致。</p>
<p><img data-src="https://i.loli.net/2021/07/07/7ihUkHImbWsKJfV.png" alt="抓取Simulator请求"><span class="image-caption">抓取Simulator请求</span></p>
<h3 id="iOS-真机"><a href="#iOS-真机" class="headerlink" title="iOS 真机"></a>iOS 真机</h3><h4 id="设置Wifi-Proxy"><a href="#设置Wifi-Proxy" class="headerlink" title="设置Wifi Proxy"></a>设置Wifi Proxy</h4><p>打开Charles，点击 <mark class="label primary">Help - SSL Proxying - Install Charles Root Certificate on a Mobile device or Remote Broswer</mark>:<br><img data-src="https://i.loli.net/2021/07/07/GLb9lJ2gQIWaUY1.png" alt="Charles Proxy"><span class="image-caption">Charles Proxy</span><br>之后会打开一个弹窗，上边是你的本地IP和Charles默认端口，先别关掉它：<br><img data-src="https://i.loli.net/2021/07/07/98VG6rC3EPwIx4n.png" alt="Proxy Detail"><span class="image-caption">Proxy Detail</span><br>打开真机以下设置，将代理配置改成手动，Server和端口号填写和上面弹窗中的一致，保存设置：<br><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/charles-connect/1.jpg" width="500" height="500" alt="设置Wifi Proxy"><span class="image-caption">设置Wifi Proxy</span><br>回到Charles，此时应有一个确认连接的弹窗，点击允许：<br><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/charles-connect/2.jpg" alt="允许连接"><span class="image-caption">允许连接</span></p>
<h4 id="下载Charles-CA-2"><a href="#下载Charles-CA-2" class="headerlink" title="下载Charles CA"></a>下载Charles CA</h4><p>打开Safari浏览器(最好打开隐私窗口)，输入 <strong>chls.pro/ssl</strong>，下载Charles CA：<br><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/charles-connect/4.jpg" width="500" height="500" alt="下载CharlesCA"><span class="image-caption">下载CharlesCA</span></p>
<h4 id="安装Charles-CA-1"><a href="#安装Charles-CA-1" class="headerlink" title="安装Charles CA"></a>安装Charles CA</h4><p>进入 <mark class="label primary">Settings - General</mark>，此时应该有一个 <strong>Profile Downloaded</strong> 选项显示，点击进入，按照下图安装即可，直到CA为Verified：<br><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/charles-connect/6.pic.jpg" alt="安装CharlesCA"><span class="image-caption">安装CharlesCA</span></p>
<h4 id="信任Charles-CA-2"><a href="#信任Charles-CA-2" class="headerlink" title="信任Charles CA"></a>信任Charles CA</h4><p>去<mark class="label primary">Settings - General - About - Certificate Trust Settings</mark>，打开Charles CA的信任按钮就好了：<br><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/charles-connect/3.jpg" width="230" height="500" alt="信任CharlesCA"><span class="image-caption">信任CharlesCA</span></p>
<h4 id="抓取Simulator请求-1"><a href="#抓取Simulator请求-1" class="headerlink" title="抓取Simulator请求"></a>抓取Simulator请求</h4><p>与 <a href="https://jmyblog.top/charles-connect/#%E6%8A%93%E5%8F%96Simulator%E8%AF%B7%E6%B1%82">上文</a> 一致。</p>
<h2 id="tvOS抓包"><a href="#tvOS抓包" class="headerlink" title="tvOS抓包"></a>tvOS抓包</h2><h3 id="AppleTV-模拟器"><a href="#AppleTV-模拟器" class="headerlink" title="AppleTV 模拟器"></a>AppleTV 模拟器</h3><h4 id="下载Charles-CA-3"><a href="#下载Charles-CA-3" class="headerlink" title="下载Charles CA"></a>下载Charles CA</h4><p>在下图页面选择 “Save Charles Root Certificate” 选项下载Charles证书保存到本地，比如桌面啥的：</p>
<p><img data-src="https://i.loli.net/2021/07/06/6E3AXOaWcfgodDT.png" alt="下载CharlesCA并保存"><span class="image-caption">下载CharlesCA并保存</span></p>
<h4 id="信任Charles-CA-3"><a href="#信任Charles-CA-3" class="headerlink" title="信任Charles CA"></a>信任Charles CA</h4><p>打开AppleTV模拟器，将下载的Charles证书手动拖到模拟器里，进入 Seetings -&gt; General -&gt; About 设置页面，此时下方应有一个证书信任的选项，点击后开启Charles证书的信任Toggle，就完成配置了。</p>
<h4 id="抓取Simulator请求-2"><a href="#抓取Simulator请求-2" class="headerlink" title="抓取Simulator请求"></a>抓取Simulator请求</h4><p>与 <a href="https://jmyblog.top/charles-connect/#%E6%8A%93%E5%8F%96Simulator%E8%AF%B7%E6%B1%82">上文</a> 一致。</p>
<h3 id="AppleTV-真机"><a href="#AppleTV-真机" class="headerlink" title="AppleTV 真机"></a>AppleTV 真机</h3><p><img data-src="https://s2.loli.net/2023/09/26/bD1HSg9vL4BeRlU.png" alt="apple tv 真机连接"><span class="image-caption">apple tv 真机连接</span></p>
<p>apple tv有4Ktv和HDtv两种设备(4k比较难搞)，需要下载一个神奇的软件 apple configurator 连接tv(上图)后再以profile的方式安装Charles，可以参考 <a href="https://www.willowtreeapps.com/craft/a-how-to-guide-for-apple-tv-setup-with-charles-proxy">这个链接</a> （需要科学上网）</p>
<p>如果按照链接做的还是不顺利，这里有一些trouble shooting: </p>
<ol>
<li>supervise tv不用路由器也可以，买一条type-c转网口的线把tv和mac连起来，再开启mac的internet sharing，这样mac和tv也在一个网段就可以开始配置</li>
<li>tv reset之后一定不要动遥控器，先Pair!</li>
<li>supervise之后理论上mac和tv连到同一个wifi，就可以在apple configurator的paired device里看到tv然后成功pair，不顺利的话先尝试在tv的remote app and devices页面remove设备再尝试打开apple configurator pair，还是不行那么恭喜你跟我一样，只能通过tv和mac连线的方式pair tv(HDtv用双头typeC线，4Ktv用type-C转网口线按照第一条连上), 这个是硬连接绝对不会断，甚至不用打开tv的remote app and devices页面pair就可以在apple configurator里看到设备。</li>
</ol>
<h2 id="Android抓包"><a href="#Android抓包" class="headerlink" title="Android抓包"></a>Android抓包</h2><h3 id="Android-Emulator"><a href="#Android-Emulator" class="headerlink" title="Android Emulator"></a>Android Emulator</h3><h4 id="设置Wifi-Proxy-1"><a href="#设置Wifi-Proxy-1" class="headerlink" title="设置Wifi Proxy"></a>设置Wifi Proxy</h4><p>打开Charles，点击 <mark class="label primary">Help - SSL Proxying - Install Charles Root Certificate on a Mobile device or Remote Broswer</mark>:<br><img data-src="https://i.loli.net/2021/07/07/GLb9lJ2gQIWaUY1.png" alt="Charles Proxy"><span class="image-caption">Charles Proxy</span><br>之后会打开一个弹窗，上边是你的本地IP和Charles默认端口，先别关掉它：<br><img data-src="https://i.loli.net/2021/07/07/98VG6rC3EPwIx4n.png" alt="Proxy Detail"><span class="image-caption">Proxy Detail</span><br>先确保模拟器网络连接正常，之后去 <mark class="label primary">Settings-Network &amp; internet-WiFi</mark>，可以看到连接到了<strong>AndroidWifi</strong>，然后按照下图设置此Wifi的Proxy，点击Wifi后的设置按钮，点击铅笔图标，将Proxy设置为Manual，Hostname和Port就是上边弹窗里对应的值：<br><img data-src="https://i.loli.net/2021/07/07/Z159rMfjOetoEuS.png" alt="设置Wifi Proxy"><span class="image-caption">设置Wifi Proxy</span></p>
<h4 id="下载Charles-CA-4"><a href="#下载Charles-CA-4" class="headerlink" title="下载Charles CA"></a>下载Charles CA</h4><p>打开模拟器的Chrome浏览器，输入 <strong>chls.pro/ssl</strong>，之后弹出下载Charles CA的提示框，选择下载：<br><img data-src="https://i.loli.net/2021/07/07/Pfxc64zlbBUF97y.png" width="230" height="500" alt="下载CA"><span class="image-caption">下载CA</span><br>如果没有网络，尝试冷启动模拟器，看模拟器下拉框中有没有关于Wifi的限制连接提示，点击之后选择仍要连接，应该就有网了，之后再去浏览器下载CA：<br><img data-src="https://i.loli.net/2021/07/07/7M98LEFyqQSitXa.png" width="650" height="550" alt="连接网络"><span class="image-caption">连接网络</span><br>如果这样还是下载不了，那么打开Charles，点击点击 <mark class="label primary">Help - SSL Proxying - Save Charles Root Certificate</mark> 将Charles CA下载到本地:<br><img data-src="https://i.loli.net/2021/07/07/i2JhtF56X9kWI8L.png" alt="Save Charles Root Certificate"><span class="image-caption">Save Charles Root Certificate</span><br>然后手动将文件拖到模拟器，也是一样的。</p>
<h4 id="安装Charles-CA-2"><a href="#安装Charles-CA-2" class="headerlink" title="安装Charles CA"></a>安装Charles CA</h4><p>进入模拟器<mark class="label primary">Settings - Security - Encryption&amp;credentials</mark>。</p>
<blockquote>
<p>Android 11:</p>
</blockquote>
<p>选择Install a certificate，点击CA certificate，选择Install anyway，最后点击下载的Charles CA文件，就可以安装成功了：<br><img data-src="https://i.loli.net/2021/07/07/JcGMQ2ysOYE1WlH.png" alt="Android11安装Charles CA"><span class="image-caption">Android11安装Charles CA</span></p>
<blockquote>
<p>其它版本</p>
</blockquote>
<p>选择 Install from SD card，你就会看到上面下载的Chares CA文件，点击进行安装，名字可以随便写，Credential Use选择VPN and apps：<br><img data-src="https://i.loli.net/2021/07/07/Hpjz6bJVlr8L4eT.png" alt="安装Charles CA"><span class="image-caption">安装Charles CA</span></p>
<p>安装完成之后去<mark class="label primary">Encryption&amp;credentials-User credentials</mark> 和 <mark class="label primary">Encryption&amp;credentials-Trusted credentials</mark>应该都可以看到安装成功的Charles CA文件：<br><img data-src="https://i.loli.net/2021/07/07/5hSwycPTOI1rjqN.png" width="600" height="550" alt="Charles CA"><span class="image-caption">Charles CA</span></p>
<h4 id="信任Charles-CA-4"><a href="#信任Charles-CA-4" class="headerlink" title="信任Charles CA"></a>信任Charles CA</h4><p>这里是个大坑，很重要，根据 <a href="https://www.charlesproxy.com/documentation/using-charles/ssl-certificates/">Charles官方文档</a> 的Android部分所述 ，由于Charles证书是用户安装的，而Android 7.0以后，系统默认不信任用户安装的证书。所以即使我们安装了Charles证书，也并不能成功进行抓包，此时有两种解决办法：</p>
<ul>
<li>办法一：使用官网做法，在你要抓包的应用程序源代码中添加配置文件，使该应用程序信任用户安装的Charles证书。</li>
<li>办法二：将Charles证书的属性更改为系统安装的证书，从根本上解决问题，但是网上能找到的成功案例不多，不过适用于无法改动应用源代码的同学。</li>
</ul>
<p>这里我用的办法一，添加配置文件，按照官网说的做就行，在代码库的 <strong>res/xml/</strong> 路径添加network_security_config.xml文件，内容如下：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;network-security-config&gt; 
  &lt;debug-overrides&gt; 
    &lt;trust-anchors&gt; 
      &lt;!-- Trust user added CAs while debuggable only --&gt;
      &lt;certificates src="user" /&gt; 
    &lt;/trust-anchors&gt; 
  &lt;/debug-overrides&gt; 
&lt;/network-security-config&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>之后在Manifest.xml里添加下边的reference就行:</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">&lt;?xml version="1.0" encoding="utf-8"?&gt;
&lt;manifest ... &gt;
    &lt;application android:networkSecurityConfig="@xml/network_security_config" ... &gt;
        ...
    &lt;/application&gt;
&lt;/manifest&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>这里只配置了应用的debug版本，作改动后重新build代码，之后将生成的debug版本.apk文件安装到模拟器，这时信任Charles CA就设置成功了。</p>
<h4 id="抓取Emulator请求"><a href="#抓取Emulator请求" class="headerlink" title="抓取Emulator请求"></a>抓取Emulator请求</h4><p>打开Charles, 然后<strong>关闭</strong> <mark class="label primary">Proxy-macOS Proxy</mark>设置，其它内容按照上文iOS部分的抓取Simulator请求做就行了，这里不再赘述。</p>
<h3 id="Android真机"><a href="#Android真机" class="headerlink" title="Android真机"></a>Android真机</h3><p>WIP</p>
<h2 id="利用Breakpoints修改并发送请求"><a href="#利用Breakpoints修改并发送请求" class="headerlink" title="利用Breakpoints修改并发送请求"></a>利用Breakpoints修改并发送请求</h2><h3 id="设置Breakpoints"><a href="#设置Breakpoints" class="headerlink" title="设置Breakpoints"></a>设置Breakpoints</h3><p>通过设置Breakpoints，我们可以修改请求的Request和Response, 鼠标定位到你想要修改的请求，之后右键勾选BreakPints即可，之后再次进行相同请求时，就会出现编辑请求的页面，可以修改Request和Response：<br><img data-src="https://i.loli.net/2021/07/07/chOZeBxnHwtNSyM.png" alt="设置Breakpoints"><span class="image-caption">设置Breakpoints</span></p>
<h3 id="管理Breakpoints"><a href="#管理Breakpoints" class="headerlink" title="管理Breakpoints"></a>管理Breakpoints</h3><p>打开<mark class="label primary">Proxy-Breakpoints Settings</mark>，可以打开管理Breakpoints的弹窗，里面包括已经设置Breakpoints的url，以及Breakpoints的类型：Request和Response<br><img data-src="https://i.loli.net/2021/07/07/3G1OlPSApsaek2b.png" alt="Breakpoints Settings"><span class="image-caption">Breakpoints Settings</span><br>如果只想修改请求的Request或Response，只需要勾选对应的选项即可：<br><img data-src="https://i.loli.net/2021/07/07/pzOy7Cq2HEDlXrT.png" alt="设置具体抓取类型"><span class="image-caption">设置具体抓取类型</span></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>Charles</tag>
      </tags>
  </entry>
  <entry>
    <title>网站评论回家了</title>
    <url>/comments-comeback/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/05/19/5qCbYiSNDszno3y.png">

<p>这张题图很能表示我现在激动的心情<span class="emoji" alias="laughing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p>
<h2 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h2><div class="note info"><p>博客建立伊始，也就是2017年那个夏天，我就开始用livere评论系统。<br>后来出现过两次评论消失的情况，第一次是17/9，当时是因为改了博客的url，所以也就丢失了。<br>第二次不知道是啥时候，经常出现博客评论莫名消失的情况，所以只能在管理后台看到评论：</p>
</div>

<img data-src="https://i.loli.net/2020/05/19/FO4KepHxIStEDLn.png">

<p>开始的时候觉得无所谓，后来时间长了，感觉评论还是挺重要的，否则老感觉博客没人访问一样冷冷清清<span class="emoji" alias="pensive" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f614.png?v8">😔</span>。<br>然后就开始搜解决办法，但好像没有遇到跟我相似情况的小伙伴，再加上工作忙(lan)慢慢这个事也就放下了。直到今天，我终于找回了我的评论。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>多亏了<a href="https://vikifish.cn/2020/04/18/Hexo-theme-nexT-livere-comments-bug/#more">这篇博客</a>给出的解决办法：</p>
<div class="note primary"><p>其实第二次评论消失的原因是livere插件代码中的refer值设置问题。<br>refer是个参数，评论的添加与获取都是会带上这个参数的。而默认的refer值是根据当前页面的url来获取的，如果设置的不对，就会导致评论页面地址和网页实际地址不符合，因此文章的评论无法在页面显示。<br>所以改动插件代码(虽然以前的refer设置我也看不懂是个啥)：</p>
</div>

<img data-src="https://i.loli.net/2020/05/19/sdVryhuHgqZnl15.png">

<p>我的评论就回来了！！！简直就是活生生的博客历史啊有没有，可以追溯到17年：<br><img data-src="https://i.loli.net/2020/05/19/SrmgpshDyx3n7UV.png"></p>
<p>但是第一次因为url改动而消失的评论(2017.9.11之前的)真的回不来了：<br><img data-src="https://i.loli.net/2020/05/19/KCegVLdTGMYb7pO.png"></p>
<p>所以，欢迎大家的热情评论呀～撒花花🎉🎉🎉</p>
<h2 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h2><p>突然发现livere不支持微信和QQ登录了，给官网发了消息在等回复。希望可以支持，否则就要考虑换个评论系统了，比如Valine啥的。<br>之前使用DaoVoice可以在线交流，很方便，但之前更新博客的时候不知道为毛一加上它，博客就不能显示，还在研究。。。</p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>评论系统</tag>
      </tags>
  </entry>
  <entry>
    <title>Cursor初体验</title>
    <url>/cursor-first-experience/</url>
    <content><![CDATA[<p><img data-src="https://s2.loli.net/2025/06/24/xwOI9LBYG3dghrT.png"></p>
<div class="note default"><p>最近公司在推 <strong><a href="https://www.cursor.com/">Cursor</a></strong> AI代码编辑器，全员都在用，不得不说，目前这种和AI共创的模式确实是行业趋势，之前各种 TDD/BDD/DDD 现在也都被 <strong>PDD 取代(拼多多即视感，但全称是Prompt Driven Development)</strong>，达到 <strong>‘AI干杂活，人来思考’</strong> 的效果。所以我觉得科学技术是第二生产力，人类的创造力才是第一生产力。</p>
</div>

<p>其实Cursor流行好久了，但我在技术方面一直处在潮流后沿，也没有机会尝试，正好我也想升级博客，调整一下浏览效果，就用Cursor试试(一些公器私用)，然后打开了新世界的大门。</p>
<h2 id="服务升级"><a href="#服务升级" class="headerlink" title="服务升级"></a>服务升级</h2><h3 id="Hexo服务"><a href="#Hexo服务" class="headerlink" title="Hexo服务"></a>Hexo服务</h3><p>首先是升级Hexo服务到最新版本，直接执行：</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx npm-check-updates <span class="token parameter variable">-u</span> <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>将Hexo version从 <mark class="label info">5.4.0</mark> 升级到最新的 <mark class="label info">7.3.0</mark>。</p>
<h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><h4 id="手动升级"><a href="#手动升级" class="headerlink" title="手动升级"></a>手动升级</h4><p>然后是Next主题升级，当前版本是 <mark class="label info">8.5.0</mark>，需要更新到官网最新的 <mark class="label info">8.23.1</mark>。</p>
<p>之前每次更新我都是把最新的版本下载到本地，在Hexo的 <mark class="label primary">_config.yml</mark> 中把主题设置成最新版，然后对比旧版本的配置文件手动改新的配置，在本地预览博客，让它一点点变成线上的样子，之后再加新功能和优化，但这样做是很耗时间和精力的。</p>
<h4 id="git-submodule"><a href="#git-submodule" class="headerlink" title="git submodule"></a>git submodule</h4><p>所以这次我想尝试新的方式。刚开始我问了<strong>ChatGPT</strong>，它说可以把主题文件夹作为一个 <mark class="label primary">git submodule</mark> 放在博客代码库里，这样以后升级就不用自己再单独下载最新版本手动对比着看，可以直接在submodule里拉取远程代码，自动code diff，改起来会方便一些。</p>
<p>但这样的话，就得同时控制两个代码库。每次改动后在submodule提交完了，主代码库还得再提交一次，还有把submodule的代码推到远程的安(diu)全(ren)风险。除了自动diff以外，还是得自己挨个看对比，也挺累的。</p>
<h4 id="Cursor"><a href="#Cursor" class="headerlink" title="Cursor"></a>Cursor</h4><p>这个时候我想到了Cursor，既然它这么强，帮我自动对比新旧主题版本，同步配置应该只是小case吧。然后我就把代码库移到了Cursor里，说出自己的需求，开始了不断的拉扯：<br><img data-src="https://s2.loli.net/2025/06/24/EJu8OVcDXedi27m.png"></p>
<p>首先，它帮我完成了这几件事：</p>
<p><span id="inline-toc">1.</span> <strong>自动识别新旧主题版本的配置差异，同步更新了所有文件。</strong></p>
<p><span id="inline-toc">2.</span> <strong>将主题文件夹从submodule转换为普通文件夹</strong>。简化版本管理，避免控制2个代码库的复杂性，消除了向上游仓库误推送的风险。</p>
<p><span id="inline-toc">3.</span> <strong>解决 <mark class="label info">hexo s</mark> 的报错</strong></p>
<p>把主题换成新版后，开启本地hexo server出现了一堆依赖和兼容性错误，无法正常加载，它帮我分析错误然后解决了报错。</p>
<p><span id="inline-toc">4.</span> <strong>调整配置，将本地博客预览效果变得和线上一致。</strong></p>
<p>其实在第一步它已经帮我自动识别并同步改动了所有的配置，按理说本地预览应该已经和线上一样了才对，但它好像只能识别主题 <mark class="label primary">_config.yml</mark> 里的配置，有很多自定义的代码配置并没有识别到。而且因为兼容性，同样的配置在最新的主题版本里并不能生效，所以又是几番拉扯，才完成了全部更新，本地预览的博客效果终于和线上一致了。</p>
<hr>
<p>到这里，我已经可以感受到 Cursor 的强大了，以往需要1天时间才能完成的服务升级，在它的帮助下我只用了不到1小时，所以又接着用它做一些我想了很久的主题优化。</p>
<h2 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h2><h3 id="文章主体浏览效果优化"><a href="#文章主体浏览效果优化" class="headerlink" title="文章主体浏览效果优化"></a>文章主体浏览效果优化</h3><p>这是当前线上博客的文章主体部分浏览效果：<br><img data-src="https://s2.loli.net/2025/06/25/yjJ4xXsCHzcEZ12.png"><br>我一直想把它优化成类似 <a href="https://medium.com/">Medium</a> 网站的文章浏览效果：<br><img data-src="https://s2.loli.net/2025/06/25/N8hE29ikAnoOUxt.png"></p>
<p>其实两者之间的区别乍一看并不大，都是图片下面加上文章段落，然后再居中展示，但Medium的展示风格看起来就是更极简，更高级。</p>
<p>所以我给Cursor提的需求是： <em>文章主体部分仿照 Medium 网站的风格做优化，博客其它的部分还是使用 Next_Mist 主题的样式。</em></p>
<p>实际上这个需求相当于什么也没说<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，主体部分怎么定义？其它的部分又是哪些？颜色？字体？样式？其实我也不知道这些具体要改成什么样，只是希望能和Medium风格类似，看起来更简约高级就可以。我都不清楚，AI就更不清楚了，所以只能按照我给的方向不断调整方案。</p>
<p>然后我和AI开始不停的对线，就像一个任性的甲方，盯着乙方不断改版，慢慢接近我想要的样子(然后再回退到第一版hhh)。中间好多次博客都被它改的样式全乱了，弄的我很崩溃(AI: 其实我也挺崩溃的)，好在最后终于实现了我想要的感觉：</p>
<p><img data-src="https://s2.loli.net/2025/06/25/dULEkXIfi7YVu4S.png"></p>
<p>文章主体收窄，字体变薄，图片也变成了圆角，加上了阴影和悬浮的效果，和页面做了自适应。整体看起来确实优雅高级多了，标签的展示也做了强化：</p>
<p><img data-src="https://s2.loli.net/2025/06/25/NHEtWj175FwkBcK.png" alt="Before"><span class="image-caption">Before</span><br><img data-src="https://s2.loli.net/2025/06/25/3pshRg758IZFoGq.png" alt="After"><span class="image-caption">After</span></p>
<p>文章主题部分的优化到此结束。不过目前还有一个图片fancybox的问题没有解决，点击图片查看有时候会缩成一个小点，切换上下图片也是这样，但是点一下右上角的缩略图按钮(9个点)就可以正常看。拉扯太多累了，以后再说(又不是不能用)。</p>
<h3 id="Not-By-AI-徽章"><a href="#Not-By-AI-徽章" class="headerlink" title="Not By AI 徽章"></a>Not By AI 徽章</h3><p><a href="https://notbyai.fyi/cn/">Not By AI</a> 是我之前看到的一个用来标记非AI生成内容的徽章，官网的介绍是：</p>
<blockquote>
<p>人工智能（AI）是靠前人的创作内容训练而成。倘若人类就此全面仰赖AI并且放弃创作，世界各地的产出内容恐将一成不变并停滞。Not By AI是为了鼓励人们持续产出原创内容，且让这些原创内容能被注目而产生。而最终目的是确保人类文明得以持续产出创作与进步。</p>
</blockquote>
<p>这样的初心很触动我，在AI越来越先进的当代背景下，人类自己创作的内容也变得更加难能可贵了。之前我看到有博主在自己的文章前面，设置了AI生成的内容总结，但我并不想配置，也许我希望每个看到我博客的人，都可以不用那么的「赶时间」，看完之后也能有自己的总结和想法。</p>
<p>因为我的博客内容符合 Not By AI 的90%规定: <em>如果你估计自己的内容有90%是人类所创作的，你便能将 Not By AI 贴纸加到你的网站、部落格、艺术品、视频、论文、书、播客，或其他型态的非商业用途的作品。</em> 所以让Cursor帮我将这个徽章加到了侧边栏，也希望我可以一直坚持自己创作内容(反正也不是什么正经内容🐶)。</p>
<h3 id="音乐播放器"><a href="#音乐播放器" class="headerlink" title="音乐播放器"></a>音乐播放器</h3><div class="note info"><p>之前博客的侧边栏只有一个网易云音乐的外链，而且播放时只要切换页面，音乐就会被重置。所以我让 Cursor 帮我做了一个音乐播放器，放了一个网易云音乐的歌单(在手机浏览器可能会打不开)，它目前实现的功能是：</p>
</div>

<p><span id="inline-toc">1.</span> 默认最小化放在页面左下角，点击可以展开<br><span id="inline-toc">2.</span> 桌面端：在音乐图标上右键点击即可开启/关闭旋转<br><span id="inline-toc">3.</span> 手机端：长按音乐图标1秒即可开启/关闭旋转<br><span id="inline-toc">4.</span> 切换页面音乐会继续播放，不会被重置<br><span id="inline-toc">5.</span> 旋转状态会自动保存，下次访问页面时会恢复</p>
<p>其实本来是想实现音乐播放时自动旋转的，为了这个和 Cursor 拉扯了好久，但由于iframe的限制并不能实现，就只能实现手动打开了。</p>
<h3 id="过滤-livere-广告"><a href="#过滤-livere-广告" class="headerlink" title="过滤 livere 广告"></a>过滤 livere 广告</h3><p>之前livere评论区总是会出现广告，虽然不反对人家恰饭，但这些广告还是很影响博客观感的，让 Cursor 帮我在前端过滤掉了广告，看起来就清爽多了(应该也不影响人家恰饭吧)<br><img data-src="https://s2.loli.net/2025/06/25/rPOhcKXdyMjQ9e6.png" alt="Before"><span class="image-caption">Before</span><br><img data-src="https://s2.loli.net/2025/06/25/AuMIU4eHatOk6Vm.png" alt="After"><span class="image-caption">After</span></p>
<h3 id="Algolia-搜索"><a href="#Algolia-搜索" class="headerlink" title="Algolia 搜索"></a>Algolia 搜索</h3><p>之前博客启用的是本地搜索，经常搜不到内容，现在换成了 Algolia 搜索，就能搜到了，还有统一的后台管理，只不过每次部署之前都得用 <mark class="label info">hexo algolia</mark> 推送index，但是问题不大 ：<br><img data-src="https://s2.loli.net/2025/06/25/8sN7IDVrcyEAdiP.png" alt="Before"><span class="image-caption">Before</span><br><img data-src="https://s2.loli.net/2025/06/25/TSzfp1QgYDMnoGt.png" alt="After"><span class="image-caption">After</span></p>
<h3 id="博客翻译"><a href="#博客翻译" class="headerlink" title="博客翻译"></a>博客翻译</h3><p>右上角加了一个谷歌翻译的跳转链接，直接翻译当前页面。加这个是因为有外国友人看到了我的博客还说很治愈，难为他还能从中文得到治愈，那翻译之后可能会更治愈吧(玄学)。刚开始让Cursor帮我调用谷歌翻译API，直接在博客翻译，但还是没有谷歌翻译好用，不破坏页面原本的样式，而且hover还能显示原文，挺好用的，就不折腾了：</p>
<p><img data-src="https://s2.loli.net/2025/07/31/o9nEFbkLlM6pN14.png" alt="谷歌翻译"><span class="image-caption">谷歌翻译</span></p>
<p>其实现在浏览器也有很多翻译插件，所以加这个更多是想表现自己能跟国际接轨，格局拉满。</p>
<h3 id="Darkmode"><a href="#Darkmode" class="headerlink" title="Darkmode"></a>Darkmode</h3><p>Next主题本身就有Darkmode，是跟随系统的，但打开之后发现文字啥也看不见，可能是做了主题优化，所以又用Cursor改了一下：</p>
<p><img data-src="https://s2.loli.net/2025/07/31/sBevu2ha4MmgdIU.png" alt="Before"><span class="image-caption">Before</span><br><img data-src="https://s2.loli.net/2025/07/31/NDBjgkanURvl83d.png" alt="After"><span class="image-caption">After</span></p>
<p>除了优化，也给页面导航栏加上了一个自定义按钮，可以自由切换日间(太阳图标)和夜间模式(月亮图标)。优先级是默认会跟随系统，但也可以切换模式，不过切换之后就不会跟着系统变了，也很合理。</p>
<h3 id="探索版本新功能"><a href="#探索版本新功能" class="headerlink" title="探索版本新功能"></a>探索版本新功能</h3><p>到这里，我想做的或者想优化的功能都已经完成了，但是好像忘了一件重要的事情，既然我已经升级到了Hexo&amp;Next的最新版本，新版本的功能我还一个都没有看呢！其实在升级的时候也粗粗看了下新的版本配置，好像没有什么有意思的新功能，所以让 Cursor 帮我看了看：</p>
<p><img data-src="https://s2.loli.net/2025/06/26/NHopDjPikv7seTx.png" alt="请听题"><span class="image-caption">请听题</span></p>
<p>结果它检测到的配置和功能我基本都已经用上了，其它的也不感兴趣。至于更新频率和内容，Hexo更新频率不高，上一次发版已经是去年7月份，也没有大的功能变更；Next会频繁一些，不过也多数是一些优化，所以它的建议：</p>
<p><img data-src="https://s2.loli.net/2025/06/26/981MRLpUcTPeHiW.png" alt="好着呢别整了"><span class="image-caption">好着呢别整了</span></p>
<div class="note primary"><p>所以一段时间内我就不再更新了。但是！关于「频繁更新会引入不必要的风险」，别说频繁更新了，我上次更新已经是4年前了，这么不频繁的更新都出现一大推兼容性问题：Hexo自己的兼容问题、Next自己的兼容问题、Hexo&amp;Next最新版本的兼容问题，光让Cursor帮我解决人都快麻了，更别说自己来，咱就是说以后发版能不能多测测，稳定了再发啊。</p>
</div>

<p>不过这俩工具都出了这么久了，还都是轻量级简约风格，确实也不能再有多少新功能了，不然花里胡哨的反而影响观感，对已有功能的优化才是他们的主要方向。</p>
<h3 id="代码整体优化"><a href="#代码整体优化" class="headerlink" title="代码整体优化"></a>代码整体优化</h3><p>博客的升级和功能优化都已经完成了，还想再整体看看有什么需要改进的点。</p>
<p>让Cursor帮我扫描了下代码结构和安全风险，做一些必要的改动，比如代码结构优化、图片懒加载、文件压缩等等，让博客更稳定。现在博客的加载速度比之前快了不少，代码也更清爽干净了，棒棒哒～</p>
<h3 id="Github-Actions自动部署"><a href="#Github-Actions自动部署" class="headerlink" title="Github Actions自动部署"></a>Github Actions自动部署</h3><p>说道安全性，因为博客和主题的配置文件都包含了很多密钥信息，所以这两个文件我一直都是放在 <mark class="label info">.gitignore</mark> 里，自己保存的。</p>
<p>我想了一个新的方案：<em>创建 GitHub Actions工作流，把这些密钥保存在 GitHub Secrets，由 GitHub Actions自动执行完整的部署流程：hexo clean → hexo generate → hexo algolia → hexo deploy</em></p>
<p>但告诉Cursor这个想法后，它给出了一堆设置步骤、脚本、配置文件，太复杂了，甚至生成了一个自动部署方案的总结文档给我，看得我头都大了，还是算了吧。而且对于我这种上一篇博客还是去年11月发的博主，好像也不是很有必要(地狱笑话)。</p>
<h3 id="浏览器自动加载预览"><a href="#浏览器自动加载预览" class="headerlink" title="浏览器自动加载预览"></a>浏览器自动加载预览</h3><p>在本地写作时，我需要同时打开.md文件和浏览器，这样可以预览文章展示效果。之前都是保存md之后去手动刷新浏览器看效果，一来一去也挺费时费力的。不要问我是怎么忍的，我只是过惯了苦日子(苦涩)。</p>
<p>所以想实现source文件保存之后，浏览器可以自动刷新，实现实时预览。和Cursor拉扯了好久实现了一个自定义的 <mark class="label info">live reload</mark> 功能，但后来它告诉我hexo本来就有插件 <mark class="label info">hexo-server-live</mark> 可以做到这件事(那我之前吃的苦算什么？！还做什么自定义插件啊！)，不过试用了一下还是自定义的好用，效果是这样的：</p>
<p><img data-src="https://s2.loli.net/2025/06/26/cdZHoanDVbqJGkw.gif"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><div class="note info"><p>Cursor确实强大，但要会用。怎么给它提示很重要，一旦跑偏就很难拉回来，所以还是需要自己思考，把控方向。这也许就是他们说的 <strong>PDD</strong> 吧。</p>
</div>]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>AI</tag>
        <tag>Cursor</tag>
        <tag>not by AI</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓模拟器快速冷启动</title>
    <url>/emulator-cold-boot/</url>
    <content><![CDATA[<div class="note info"><p>问题</p>
</div>

<p>博主最近搬砖，发现安卓模拟器有一些小bug，最常见的是App打不开，得冷启动模拟器后，卸载App重新安装才可以。由于项目暂时用不了真机，只能在模拟器测试，所以经常遇到这个问题，每次都得重复这个步骤：<mark class="label primary">冷启动模拟器-&gt;卸载App-&gt;安装App</mark>。</p>
<div class="note info"><p>解决</p>
</div>

<p>首先冷启动模拟器：</p>
<p><img data-src="https://i.loli.net/2021/08/03/rTQ1wObeRgiEqya.png" alt="Cold Boot"><span class="image-caption">Cold Boot</span><br>卸载测试App，之后点击模拟器右侧菜单栏 <strong>…</strong> 按钮进入高级设置，然后进入Snapshots选项，点击TAKE SNAPSHOT：</p>
<p><img data-src="https://i.loli.net/2021/08/03/JYDru2NTiqeoG8Q.png" alt="TAKE SNAPSHOT"><span class="image-caption">TAKE SNAPSHOT</span><br>之后可以看到新的snapshot，这里我命名为quickboot：</p>
<p><img data-src="https://i.loli.net/2021/08/03/ZEwqUF9OSnTQaI6.png" alt="命名snapshot"><span class="image-caption">命名snapshot</span><br>打开AVD Manager页面，编辑刚才的模拟器，在高级设置中选择通过snapshot启动模拟器，点击finish：</p>
<p><img data-src="https://i.loli.net/2021/08/03/dl2a1SJIHDR6knA.png" alt="编辑设置"><span class="image-caption">编辑设置</span><br>最后再打开编辑页面检查一遍，确保设置正确，我自己设置的时候，发现这里要选择两次才可以，感觉又是AVD Manager的一个bug。<br>设置完成后，以后再打开模拟器测试，就是一个干净的测试环境了，只需要再安装测试App就可以了，再也不用经常手动冷启动了。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>emulator</tag>
        <tag>coldBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>王者荣耀的故事</title>
    <url>/game-master-one-week/</url>
    <content><![CDATA[<p><img data-src="https://s2.loli.net/2025/07/27/LwmcbKB7dRpAjaz.png"></p>
<h2 id="一些背景"><a href="#一些背景" class="headerlink" title="一些背景"></a>一些背景</h2><p><strong>王者荣耀</strong> 是国内的一款推塔游戏，可以说是国民级手游了，大学的时候我就经常和室友一起组队开黑。我玩王者只玩排位赛，也只会玩辅助位，本命英雄是庄周，因为角色设定和我本人十分契合，而且又肉跑的又快。</p>
<p>工作之后就很少玩了，之前找对象的时候和 <a href="https://jmyblog.top/looking-for-the-one-11-15/#No-11-%E5%AE%9D%E5%AE%9D">男嘉宾们</a> 开黑过几次，后来觉得没啥意思，就弃游了。</p>
<p>其实我对玩游戏这件事没什么研究和兴趣，平时会偶尔和强哥一起玩Switch，比如马里奥赛车、星之卡比、胡闹厨房，还有之前比较火的双人成行。</p>
<h2 id="始怂恿者"><a href="#始怂恿者" class="headerlink" title="始怂恿者"></a>始怂恿者</h2><p>前段时间强哥说想找一款可以两个人一起玩的手游，丰富一下活动，想到了王者荣耀，我也没什么别的游戏推荐，于是双双下载App，打开之后收到一堆回归的礼物，段位也只是 <mark class="label default">白银</mark>，看历史上一次玩已经是两年前了。</p>
<p>一起组队排位打了几局连胜，段位升到了 <mark class="label info">黄金</mark>，但还是觉得没什么意思。到了第二周再打开App，发现开始了新赛季，段位回退到 <mark class="label default">白银</mark>，一起打了几局又升到 <mark class="label info">黄金</mark>。</p>
<p>过了几天，强哥买到了梦寐以求的5090显卡和一堆配件，装好之后开始沉迷Steam，再也不提手游的事了(呵，男人)。</p>
<h2 id="挑战开始"><a href="#挑战开始" class="headerlink" title="挑战开始"></a>挑战开始</h2><p>王者的段位排行是：<strong>青铜</strong>(III/II/I) -&gt; <strong>白银</strong>(III/II/I) -&gt; <strong>黄金</strong>(IV/III/II/I) -&gt; <strong>铂金</strong>(IV/III/II/I) -&gt; <strong>钻石</strong>(V/IV/III/II/I) -&gt; <strong>星耀</strong>(V/IV/III/II/I) -&gt; <strong>王者</strong></p>
<blockquote>
<p>青铜和白银各3级，每级3⭐️；黄金和铂金各4级，每级4⭐️；钻石和星耀各5级，每级5⭐️。王者段位是最高段位，但会根据⭐️数分不同的称号，比如0-9⭐️叫最强王者，10-19⭐️叫非凡王者等等，最高是传奇王者(&gt;=100⭐️)。一般情况下1局游戏胜利+1⭐️，失败-1⭐️，每局游戏15mins-1h不等。</p>
</blockquote>
<p>从前王者段位只有到了50⭐️才会得到一个荣耀王者的称号，当时我就吐槽0-50跨度这么大也太难了，现在这样细分就能增加点玩的动力，不过我觉得还是「最强王者」最好听，毕竟是最强嘛，叫个「新手王者」加点羞辱可能会让人更有动力换个称号(不建议采纳)。</p>
<p>看着当前 <mark class="label info">黄金II</mark> 的段位，想着反正都开始了，那就尝试 <strong>用庄周单排到王者</strong> 吧，也体验一下新版本的游戏。</p>
<p>然后开始每天打排位赛，回归玩家好像会有一些加成，而且金牌评分会额外+1⭐️，顶级评分会额外+2⭐️，所以胜一局最多会直接+3⭐️，就算是败局，表现优异也不会减⭐️，有时甚至会+1⭐️，这些都是从前没有的规则：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/BQKUInsq3dpOz2D.png" alt="一些战绩"><span class="image-caption">一些战绩</span></p>
<p>本来我只用庄周，但从钻石段位开始有禁用英雄的环节，到了星耀庄周更容易被禁，所以偶尔会用蔡文姬和孙膑，整体的表现都不错：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/gOGN8aUfemxBKyr.jpg" alt="庄周评分"><span class="image-caption">庄周评分</span></p>
<h2 id="最强王者"><a href="#最强王者" class="headerlink" title="最强王者"></a>最强王者</h2><p>刚开始的时候我一直连胜，几乎每天都能上升一个段位，很快就升到了 <mark class="label info">星耀II</mark>。但从这时开始，我明显感觉到自己被游戏做局了，经常匹配到离谱的队友，送人头的，不参团的，比比皆是。玩辅助本来就要靠阵容和团队取胜，所以我不是连跪，就是输一局赢一局：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/8R9cSBriTFAf54j.png" alt="好好好"><span class="image-caption">好好好</span></p>
<p>就这样，我的段位在 <mark class="label info">星耀II</mark> 和 <mark class="label info">星耀I</mark> 之间来回游移，本来从周一开始打，周五已经到了 <mark class="label info">星耀II</mark>，想着周末就能打上 <mark class="label success">王者</mark>， 但被调戏了2天也没能实现：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/CfismBx96teDEhq.jpg" alt="可恶！"><span class="image-caption">可恶！</span></p>
<p>不过这样的成就已经很惊人了，到了第二天，也不知道是不是游戏做局结束了，最终还是以一局顶级游走连+3⭐️升级 <mark class="label success">王者</mark>🎉，四舍五入也算是一周时间单排上王者吧：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/kgmdSDosWH1j4Y9.png" alt="顶级游走"><span class="image-caption">顶级游走</span></p>
<div class="note info"><p>虽然打到了王者段位，但我还是觉得这个游戏玩久了很无趣。首先，不同段位的队友游戏操作和意识差距并不大，甚至给我一种一直在和同一批人打游戏的感觉，而且长时间玩很容易被它的匹配机制做局，非常影响游戏体验。所以这次之后，我还是会慢慢褪去热度，然后卸载App继续弃游(它值得)。</p>
</div>

<h2 id="关于庄周"><a href="#关于庄周" class="headerlink" title="关于庄周"></a>关于庄周</h2><h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><p>庄周是王者荣耀2015年内测的时候发布的第一批英雄，它的原型是战国时期的哲学家和道家学派代表人物：<strong>庄子</strong>，可以说是我的精神偶像。</p>
<p>他崇尚生命自由，认为万物平等，讲究人与自然的和谐统一。代表作有《逍遥游》、《齐物论》等，著作收录在《庄子》一书中，他的作品充满想象里力，极具浪漫主义风格。</p>
<h3 id="技能"><a href="#技能" class="headerlink" title="技能"></a>技能</h3><p>在游戏里，庄周的技能结合了庄子「崇尚自由」的特质和《齐物论》里「庄周梦蝶」的典故：</p>
<blockquote>
<p>每6秒进入一次「自然梦境」解控并免疫、减伤回血、加移速，持续两秒。<br>1技能「化蝶」也可以给自己解控、对敌人造成减速和伤害，持续两秒。<br>2技能「蝴蝶效应」可以伤害敌人、增加自己和队友的移速，持续5秒，可以叠加5层伤害。每次「自然梦境」结束后，也会自动释放一次2技能。<br>3技能(大招)「天人合一」可以解除自己和一定范围内队友所受的控制，免控加护盾，持续1.5秒。</p>
</blockquote>
<p>这种不停的解控和加移速的技能，使庄周成为一个让人「毫无攻击欲望」的英雄(骄傲)。</p>
<h3 id="皮肤"><a href="#皮肤" class="headerlink" title="皮肤"></a>皮肤</h3><h4 id="逍遥幻梦"><a href="#逍遥幻梦" class="headerlink" title="逍遥幻梦"></a>逍遥幻梦</h4><p>庄周的默认皮肤「逍遥幻梦」结合了「庄周梦蝶」和庄子《逍遥游》里「北冥有鱼，其名为鲲」的传说，是一个坐在鱼(琨)上梦蝶打瞌睡的庄周，很贴合英雄设定，是我比较喜欢的。因为坐骑是鱼，所以游戏里的玩家都把庄周叫鱼。头发颜色也说明精神状态很好了：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/1V8j6FfANQHdiZT.gif"></p>
<p>对应的台词很欠打，也有一些来自庄子作品里的名句：</p>
<blockquote>
<p>蝴蝶是我，我就是蝴蝶<br>（呼噜声）呃~<br>呃～梦到了传奇的世界，还和奔波儿灞打了声招呼<br>美妙的长眠，值得高歌一曲，啦啦啦啦啦～<br>最近脑洞太大，得补补<br>一群人在人家梦里打来打去，有意思吗？<br>天地与我并生，万物与我为一<br>梦里花落知多少<br>美梦成真<br>醒醒吧，少年<br>我的坐骑可是纯天然无污染<br>呃~该醒醒了<br>这就是蝴蝶效应</p>
</blockquote>
<h4 id="锦麟游梦"><a href="#锦麟游梦" class="headerlink" title="锦麟游梦"></a>锦麟游梦</h4><p>这个赛季正巧出了一个新皮肤，叫「锦麟游梦」，感觉「锦鲤游梦」更适合，参加活动可以免费领，但我刚开始一直猛冲排位没看到活动，结果错过了时间没拿到，真是可惜了：</p>
<p><img data-src="https://s2.loli.net/2025/07/28/73qt19OkK4FXSbo.gif"></p>
<h4 id="云端筑梦师"><a href="#云端筑梦师" class="headerlink" title="云端筑梦师"></a>云端筑梦师</h4><p>「云端筑梦师」是我最喜欢的皮肤。它再次引用了「鲲」的传说，让庄周化身为梦境里的筑梦师，背着图纸，手提油灯，好像在指引着沉迷于梦境中的人们，置身星空与云端之上，非常梦幻。和默认皮肤相比，概念性更强，造型也更精致：</p>
<p><img data-src="https://s2.loli.net/2025/07/28/RJNI58POZ4TEhik.gif"></p>
<p>对应的台词我也很喜欢，意境拉满：</p>
<blockquote>
<p>见过云端上的幻想之城吗？<br>千年梦境，合而为一。<br>神说要有光，于是就诞生了我。<br>自以为是的真实，比无药可救的幻想，更可怕。<br>若世上还有成为废墟的心血，请以你的名字呼唤我。<br>火柴点燃的希望，有的熄灭在街头，有的显露于苍穹。<br>他们看见星星，我看见城；他们看见城，我看见的是鲲。<br>不曾看低这个世界，只是眼光有点高。<br>此处入眠……他处醒来。<br>伟大的白日梦<br>没有人能逃出我的脑洞。<br>入梦为安吧！<br>让我来替你结束现实吧。</p>
</blockquote>
<p>「云端筑梦师」是2018年出的，我当时就买了，但这次回归之后在自己的账号却没找到这个皮肤，搜了一下也有人说自己珍藏的皮肤被游戏吞了！只能等返场了，不过机会很少，可恶！</p>
<h3 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h3><p>庄周在游戏里的角色是稷下学院的一名老师，和老夫子、墨子一起被称为稷下三贤者。它是王者荣耀里唯一一个种族是「 ？」的英雄，因为整个游戏就是庄周的梦：「一群人在人家梦里打来打去，有意思吗？」，从前在游戏匹配时还可以看到确认按钮旁会钻出一些小鲲，也能证明这一点。</p>
<p><img data-src="https://s2.loli.net/2025/07/28/KLH23Id8SY9RGov.jpg" alt="角色设定"><span class="image-caption">角色设定</span></p>
<h3 id="邪门CP"><a href="#邪门CP" class="headerlink" title="邪门CP"></a>邪门CP</h3><p>这次还了解到游戏早期庄周还有一个同人CP，竟然是和扁鹊的「药鱼CP」，震惊我。。。玩这么长时间游戏竟然是在搞基，真的没想到。</p>
<p><img data-src="https://s2.loli.net/2025/07/28/RurxE4LNcWgtQFO.jpg" alt="邪门CP"><span class="image-caption">邪门CP</span></p>
<h2 id="还会再见面吗"><a href="#还会再见面吗" class="headerlink" title="还会再见面吗"></a>还会再见面吗</h2><p>因为我基本上只用这一个英雄打王者，所以熟练度很高，这次打到王者之后游走的段位升到了10段，梦境护卫的称号我也很喜欢：</p>
<p><img data-src="https://s2.loli.net/2025/07/27/zSbgyhxPHmOojf4.jpg" alt="游戏名片"><span class="image-caption">游戏名片</span></p>
<p>以后我可能还会偶尔下载App，再用庄周玩几局，而且今年是王者荣耀10周年，听说会送皮肤，也期待一下「云端筑梦师」的返场。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>好东西</title>
    <url>/hao-dong-xi/</url>
    <content><![CDATA[<p><img data-src="https://s2.loli.net/2024/11/28/UxG7NekDrXl4s92.png" alt="豆瓣好东西剧照(我觉得最好笑的场景)"><span class="image-caption">豆瓣好东西剧照(我觉得最好笑的场景)</span></p>
<p>《好东西》英文名 Her Story，是最近热映的电影，讲述了单身母亲王铁梅带着女儿王茉莉，在搬家时与邻居小叶相识，而后围绕着这三位女性展开的一系列叙事。</p>
<p>借着少有的女性题材和流传出来的一些名场面，电影迅速引起了关注和讨论，看到很多推荐的帖子，朋友圈也有人去看，有些好奇2024年，一部电影还会怎么讲关于女性的故事，所以买了票。</p>
<p>我对它的期待是对女性议题的讲述不要教条和浮夸，不强塞给观众太多的女性主义概念，但也能够引起大家的关注和思考，可以轻松一些。</p>
<p>刚开始看到电影名叫《好东西》，我有一些疑惑，既然是一部以人为主的叙事电影，那名字应该也是形容人的吧，但是用「东西」来形容人，这不是在骂人吗，那么一部女性题材电影，谁是好东西？谁不是东西？</p>
<p>这样的理解让我有些不适，害怕它是一部带有偏见的极端宣传女性主义的作品，不仅没起到让大家关注女性现状发人深省的作用，还会让人反感。</p>
<p>买票之后给我推的关于电影的帖子更多了(大数据真可怕)，看到了很多极端的评论，比如「《好东西》就像巧克力，人吃了会开心，狗吃了会死」、「看了《好东西》，就能知道身边的人是个什么东西」、「看完电影的破防男性就是彩蛋」、「带着相亲对象一起看可以测验人品」等等，这样的发言屡见不鲜，小红书是重灾区之一。</p>
<p>还有很多对电影情节的升华和思考，热度都很高，让我开始担忧要是自己没有相似的觉悟，好像就是父权的拥护者和女性的叛徒，然后心里暗暗发誓(I’m one of you!)，接着每个帖子都点进去看，逐字学习，有一种课前预习的感觉。</p>
<p>也有那种po出同行男性的电影观后感让大家审判的，我也是跟对象一起看，怎么办，他对电影的reaction要是没有符合标准，这刚结的婚我离还是不离。所以，没看这个电影之前我心理压力挺大的，对它的期待变成了看完我俩没离就行。</p>
<p>昨晚刚看完，婚没离。</p>
<p>电影没那么夸张，整体还是轻松愉快的。轻喜剧的剧情设置让影厅里的笑声不绝于耳，心理的压力也被一个个笑梗缓解了不少。电影里有很多我喜欢的场景，以生活化的方式真实反映了许多女性困境，润物无声。</p>
<p>80%符合我最初的期待，另外的20%，是感觉前夫角色演绎的过于生硬，看的我有些尴尬，以及全片堆砌了太多的女性主义概念，感觉难以抓住重点。与其说它是一部女性题材电影，我觉得它更像是一个讲正常人生活的电影，但还是前者更有流量一些。</p>
<p>王铁梅确实是一个让人很欣赏的女性角色。她可以在小叶晚上被猥琐男跟踪时仗义相助，骑着平衡车以神似阿飘之姿，跟在对方后面驱赶，还治其人之身，让人边拍手叫好边捧腹大笑；她可以在看到醉酒男朝墙角撒尿时一声大喝「嘿！这不是厕所！」让对方落荒而逃；她可以在和小马亲热被撕衣服时马上叫停并质问对方，对于怕破坏氛围的解释，她回应说「氛围只会被不礼貌破坏」。</p>
<p>我也经常在路上看到边走边抽烟的人，烟味随着风飘过来扑到我的脸上吸进我的衣服里，每次我总是加快脚步超过对方想逃过一劫，但过不多久前面又出现同样的人，真的很无力。还有走在我前面突然停住然后随地吐痰的人，可以清晰的听到，那口痰是如何从他的嗓子眼经过喉咙、口腔接着吐在地上、路旁的绿植上，每当这个时候我都会不由自主的咽咽口水，好像这口痰并没有吐在地上，而是飞进了我的嘴里，非常恶心。看了电影这段，不禁在想什么时候我也可以像王铁梅一样厉声制止这些人呢？</p>
<p>后来，王铁梅发布了一篇挑战大众对单亲妈妈刻板印象的文章，然后被网暴，表面上无所谓的她，会在半夜控制不住的逐条看恶评，网络上的人攻击她说「前夫都求复合了还不同意，她是不是有毛病？」、「跟个年轻男鼓手谈恋爱上床，对得起女儿吗？」、「女儿近视了都不知道，这个妈怎么当的？」… 然后一个人坐在楼梯上无声痛哭。</p>
<p>因为在大众眼里，作为一个单亲妈妈，她就得含辛茹苦、任劳任怨的抚养女儿，前夫要复合她就要感激涕零的马上同意，她得把自己所有的时间精力放在女儿身上。但她没有，她有事业、有人追、有约会对象，她怎么能活得这么像个人？！</p>
<p>一定是她没有责任感，她不配做母亲！即便电影里展示了她是如何付出、照顾好自己和女儿的日常生活，可这些人看不到也不会去想。只要她不符合大众对单亲妈妈的设定，她就不称职！这就像一场游戏，王铁梅只有符合不幸的单亲妈妈人设，才能赢得胜利，可为什么要有这样的游戏？</p>
<p>电影里面有一个场景我很喜欢，小叶给茉莉放不同的声音让她猜，这些其实是王铁梅平时做家务的声音，挂衣服、洗菜、做饭、拖地、收玩具….伴着她做这些家务的镜头，全面并细节化展现了她的付出，让人很有共鸣。</p>
<p>电影后段，茉莉学会打鼓后即将上台表演，却躲在后台不敢出来，她对王铁梅说「你明明是个好妈妈，他们还这么说你，我也怕被说鼓打得不好，不想上去了」，王铁梅鼓励她「正因为这样，我们才不能躲起来，得让他们看到我们，慢慢他们就会接受了」，才让茉莉鼓起勇气上台，完成了表演，这说明她也从网暴的事走出来了，这段算是电影的一个小高潮，还挺治愈的。</p>
<p>在表演的片段，小叶唱着「做小孩儿」，镜头中的每个人也都洋溢着孩子般纯真的快乐和笑容。也许在大众眼里，小孩是最不受限、没有固定人设标准的群体吧(除了小孩就得好好学习天天向上之外)，他们被允许犯错、追求快乐，他们的人生没有模版。电影中的小孩主角王茉莉也总是表现出一种超乎大人的成熟睿智，金句频出。</p>
<p>如果大人的世界全是偏见和批判，还不如去做小孩，那么单亲妈妈(王铁梅)、童年凄惨(小叶)的人、离异家庭(小马)的人、觉得自己不会爱人(胡医生)的人，都有追求快乐的权利，也不用符合世俗的标准和期待，可以选择不一样的生活。</p>
<p>所以电影名字《好东西》到底是指什么？当然不是我刚开始想的骂人的意思。在我的记忆中，「好东西」这三个字在电影中一共出现了两次，第一次是王铁梅工作室的名字，第二次是小叶对胡医生说的台词，她说「我能看到不一样的东西，好东西」。</p>
<p>之后也没有更多的解释，但看完之后，我的理解是，所有能让自己开心的事物都是「好东西」，它不应该囿于大众的标准而被打上不好的标签。当然，生活中还是有很多不幸的事情，我们称之为「苦难」，但不能因为「苦难」就否定或批判「好东西」的存在，「好东西」就是「好东西」，「苦难」就是「苦难」，「苦难」不应该被歌颂，「好东西」也不应该被隐藏，每个人都值得拥有「好东西」。</p>
<p>本篇内容由博主和对象共同解读(我想他应该通过考验了)。</p>
<blockquote>
<p>后记：这该死的缘分</p>
</blockquote>
<p>电影里王铁梅的老家是太原，还有个片段说山西和法国很像，末尾王铁梅也带着茉莉和小叶一起去法国旅行。而我上月底刚从巴黎旅游回来，在看电影之前又订好了这月末去太原玩的火车票，从法国到山西，全对上了，这该死的缘分。</p>
<p>昨天刚玩回来，去太原面食店吃了刀削面、去晋祠欣赏了山西古建筑美学、去看了太原地标永祚双塔寺，那么山西和法国有多像呢？请看下图：</p>
<p><img data-src="https://s2.loli.net/2024/12/02/ZzG1L7nQStb3rwI.jpg" alt="酒店的装饰墙是会对比的"><span class="image-caption">酒店的装饰墙是会对比的</span></p>
<p>不仅如此，我还发现了中国自己的斜塔，那就是双塔中的文峰塔(图中右侧塔，原名宣文塔即东塔)，你是否观察到它往左偏了一点点呢？(看太阳照射的塔身明线对比左侧塔非常明显！)，附上拍到的纠偏碑记(博主和对象双双入镜)：</p>
<p><img data-src="https://s2.loli.net/2024/12/02/PkJ6lCcRrE5AXyM.jpg" alt="双塔和纠偏碑记"><span class="image-caption">双塔和纠偏碑记</span></p>
<p>所以别说法国了，山西和意大利也很像！世界就是巨大的中国(手动狗头)。话又说回来了，比萨斜塔拯救委员会真的不考虑咱们的专家过去看看嘛？下图为博主去意大利旅行时拍到的斜塔：</p>
<p><img data-src="https://s2.loli.net/2024/12/02/5E1GQpgVlJoSXqW.jpg" alt="比萨斜塔"><span class="image-caption">比萨斜塔</span></p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>影评</tag>
      </tags>
  </entry>
  <entry>
    <title>我买房了</title>
    <url>/i-bought-an-apartment/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/10/30/t8bgFdo9qx3EX4j.png">

<h2 id="归属感和租住不同权"><a href="#归属感和租住不同权" class="headerlink" title="归属感和租住不同权"></a>归属感和租住不同权</h2><p>会有人不想买房吗？是因为不想吗，是因为没钱吧。</p>
<p>2014年，17岁的我来到西安上大学，毕业后又在这里工作。选择西安，并不是刻意为之，大学是被调剂的，毕业后也投了不少外地的工作，但最终也只有西安的公司收留我。</p>
<p>我又是一个安于现状没有梦想的咸鱼，所以不知不觉在西安生活也快10年了，自然有一种归属感。而且这里超好的，离家又近又很安全，没有什么地震海啸之类的自然灾害，很适合好好活着。</p>
<p>在中国，租住不同权，所以想要在一个地方长久的活着，买房是很有必要的。西安的房价相较于一线城市来说也比较友好，攒一攒还是够的上首付，所以买房这件事，从我刚开始赚钱的时候就被列为头号目标。</p>
<h2 id="一波三折的计划"><a href="#一波三折的计划" class="headerlink" title="一波三折的计划"></a>一波三折的计划</h2><p>买房这件事很复杂，预算多少，买哪里，买多大，怎么买，都是问题。但是买期房并不在我的考虑范围之内，因为爆雷太多了也不想等，所以我只买二手房。</p>
<p>刚开始我计划，买一个离公司近点的一室小房子，用公积金贷款，每月的缴存额刚好够直冲房贷，再买一辆经济实惠的大众Polo，慢慢过自己的小日子。</p>
<p>然后参考某壳某家上的房源信息，确定预算后开始了每月的攒钱计划，还在小本本上计算可以达成目标的时间，也一直关注房地产的政策和消息，斗志满满。</p>
<p>那时我还不懂什么是 <a href="https://www.bilibili.com/read/cv8944043/">无常</a>，总以为万物恒定，一切都会按照自己计划的那样进行，那种突然出现什么变故需要用钱的事，全不在我的考虑范围之内。可真就什么也没发生，虽然中间有一些插曲，但也总归按计划攒够了钱，真是万幸。</p>
<p>后来考虑到爸妈养老，住的近方便一点，又打算买一个小两室，爸妈住一间，我住一间。直到去年，我遇到了强哥，一起规划未来时讨论到这件事情，讨论之后还是决定买，但买房的性质从给自己买变成给爸妈买养老房。</p>
<p>计划还是买小两室，爸妈一间，我住一间以后用作客房，老姐之后来西安探亲也有地方住。用纯公积金贷款，每月的缴存额要够直冲房贷，做到无痛还贷，这样也有余力再攒点钱和强哥一起买房。</p>
<h2 id="不断接受现实的看房过程"><a href="#不断接受现实的看房过程" class="headerlink" title="不断接受现实的看房过程"></a>不断接受现实的看房过程</h2><p>刚开始，我对二手房的要求是：住宅、房龄5年以内、两梯四户、小区环境要干净整洁、交通要便利、周边配套要丰富。</p>
<p>然后发现以我的预算根本找不到这样的房子，不断妥协之后留下了三个硬性要求：住宅、房龄10年以内、梯户比1:2，小区环境和周边配套过得去、交通相对便利就行。</p>
<p>我都是在线上看好了感兴趣的房源，再联系中介线下看房。</p>
<p>第一次看房，是在20年，那时候的计划还是买一室，看中了公司周边一个套内只有38平的开间房，户型还算方正，厨房卫生间相对，客厅和床连成一个大套间。</p>
<p>这么一个小房子，价格还是有些超出我当时的预算，很不值得。后来还被中介拉去对面在建的商业公寓看房刷业绩，现在经常路过那里，对面的商场也开业了，还去转过几次。</p>
<p>第二次看房，是在21年，计划改成买小两室，看中了一个在顶楼所以价格相对友好的房子，纠结几番还是决定听朋友劝没买，因为价格超出预算而且顶楼很不靠谱。</p>
<p>每次看房，中介都会极尽所能劝我快买，约业主面谈，想让我头脑发热冲动签约，他们也好签单达成业绩。但是买房又不是买菜逛街，怎么可能这么草率做决定呢，还是要谨慎，不过多看是一方面，要真看中了定下来也蛮快的。所以我决定继续攒钱，到合适的时机再买。</p>
<p>今年，市场方面，经济衰退楼市遇冷，政府出台了很多买房的利好政策。家庭方面，在外地工作的爸妈也要回来了，想让他们回来就直接能住上房子。个人方面，遇到了强哥想着早点把这个事办完，也能更好的规划我们的未来。</p>
<p>所以从三月份开始，我每个周末都安排中介，奔走在城市各个角落看房。刚开始我自己坐公交地铁和中介碰头，后来发现其实可以要求接送。然后每次加中介之后先问能不能接送，不能的就pass，反正一套房源又不只有一个中介可以联系。</p>
<p>跑了快两个月之后，终于找到了一个比较满意的小两室。楼龄新，两梯四户，小区环境也不错，旁边有待开的商业和地铁，周围有公园很适合遛弯，在大学城居住氛围也很浓厚，同样的户型看了好多套，然后把装修发给爸妈看。</p>
<p>他们还是觉得有点小，也希望离我公司近点方便我上下班，可这已经是我预算内综合各种要求，能找到的最好的房子了。后来爸妈添了10万给我提高预算，就又接着找。</p>
<h2 id="就这么草率的决定了"><a href="#就这么草率的决定了" class="headerlink" title="就这么草率的决定了"></a>就这么草率的决定了</h2><p>新的预算选择范围也很有限，不过一段时间以后，还是找到了不错的房子。满足我上边的硬性要求，虽然小区环境比之前那个差点，遛弯也不太方便，但离公司比较近可以打车上下班，周边配套和交通方面也还算过得去，还有一点，这里离强哥家只有三个红绿灯。</p>
<p>爸妈也比较满意，所以决定就买在这个小区。这里小两室的户型有很多，看了一些都没有中意的，不过房源很多，过了几天中介又发了我几套，有一个我比较喜欢的，就又约上了。</p>
<p>那天周六，是我喜欢的微雨天气。先去看了中意的那套房子，里面住着四口人，一对夫妻和孩子，以及带娃的奶奶，见我们来看房也没怎么理。</p>
<p>小两室住四个人有点挤，里面的东西也很多，还有堆放在门口的杂物，跟我想象中的不太一样。看我神情有些失望，中介说还有一套，是新上的还没给我发，问我要不要看，我想着来都来了，必须看啊。</p>
<p>这是一套次顶楼的房子，里面没人住，说是刚搬空，看情形本来住着一对夫妻和孩子。客厅很敞亮，装修是我喜欢的原木风，卧室朝东早上可以被太阳晒屁股，家具也比较全，让我眼前一亮。挂牌价有些超出预算，但肯定可以谈。</p>
<p>拍了视频给爸妈看，他们也说不错，然后约了第二天和业主面谈。</p>
<p>第二天，先去复看了房子，还是很喜欢，然后和中介去了签约中心。刚开始我有些紧张，不知道怎么跟业主面对面讨价还价，这时候中介就发挥了作用，只用告诉他自己的心理价位，他再去跟业主谈，省去了尴尬。</p>
<p>业主跟我一样社恐，也是通过中介来谈价，所以全程，我们两方在不同的会议室里，中介穿梭其中，经过快一个小时的拉扯，最终以超出我心理价位一万的价格成交，家具全送(除了洗衣机和冰箱我想买新的)。</p>
<p>成交之后和业主会合，是一位女士还带着孩子，看材料比我大十岁，房子在她名下也是单独所有，客套了一番之后交材料然后签约成功：</p>
<img data-src="https://s2.loli.net/2023/11/14/1fLpntvYNUgRzm2.jpg" alt="签约中心&amp;在会议室的我&amp;签约成功"><span class="image-caption">签约中心&amp;在会议室的我&amp;签约成功</span>

<p>签约之后正式开始交易，要办各种手续，整个阶段持续了两个月，总的来说比较顺利，但是真的好慢，可中介说这还算比较快的，我很震惊。</p>
<img data-src="https://s2.loli.net/2023/11/14/NJtaAmj9zrgT3ok.jpg" width="300" height="600" alt="交易时间线"><span class="image-caption">交易时间线</span>

<p>到这里，这个房子终于算是买完了，也实现了我用公积金对冲房贷的预设。在整个交易流程中，3%的中介费、1%的个税、契税都是不小的开支，虽然有中介，也得跟着跑去办各种手续。</p>
<p>办贷款银行卡、打征信、面签、去二手房交易中心缴税过户等等，都是我工作日抽空摸鱼跑出去办的。之后自己去交易中心拿房产证，刚拿到又交给公积金管理中心做抵押登记，过段时间又去管理中心拿回了房产证，这才办完所有的手续。</p>
<img data-src="https://s2.loli.net/2023/11/15/OdLPzR9vJkUsTyw.png" alt="二手房交易中心"><span class="image-caption">二手房交易中心</span>

<p>回顾全程，我觉得自己像一只被宰的羔羊。各种交钱、办手续、走流程，中介、银行、政府部门、甚至物业都可以从这件事中分一杯羹，还有业主，我可是以她当年三倍的价格买下了这个二手房！</p>
<p>虽然用着利率3.1%的公积金贷款，可刚开始每个月只有53%是在还本金，本来公积金也是我和公司对半交，就当公司那半还利息，我这半还本金，相当于没有利息，这么一想确实很划算？(公积金住房担保部门：她还得谢谢咱呢) ，但是要还21年，这意味着我要保住这样的公积金水平，才能一直无痛还贷，在经济形势衰退的当下，还是蛮有压力的。</p>
<h2 id="经济实惠的装修"><a href="#经济实惠的装修" class="headerlink" title="经济实惠的装修"></a>经济实惠的装修</h2><p>系统显示7.31交易完成，其实这个时间比较滞后，而且我和中介以及原房主沟通了想要早点入住的想法，所以7.18就收房了，当天交接了水电燃气物业费，也再仔细看了看房子的装修和电器。</p>
<p>然后发现：入户和过道的灯具都坏了，墙面有裂纹和污渍需要重新粉刷，阳台升降晾衣架有部分损坏，瓷砖也有很多严重空鼓，厨房燃气长时间不用已经被锁，卫生间的浴霸面板也需要更换。。。</p>
<p>但是，当我看到原房主拿来的家具单子：沙发2万？！电视柜1万？！其他的实木家具零零总总加起来也好几万，嗯，我突然觉得上面这些都是小问题。</p>
<p>不过我一直很疑惑，买房这么多流程，为什么没有一个试住的环节呢？这么大的交易，看几次房子就决定，只能通过现状想象入住后的情况，真的很离谱。</p>
<p>然后开始收拾房子，除了解决上面的「小问题」，还要买家电，有一些家具也想更换，以及很多生活必备品和居家小物件，我都整理了list：</p>
<img data-src="https://s2.loli.net/2023/11/17/yPUe1Jg6upEb3oO.png" width="500" height="450" alt="装修list(部分)"><span class="image-caption">装修list(部分)</span>

<p>收房第一周就开始动工，周末两天我都在现场从早待到晚，边看着各路师傅装东西，边量各种尺寸买东西，每天进门第一件事就是打开甄嬛传当背景音(师傅们可真有福气)，电视也是乐视的(缘，妙不可言)：</p>
<img data-src="https://s2.loli.net/2023/11/17/v2A1F547hEtjNwQ.png" width="600" height="400" alt="甄嬛传"><span class="image-caption">甄嬛传</span>

<p>两周以后(为什么是两周请看下文)，list上的大部分事情也都解决了：</p>
<div class="tabs" id="list解决"><ul class="nav-tabs"><li class="tab active"><a href="#list解决-1">list解决 1</a></li><li class="tab"><a href="#list解决-2">list解决 2</a></li><li class="tab"><a href="#list解决-3">list解决 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="list解决-1"><p><strong>生活必备</strong></p>
<p>水电燃气物业这些收房当天就交接清楚了，水电都可以用，燃气我打了客服电话让师傅上门解锁之后也好了，也办了直饮水站的饮水卡。</p>
<p>宽带最麻烦，我之前用的网速不够，就办了两张新卡用移动的家庭账户套餐拉了新的千兆宽带，然后想把旧卡套餐降到8元再办理退网，但是只能本人去移动营业厅办理。</p>
<p>后来有天去办，连跑了5个营业厅，不是办不了就是说权限收回了，各种设置障碍，第5家终于可以办了，但是人超多等了一个多小时才办完：</p>
<img data-src="https://s2.loli.net/2023/11/18/b8IqZyrtlKSPfNW.jpg" width="300" height="400" alt="移动营业厅"><span class="image-caption">移动营业厅</span></div><div class="tab-pane" id="list解决-2"><p><strong>墙面和瓷砖</strong></p>
<p>刚开始我为了省事直接网上约师傅，在啄木鸟的小程序里(小区电梯里甚至还有广告)，结果来的师傅看起来流里流气，还破坏了一部分墙面说是取样回去配色(不是纯白的)，报价也很高，真的很离谱，看来这种连锁平台完全就是宰客：</p>
<p><img data-src="https://s2.loli.net/2023/11/18/4u8U31FSikx6mHa.jpg" alt="啄木鸟"><span class="image-caption">啄木鸟</span></p>
<p>后来打电话给一个以前认识的师傅，好像是个包工头，来了以后快速敲定了方案，价格合理人也很负责靠谱，墙刷的很完美瓷砖也贴好了：</p>
<p><img data-src="https://s2.loli.net/2023/11/18/AiXrDq7n3vTZMeO.jpg" alt="刷墙"><span class="image-caption">刷墙</span></p></div><div class="tab-pane" id="list解决-3"><p><strong>电器家居</strong></p>
<p>电器基本上都是小米的产品，经济实惠也可以联网控制，家居大都买的林氏比较喜欢简约风，还有花洒浴霸这些买了之后都有师傅上门安装，一般也都包拆旧很方便：</p>
<img data-src="https://s2.loli.net/2023/11/18/uAtZg5kWTUb13s7.jpg" width="300" height="400" alt="一组师傅图"><span class="image-caption">一组师傅图</span>

<p>我都是周内买好约到周末安装，所以会同时有多个师傅在家里工作，看他们聊天也很热闹，还有个小米的师傅加了林氏师傅的微信想跳槽，虽然不知道后续如何但祝他成功哈哈哈哈哈。</p>
<p>房子里原本的家居我只换掉了一个榻榻米床和一个立柜，床太小立柜太丑，想着快点挪出去就挂在闲鱼上免费送，第二天就有人要，是一个同市的小哥，说家里也在装修离得不远，周末叫了货拉拉和师傅一起搬。</p>
<p>大热天的也不容易，我还热心的给他们开了空调，然后去物业开放行条，本来看他拿着一袋子水果想着来都来了还带什么东西，后来他又拿走了(特意上来一趟说是自己忘拿了)，害。</p></div></div></div>

<p>除了大件，还有很多居家小物件也很费心思，大多是入住后慢慢购置的。全程都是我一个人在弄，强哥也帮了不少忙，比如顶住上门来诘问的邻居，看着师傅装柜子，还带我去宜家买了床垫，所有东西弄好之后花费3万左右，主打一个经济实惠。</p>
<h2 id="房子和生活都是自己的"><a href="#房子和生活都是自己的" class="headerlink" title="房子和生活都是自己的"></a>房子和生活都是自己的</h2><p>在我忙着收拾房子的时候，房东这边又出了幺蛾子。</p>
<div class="tabs" id="幺蛾子"><ul class="nav-tabs"><li class="tab active"><a href="#幺蛾子-1">幺蛾子 1</a></li><li class="tab"><a href="#幺蛾子-2">幺蛾子 2</a></li><li class="tab"><a href="#幺蛾子-3">幺蛾子 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="幺蛾子-1"><p>本来租期是到9月初，我想着房子收拾完8月初就可以搬，所以7月份就给房东说让她早点找租客。</p>
<p>一是为她好，想着毕业季比较好找，而且找到新租客一个月也能多收点钱，二是为我好，在这里住了四年半，陆续帮房东洗了油烟机、修了水管漏水和热水器、换了新门锁和中央空调老化零件。。。</p>
<p>刚开始房东还掏点钱(我出大头)，后来问题越来越多，房东也多有不满，说东西虽然坏了，但是我在用就应该我掏钱来修!? 闹了很多不愉快，不久前又垫钱修洗衣机，实在不想再打两份工，还是快逃吧。</p>
<p>因为房子被我改造的很温馨，也打理的非常干净，之前好多朋友来做客都说以后房东甚至可以加价租出去，中介来拍VR也说这个房子谁来看都能看得上。果不其然，很快有一个刚毕业来西安读研的女生和妈妈一起来看，也十分满意。</p></div><div class="tab-pane" id="幺蛾子-2"><p>然后房东就问我什么时候搬：</p>
<img data-src="https://s2.loli.net/2023/11/19/6LZCpn23kE9fqM7.jpg" width="300" height="550" alt="好大一张脸"><span class="image-caption">好大一张脸</span>

<p>本来想着好聚好散，结果她倒打一耙说是我违约提前退租，想吞了我一个月的租金和押金，还想着租出去，一个月收三份钱？真是好大一张脸。那好嘛我就不提前退了呗，爱咋咋地。</p></div><div class="tab-pane" id="幺蛾子-3"><p>但是我不急着搬，她着急租呀，然后缓和了态度说可以退我租金押金，到时候和水电物业一起交接。本来我打算按合同时间8.8搬，结果他们一通道德绑架，又想要我协调他们的时间，又说下个租客在酒店没地方住要我帮帮忙，最后我妥协决定8.1搬家，还得请个假：</p>
<img data-src="https://s2.loli.net/2023/11/19/rFocWzywPx847GH.jpg" width="400" height="460" alt="我可太善良了"><span class="image-caption">我可太善良了</span></div></div></div>

<p>于是8.1号，我和强哥、房东、新租客、中介四方一起交接，清算了水电燃气物业费，又检查房子的电器和家具，扯了好一会皮，主要是强哥在帮我交涉，我已经不想跟房东说话了。</p>
<p>房间里有很多自己买的小家具，大多是上个租客走的时候我花了350买的，本来以为已经算是趁火打劫了，因为东西蛮多的也很实用，后来自己又添了很多小物件让房间看起来更温馨，就想把这些打包500块卖给新租客(其实光我后来买的原价加起来都有1k+)。</p>
<p>结果他们更不要脸，可能知道我们着急走，卖不出去也只能留在这(因为尺寸都是按照这个房子买的拿走也用不了)，而且中介也很奇怪偏帮着新租客，说我们这些东西扔在楼下都没人要(我当时真的想扔)，最后他们明明可以直接抢，还要给我150，真的栓Q。</p>
<p>然后叫了货拉拉开始搬家，我和强哥两个人按着电梯，上下不知多少次才搬完，后来小货车放不下，放了好多在强哥车上，我又跑去物业开各种单子和放行条，一前一后开去新家。</p>
<p>到了新家又重复刚才的动作，足足搬了4个多小时，汗出了一层又一层。简单收拾歇了会，我们出发去超市买食材，途中还下起了瓢泼大雨，一路折腾回家，伴着满地杂乱的行李，终于在晚上10点吃上了火锅：</p>
<p><img data-src="https://s2.loli.net/2023/11/19/LPs5SfbiOhJkdKM.jpg" alt="又见甄嬛传"><span class="image-caption">又见甄嬛传</span></p>
<p>一整天实在太累，再加上来新家也很不适应，有些食不知味，吃完饭强哥12点才到家。因为房间还没收拾好，所以在新家的第一晚我是在沙发上睡的。</p>
<p>第二天我请了假在家休息，顺便收拾了很多东西，后边几天也都在家办公，才慢慢恢复元气，说起来买房全程我只有搬家请了两天假，太高效了。</p>
<p>接下来的日子里，我一边购置其它小物件，一边适应新家的生活。后来爸妈也来和我一起收拾房子做大扫除，才有了家的感觉，他们发现楼顶十分开阔可以晒被子之后，觉得很不错还开心的像个孩子，搬到新家的吉吉也一如既往的清澈愚蠢：</p>
<img data-src="https://s2.loli.net/2023/11/19/w5IVuoX2gSPb3eT.jpg" width="400" height="500" alt="清澈愚蠢(和右下角的黑猫一模一样了)"><span class="image-caption">清澈愚蠢(和右下角的黑猫一模一样了)</span>

<p>现在的我，已经完全适应了新家。工作日打车上下班，也偶尔在家办公，闲暇时和强哥一起在路边散步(毕竟只隔着三个红绿灯)，慢慢熟悉了周边的环境。</p>
<p>爸妈也过来住了，老妈还很快找到了工作(离家也只有三个红绿灯)，每天步行上下班；老爸则经常展示厨艺，做好吃的给我们，生活平淡温馨。</p>
<p>最近小区在组织成立业委会，监督物业不作为的现象，我很支持还上交了所需资料，但现在还没有下文。</p>
<p>从买房入住到现在，我感觉物业就只是凑合，甚至业主群都还没加上。不过全国的物业都一样，凑合过呗，还能离咋的。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>买房</tag>
      </tags>
  </entry>
  <entry>
    <title>Java判断素数</title>
    <url>/java%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0/</url>
    <content><![CDATA[<p>嗯，就是来秀插件的。</p>
<span id="more"></span>

<iframe height="498" width="666" src="http://player.youku.com/embed/XMzU1ODc3NDU2NA==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Java类中的代码块执行顺序</title>
    <url>/java%E7%B1%BB%E4%B8%AD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%9D%97%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F/</url>
    <content><![CDATA[<p>代码实例分析java类中的代码块执行顺序.</p>
<span id="more"></span>

<h1 id="一道笔试题"><a href="#一道笔试题" class="headerlink" title="一道笔试题"></a>一道笔试题</h1><p>下面是一道阿里的java校招笔试题：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">HelloA</span>
<span class="token punctuation">{</span>
	<span class="token comment">//构造方法</span>
	<span class="token keyword">public</span> <span class="token class-name">HelloA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//非静态代码块</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类非静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//静态代码块</span>
	<span class="token keyword">static</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"父类静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">HelloB</span> <span class="token keyword">extends</span> <span class="token class-name">HelloA</span>
<span class="token punctuation">{</span>
	<span class="token comment">//构造方法</span>
	<span class="token keyword">public</span> <span class="token class-name">HelloB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token comment">//非静态代码块</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类非静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//静态代码块</span>
	<span class="token keyword">static</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"子类静态代码块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">new</span> <span class="token class-name">HelloB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">HelloB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>请写出上述代码的输出，看完本文你就会有答案。</p>
<h1 id="代码块分类及其执行顺序"><a href="#代码块分类及其执行顺序" class="headerlink" title="代码块分类及其执行顺序"></a>代码块分类及其执行顺序</h1><h2 id="代码块分类"><a href="#代码块分类" class="headerlink" title="代码块分类"></a>代码块分类</h2><p>代码块，就是使用”{}”定义的一段代码，根据代码块定义的位置和关键字，可分为以下四种：</p>
<ul>
<li>普通代码块：定义在类的方法中的代码块。</li>
<li>构造块：定义在类中的代码块（无修饰符）。</li>
<li>静态代码块：使用static修饰的，在类中定义的代码块。</li>
<li>同步代码块（与多线程有关，本文不涉及）</li>
</ul>
<h2 id="执行顺序（无继承）"><a href="#执行顺序（无继承）" class="headerlink" title="执行顺序（无继承）"></a>执行顺序（无继承）</h2><p>看代码：</p>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
	
	<span class="token keyword">public</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"非主类构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"非主类构造块,优于构造方法执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">static</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"非主类静态块，优于构造块执行，无论产生多少实例化对象，只执行一次。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
<span class="token punctuation">}</span>

<span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">Hello</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"主类构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> 
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----start----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">Hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----end-----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"主类构造块"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token keyword">static</span><span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"主类静态块，优于主方法执行"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p><strong>执行结果：</strong></p>
<p><img data-src="http://ou7wdump3.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.PNG" alt="66"><span class="image-caption">66</span></p>
<p><strong>结论：</strong></p>
<p><img data-src="http://ou7wdump3.bkt.clouddn.com/%E5%9B%BE%E7%A4%BA.PNG" alt="78"><span class="image-caption">78</span></p>
<p><strong>其中：</strong></p>
<ul>
<li>主类静态块优于主方法执行。</li>
<li>无论生成多少类对象，静态块只执行一次。</li>
<li>主类和非主类的构造方法、构造块谁先执行取决于代码顺序，与主类/非主类无关。</li>
</ul>
<h2 id="执行顺序（有继承）"><a href="#执行顺序（有继承）" class="headerlink" title="执行顺序（有继承）"></a>执行顺序（有继承）</h2><p>我们知道，在继承的情况下，子类在实例化时，首先调用父类的构造方法，然后再调用子类的构造方法。因此，结合上面的结论，我们就可以得出开始那道笔试题的结果。</p>
<blockquote>
<p>为了方便观察，对代码改动如下：</p>
</blockquote>
<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span>
<span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"----start----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---first---"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">HelloB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//first</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"---second---"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">new</span> <span class="token class-name">HelloB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//second</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"-----end-----"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>答案在这里：</p>
<p><img data-src="http://ou7wdump3.bkt.clouddn.com/%E7%BB%A7%E6%89%BF%E5%90%8E%E7%BB%93%E6%9E%9C.PNG" alt="77"><span class="image-caption">77</span></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>我和黑猫吉吉</title>
    <url>/ji-ji-cat/</url>
    <content><![CDATA[<blockquote>
<p>一直以来，我都有养只宠物猫的想法，毕竟养宠是当代空巢青年的标配，而且毕业后我都一个人住，工作生活也极其稳定，是非常适合养宠的，至于养猫，则是因为我比较喜欢宅着，所以养猫应该会更合得来。</p>
</blockquote>
<p>虽然猫也有很多品种，但我从一开始，就决定要养只黑猫。</p>
<p>原因并不难猜，博客右下角就有只黑猫，作为镇站神兽，从博客开始营业(17年8月)到现在，它已经陪我走过快5年的时光了，所以当我想养只猫的时候，首先就想到了它，如果能养只三次元版就好了。</p>
<p>我的博客头像里也有只黑猫，刚开始只是因为插画很符合我本人慵懒的风格，甚至很多朋友都以为这个是我照自己画的头像(之前也是短发来着)，其实并不是，后来就把它拿来当作博客的头像了，正好能和右下角的黑猫呼应，它不营业的时候就可以趴在头像里休息。</p>
<p>还有一个原因是我很喜欢宫崎骏的动漫《魔女宅急便》：</p>
<img data-src="https://s2.loli.net/2022/06/23/PHj6nU47EzZp1xk.png" alt="魔女宅急便"><span class="image-caption">魔女宅急便</span>

<p>里面的女主角琪琪也有只黑色的宠物猫，叫吉吉，以下摘自 <a href="https://baike.baidu.com/item/%E5%90%89%E5%90%89/13207771?fr=aladdin">百度百科</a> ：</p>
<div class="note info"><p>吉吉从出生就跟琪琪在一起，它可以和琪琪对话，常被叫做魔女猫，吉吉和琪琪一起成长，经常给琪琪提供帮助，与琪琪一起离开故乡来到柯里柯小城完成魔女的修行。虽然吉吉黑乎乎的，长的既不可爱也不可喜，但当它帮琪琪伪装成玩具猫在为琪琪的第一个客户家里，尽心尽力地假扮玩具猫所发生的一切，当吉吉看到庞然大物的狗狗而惊恐，满身冒冷汗，却仍然坚守岗位，一动不动，着实可爱。最后吉吉不再和琪琪说话了（至少是不再说人话），而这不是因为琪琪失去法力，而是因为他们都长大了。</p>
</div>

<img data-src="https://s2.loli.net/2022/06/23/MA27UaCH6kp9jJs.png" alt="吉吉简介"><span class="image-caption">吉吉简介</span>

<p>我非常喜欢这样的设定，所以决定我的黑猫就叫吉吉了，男孩子，为了满足「一起成长」的设定，最好是只小猫。</p>
<p>满足这些条件的猫并不多，而且我想领养代替购买，就关注了几个领养机构的公众号，里面每周会放送可以线上领养的宠物，佛系找猫，每周刷一刷，倒也见过几次黑猫，只是都没有眼缘，直到我看到了它：</p>
<img data-src="https://s2.loli.net/2022/06/23/EZsPGhcb4C6dumr.jpg" height="600" width="300" alt="太像了！"><span class="image-caption">太像了！</span>

<p>它满足我的所有要求，甚至和博客黑猫神似！！！就是它了。</p>
<p>所以连夜加了救助人微信，第二天才通过，它还在！</p>
<img data-src="https://s2.loli.net/2022/06/23/4SG35tNJgKF7CWM.jpg" height="600" width="300" alt="哇咔哇咔"><span class="image-caption">哇咔哇咔</span>

<p>之后就是宛如面试般的问答：<mark class="label primary">性别、年龄、做什么工作、老家哪里的、养过猫么...</mark>，由于救助人之前有过一些不好的经历(很多在她这领养猫的人后来因为怀孕/家里人不同意之类遗弃猫咪)，所以在得知我一个人住且未婚时，表达了很多类似的疑虑(没想到养猫也会有性别歧视)，即使我再三保证这样的事不会发生，她也很踌躇，只说自己还要考虑一下。</p>
<p>虽然表示理解，毕竟是一条生命，但我也无法有更多的表示了，只能让她自己考虑，不过最终她还是同意了<span class="emoji" alias="v" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">✌</span>，接着她指导我买了猫粮、猫砂、猫包、猫玩具、猫抓板等等养猫要用的东西，一周以后，送猫上门，签完领养协议之后，我终于有猫了：</p>
<img data-src="https://s2.loli.net/2022/06/23/GvotzASwhjkKrQa.png" height="400" width="700" alt="真猫比照片好看！"><span class="image-caption">真猫比照片好看！</span>

<p>虽然救助人给它起的名字很洋气(摩卡)，不过我没有喝咖啡的习惯，而且设定不变，还是叫它吉吉吧。</p>
<p>到今天，吉吉和我相处已经整整20天了，它胆很大，送来第一天在沙发下躲了十几分钟之后，就被我用逗猫棒吸引过来了，还能很快和来家里做客的朋友打成一片。带它去打疫苗的时候，在医院也探头探脑想挣脱我的怀抱，对比其它在主人怀里缩着的大猫只能说是初生牛犊不怕虎吧。</p>
<img data-src="https://s2.loli.net/2022/06/23/P3ocy5Kzr1AOlJ9.jpg" height="700" width="400" alt="朋友来家里做客时恶猫咆哮的吉吉"><span class="image-caption">朋友来家里做客时恶猫咆哮的吉吉</span>

<p>当然它也很淘气，家里的地毯、沙发盖毯无一躲过它的毒手，被抓到脱线，幸好我买的都不贵；还喜欢在各种卫生死角打滚，滚到一身灰被我抓出来用湿巾狠狠蹂躏，之后我不得不仔细打扫那些卫生死角；在家里跑酷、发疯的时候摔坏东西爪子还经常误伤到我；对我的鞋子有种莫名其妙的偏爱，各种撕咬。。。</p>
<img data-src="https://s2.loli.net/2022/06/23/mLOCoUe3VvsJaqM.jpg" height="200" width="900" alt="在我写博客的时候捣乱的吉吉(和博客黑猫的梦幻联动)"><span class="image-caption">在我写博客的时候捣乱的吉吉(和博客黑猫的梦幻联动)</span>

<p>可这哪能比得过吸猫的快乐呢？它很粘人，睡觉的时候喜欢睡我旁边，也很享受趴在我身上小憩，下班回家后，它会第一时间跑过来在我脚边嘤嘤乱叫，和想象中的样子别无二致，被撸的时候也会乖乖待着不动，还一脸享受的样子，每天都有在积极营业。</p>
<img data-src="https://s2.loli.net/2022/06/23/stK1SrOQFm4aLNP.png" height="250" width="700" alt="「一脸享受」的吉吉"><span class="image-caption">「一脸享受」的吉吉</span>

<p>为了锻炼它的胆量，第一次带它出去遛弯，也完全没在怕。</p>
<img data-src="https://s2.loli.net/2022/06/23/K6XwuRcNnGvsoi7.png" height="250" width="400" alt="和夜色融为一体的吉吉"><span class="image-caption">和夜色融为一体的吉吉</span>

<div class="note info"><p>不知道吉吉具体的出生日期，只说它两个月大，所以我选择了一个喜庆的日子(4.1)作为它的生日，以后的日子，就和黑猫吉吉一起修行吧！</p>
</div>

<img data-src="https://s2.loli.net/2022/06/23/IQXychPb6wKnuJO.png" height="300" width="310" alt="黑猫吉吉"><span class="image-caption">黑猫吉吉</span>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>撸猫</tag>
      </tags>
  </entry>
  <entry>
    <title>这世界那么多人</title>
    <url>/looking-for-the-one-1-10/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/KUCYHdEzs2gak1J.jpg">

<h2 id="前景提要"><a href="#前景提要" class="headerlink" title="前景提要"></a>前景提要</h2><div class="note info"><p>去年年底博主注册了两个交友小程序，到现在为止也见识过不少男嘉宾了，所以是时候复盘一波了(不是为了找素材啊喂🙈)。<br>我的流程是先在小程序了解基本信息，聊一聊，觉得聊得还行就加个微信进一步了解，然后再安排见面，所以下面的男嘉宾排名，也是按照这个顺序。<br>由于我已经注销了青藤的账号，所以以下除特别说明外，男嘉宾均来自二狗平台。</p>
</div>

<h2 id="No-1-没有槽点"><a href="#No-1-没有槽点" class="headerlink" title="No.1 没有槽点"></a>No.1 没有槽点</h2><p>我设置了加好友问答，需要推荐一部书或电影然后给个推荐理由(其实就是因为我剧荒了)，他答的还不错，所以就通过申请聊了聊。</p>
<p>聊了之前都去过的一个旅游景点，然后他推荐了一个本地的商业文化街说可以一起去，再随便聊了点啥，第一次对话就这样结束了，后面我也没有想要挑起话题的欲望，人家也再没找过我，整体没啥槽点，感觉挺无聊的，就算了。</p>
<h2 id="No-2-明年结婚"><a href="#No-2-明年结婚" class="headerlink" title="No.2 明年结婚"></a>No.2 明年结婚</h2><p>程序员，说实话我对程序员有种特别的好感，可能因为置身其中比较了解行业的艰辛吧，所以很加分，互道你好后，他说：</p>
<img data-src="https://s2.loli.net/2022/05/28/wDZhlFW4uaBsp57.jpg" width="200" height="400" alt="了不得了不得"><span class="image-caption">了不得了不得</span>

<p>什么叫专业？这就是专业啊！！！看完之后我内心忍不住发出一声赞叹，人家问我觉得怎么样？我觉得自惭形秽，只能机械的重复「挺好的挺好的」。<br>这样的男嘉宾我配不上，当然要介绍给我一个跟他同乡的好闺蜜啊，所以马上安排了起来：</p>
<img data-src="https://s2.loli.net/2022/05/28/cCAiZ938zudfbED.jpg" width="200" height="400" alt="芜湖"><span class="image-caption">芜湖</span>

<p>第一次当红娘的我十分激动，比给自己找对象都开心，原来单身狗的快乐源泉之一是给别人介绍对象，所以马上问闺蜜聊的怎么样，进展如何，然后她给我甩了一张聊天截图：</p>
<img data-src="https://s2.loli.net/2022/05/28/k52cyBdtSfKrsYL.jpg" width="200" height="200" alt="好家伙"><span class="image-caption">好家伙</span>

<p>明年结婚？<br>时间有没有问题？<br>我看他这个人多少是有点问题，男嘉宾说等她一周后出差回来要约见面，闺蜜也答应了，说不定见面的感觉不一样呢？<br>接下来是闺蜜见面之后从前方带来的报道：</p>
<img data-src="https://s2.loli.net/2022/05/28/CO3PKat6TJfxcqE.jpg" width="200" height="300" alt="哈哈哈哈哈"><span class="image-caption">哈哈哈哈哈</span>

<p>细节就是，到了星巴克，男嘉宾一个人坐在那，什么喝的也没点，闺蜜到了跟他聊了几句，实在没忍住渴自己点了一杯喝的，问男嘉宾要点啥，男嘉宾说啥也不要，然后俩人在那尬聊了半小时。</p>
<p>至于聊天的内容，男嘉宾从程序语言聊到框架设计，还问闺蜜工作上用的啥框架然后咋用的，宛如面试现场，闺蜜说自己如坐针毡，我怀疑这男嘉宾是猎头派来挖人的吧，救大命。</p>
<p>啥也不说了，祝福这位男嘉宾能找到跟他「明年结婚」的对象吧，啊不，已经是今年了。</p>
<h2 id="No-3-人类观察员"><a href="#No-3-人类观察员" class="headerlink" title="No.3 人类观察员"></a>No.3 人类观察员</h2><p>一开始加他我是很犹豫的，虽然他资料显示是男生，可主页照片是个漂亮女生，不过人家回答我的问题很真诚，简直可以当范文了，所以冒着被掰弯的风险同意了他的申请：</p>
<img data-src="https://s2.loli.net/2022/05/28/BdmGiac5IYPKvVt.jpg" width="200" height="400" alt="范文"><span class="image-caption">范文</span>

<p>颤抖着手主动发出第一条消息，然后发现了他人类观察员的身份，他还展示了自己好友申请列表里的一串男生：</p>
<img data-src="https://s2.loli.net/2022/05/28/aB7ketPQbwJE5ul.jpg" width="400" height="400" alt="人类观察员"><span class="image-caption">人类观察员</span>

<p>厉害了厉害了，后来他说自己是教师，怪不得！人类灵魂的工程师来做人类观察员，不能更适合了，他说自己工资太低，非常羡慕程序员的高工资，想转行什么的，是个有趣的人哈哈哈哈，不过找对象就算了，还是让他专心观察人类吧。</p>
<h2 id="No-4-被动哥"><a href="#No-4-被动哥" class="headerlink" title="No.4 被动哥"></a>No.4 被动哥</h2><p>申请问题回答的真诚度仅次于3号男嘉宾，所以通过了他的交友申请，然后我就去忙了也没看聊天窗口，再次回来的时候他说：</p>
<img data-src="https://s2.loli.net/2022/05/28/ryekYvNdpa4A6LS.jpg" width="200" height="400" alt="excuse me?"><span class="image-caption">excuse me?</span>

<p>这种抱怨的语气是什么鬼？后来他说「我们都是被动的人」，又一起聊了会书和电影，就很干，之后他倒是找过我几次，但我已经没什么想聊的欲望了，然后就结束了。</p>
<h2 id="No-5-孤独患者"><a href="#No-5-孤独患者" class="headerlink" title="No.5 孤独患者"></a>No.5 孤独患者</h2><p>青藤上认识的男嘉宾，180+，有房有车有猫，长相清秀，写字好看，声音好听，还兼职婚礼主持。嗯，他为什么单身来着？</p>
<p>他先关注的我，我后来也关注了他，互关之后，我们就开始聊天了。<br>他说，自己一直比较享受孤独，最近刚做完一场手术，在恢复期，突然觉得有点凄凉，就来到了这个平台，真.孤独患者。</p>
<p>算是这些男嘉宾里比较能聊得来的，星座也跟我很搭，但是，他从来不主动找我聊天，每次都是我找他，这样几次之后，我累了，过了几天，我想，要不再争(wei)取(se)一(suo)下(mi)？然后就发现，人家已经注销了账号。。。</p>
<p>hummm…可能是外向的孤独患者，需要认可。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>网友见面</title>
    <url>/looking-for-the-one-11-15/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/WzHRtlw3O1qInhe.jpg">

<h2 id="No-11-宝宝"><a href="#No-11-宝宝" class="headerlink" title="No.11 宝宝"></a>No.11 宝宝</h2><p>是我在二狗上认识的第一个男嘉宾，刚开始一切都挺正常的。<br>程序员，位置离我很近，聊天感觉还不错。游戏里是个野王，正好我玩辅助，比较搭，一起开黑了几局，声音也挺好听(打游戏开麦来着)，所以刚开始印象挺好的，聊的也有来有回，会互相分享日常。</p>
<p>除了有时候对我发的表情包有一些诡异的reaction:</p>
<div class="tabs" id="reaction"><ul class="nav-tabs"><li class="tab active"><a href="#reaction-1">reaction 1</a></li><li class="tab"><a href="#reaction-2">reaction 2</a></li><li class="tab"><a href="#reaction-3">reaction 3</a></li><li class="tab"><a href="#reaction-4">reaction 4</a></li><li class="tab"><a href="#reaction-5">reaction 5</a></li></ul><div class="tab-content"><div class="tab-pane active" id="reaction-1"><img data-src="https://s2.loli.net/2022/05/28/hVBw53kxUzsupWE.gif" height="150" width="250"></div><div class="tab-pane" id="reaction-2"><img data-src="https://s2.loli.net/2022/05/28/PKoDVCEY85nfIq4.gif" height="150" width="220"></div><div class="tab-pane" id="reaction-3"><img data-src="https://s2.loli.net/2022/05/28/W2xjcrtby75i8zq.gif" height="150" width="270"></div><div class="tab-pane" id="reaction-4"><img data-src="https://s2.loli.net/2022/05/28/uhI2ZOljYSoTEmW.gif" height="150" width="230"></div><div class="tab-pane" id="reaction-5"><img data-src="https://s2.loli.net/2022/05/28/UHAw7QtgcC3ZMnY.gif" height="150" width="220"></div></div></div>

<p>再除了有时候又变身情话boy:</p>
<div class="tabs" id="情话boy"><ul class="nav-tabs"><li class="tab active"><a href="#情话boy-1">情话boy 1</a></li><li class="tab"><a href="#情话boy-2">情话boy 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="情话boy-1"><img data-src="https://s2.loli.net/2022/05/28/dyIERDg9M8nGmxB.jpg" height="400" width="270"></div><div class="tab-pane" id="情话boy-2"><img data-src="https://s2.loli.net/2022/05/28/5NUyvxbSqa4hmA3.jpg" height="380" width="230"></div></div></div>

<p>当然这些都可以先忽略，毕竟每个人对表情包的理解都不一样，就可能只是没get到我的点，至于情话boy什么的，我不往心里去就行了。</p>
<p>所以在聊了差不多一周以后，我们就约着面基了。<br>在周边一个商场，吃的烤肉(他推荐的)，见面之后感觉本人和照片有一些差距，不过正常，正常。<br>因为我是第一次面基所以很尴尬也不知道聊啥，基本上都是他在带话题，当然我也有很积极的回复。席间人家也一直帮我烤肉给我加菜之类的，挺细心。</p>
<p>饭后一起在路边散步，走了许久，瞎聊了很多有的没的，氛围也还好，后来就各自回家了，我想应该要AA吧，所以直接发个红包给他，结果被拒收了，说AA就是要跟他撇清关系(其实我寻思现在也没啥关系吧)，不过人家要这么想我也没办法就算了。</p>
<p>到这里，一切都还比较正常，然而马上就变得不正常了。<br>吃完饭的第二天，他说：</p>
<img data-src="https://s2.loli.net/2022/05/28/VnEs7vAIFDturS4.jpg" height="370" width="250" alt="「宝宝」"><span class="image-caption">「宝宝」</span>

<p>宝。。。宝？当时的我be like: </p>
<img data-src="https://s2.loli.net/2022/05/28/dEjnSeRK8912YMX.jpg" height="300" width="220" alt="我真的哭了"><span class="image-caption">我真的哭了</span>

<p>原本只是搓搓手想表达对这个称呼的不适，结果他又发了一个更诡异的reaction<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<p>我不理解，两个刚认识不到两周的人，只见了一次面，就已经发展到可以叫「宝宝」的程度了吗？是世界变化太快还是我太old school?</p>
<p>无论是什么，都让我觉得很下头，我想了想，可能是他有点太急于确定一段关系了，对我而言，我只是把他当作刚认识的一个朋友而已，所以没办法满足他的期待，当然也就没继续聊下去了，之前的饭钱还是AA了，最后我有跟他讨论过「宝宝」这个称呼：</p>
<img data-src="https://s2.loli.net/2022/05/28/tpUWESvfADYLy3K.png" height="100" width="220" alt="「正常」"><span class="image-caption">「正常」</span>

<p>他说这「很正常」，好吧看来是我不正常？🤷‍♀️。。。后来在二狗上看到他已经脱单了，可能是找到了他的「宝宝」？还是祝福他吧。</p>
<h2 id="No-12-小可爱"><a href="#No-12-小可爱" class="headerlink" title="No.12 小可爱"></a>No.12 小可爱</h2><div class="note info"><p>外企程序员，表情包大户，接梗小能手，情感学专家，B站住户，喜欢柯南。</p>
</div>

<p>第一个加微信的男嘉宾，刚开始聊天挺尬的。<br>比如同在外企，让我猜他的公司名字我没猜到然后就一整个尬住(其实挺有名的公司只是我平时不咋了解这些)，再比如+v之后竟然在聊平时工作都干啥然后又没话题了接着尬住。</p>
<p>虽然很尬，但是我们聊天蛮好笑的，他也很有梗，不仅懂我的梗还能举一反三，不愧是B站住户，而且他表情包超多，也完全能get我表情包的意思(和11号两个极端)，因为他的表情包都是可爱类型的，我很缺，所以没忍住要了一波图：</p>
<img data-src="https://s2.loli.net/2022/05/28/13yndpBl8OVUIYG.jpg" height="500" width="250" alt="真.表情包大户"><span class="image-caption">真.表情包大户</span>

<p>后来我觉得他的头像很像情头就问了一嘴，结果：</p>
<img data-src="https://s2.loli.net/2022/05/28/GEh6FCdntBTyOQH.jpg" height="450" width="200" alt="呵 男人"><span class="image-caption">呵 男人</span>

<p>天就这么聊死了。</p>
<p>断联了一周以后我发了个在家办公的票圈，他又来找我聊了(后来他说这是他跟女嘉宾的常用聊天套路)，由于玩梗和表情包以及工作背景相似的关系，我不得不说他是我所有男嘉宾里最能聊得来的，然后就见面约饭了。</p>
<p>因为平时我不咋出去吃饭，所以没什么地儿推荐，就约在了他住处附近的一个小广场，我打车去，他走着去。<br>第一印象？说实话除了他挺高的，其它的都跟预想的有点差距，可能我们太聊的来了导致我有一些滤镜，不过正常，正常。然后我们<strong>现场找</strong>了一家纸包鱼就坐下来吃了，可以说是非常的随意了。</p>
<p>接着就开始瞎聊一些有的没的，过了一会我才确定这是跟我在微信上聊天的人，然后因为是堂食，店里有几桌人，旁边还有几个聚餐的年轻人说话声音比较大，所以现场很嘈杂，有时候听不到他在说啥，我就一直嗯？嗯？导致他一脸疑惑的看着我，看表情可能在想我是不是耳朵有问题<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，其实我真的努力在听了。</p>
<p>饭后就在广场周围走着转圈消食，看到很多跳广场舞的大妈，队伍后边还有跃跃欲试的大爷，一起贫嘴调侃了一会，月黑风高，走了一段时间就各回各家了。</p>
<p>后来西安疫情爆发、封城，就一直在微信上聊天分享彼此的日常，还有王者开黑什么的，中间有很多搞笑的插曲：</p>
<div class="tabs" id="喜剧人"><ul class="nav-tabs"><li class="tab active"><a href="#喜剧人-1">喜剧人 1</a></li><li class="tab"><a href="#喜剧人-2">喜剧人 2</a></li><li class="tab"><a href="#喜剧人-3">喜剧人 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="喜剧人-1"><p>他注册了全民K歌听我录的歌，结果被我爸妈抓到了然后他们就访问了他的主页<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，接着他也抓到了他们然后反向访问，在他们的主页找到了我一些古早的照片。。。</p>
<img data-src="https://s2.loli.net/2022/05/28/Ep1gsoqe65iTABv.jpg" height="410" width="400" alt="其实我很尴尬"><span class="image-caption">其实我很尴尬</span>

<p>后来我在家里的小群里警告他们才作罢：</p>
<img data-src="https://s2.loli.net/2022/05/28/1gj5JSka6hmlTIV.jpg" height="240" width="250"></div><div class="tab-pane" id="喜剧人-2"><p>他们小区群里帮他相亲的邻居：</p>
<img data-src="https://s2.loli.net/2022/05/28/lqBE9jmvgQzafhC.jpg" height="400" width="400" alt="充满爱的世界"><span class="image-caption">充满爱的世界</span></div><div class="tab-pane" id="喜剧人-3"><p>又是邻居，封城的时候没有吃的然后主动来给他送：</p>
<img data-src="https://s2.loli.net/2022/05/28/iaJd6poBzNPqFR5.jpg" height="400" width="400" alt="羡慕.jpg"><span class="image-caption">羡慕.jpg</span></div></div></div>

<p>但是，我越聊越觉得他像。。。姐妹！很适合做女生的男闺蜜那种类型，跟他聊天经常笑到头掉，他自己也说在公司一直给同事做情感专家来着，所以我们后来还讨论了很多情感问题，甚至会和他一起吐槽别的男嘉宾。</p>
<blockquote>
<p>但也仅此而已，我们确实聊得来，但也只是聊得来。</p>
</blockquote>
<p>春节前终于解封了，就请他吃了顿饭，还在上次约的广场，本来打算现场找一家，但都关门了，所以两个人走去周边一个商场吃中餐，途中还是讨论彼此的男女嘉宾，但是聊着聊着，他突然哭。。。了？！我手足无措，不知道说点什么，然后他又好了，虽然不明白为什么，但我知道，不是因为我。</p>
<div class="note primary"><p>或许他自己都没有意识到，无论是他的头像，还是那些撒娇卖萌的可爱表情包，都有着另一个女生的痕迹，所以他是「小可爱」，也是她的「小可爱」。</p>
</div>

<p>本来觉得这种类型的交友除了在一起，最后的结局都只能相忘于江湖，但因为我们都觉得彼此挺能处的，所以现在算是朋友。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>世界的参差</title>
    <url>/looking-for-the-one-13-15/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/3ck8ZIgQKdAMj7S.jpg">

<h2 id="No-13-月光男孩"><a href="#No-13-月光男孩" class="headerlink" title="No.13 月光男孩"></a>No.13 月光男孩</h2><p>是我主动申请的第一个男嘉宾，国企工程师，985学霸，射手座，同年(比我小5个月🙉)。<br>因为看到距离非常近，只有500米，然后发现竟然在隔壁小区，主页照片看起来也是(chan)个(ren)精(jia)神(de)小(shen)伙(zi)，这还不得支棱起来？所以就冲了。</p>
<p>聊了会彼此的经历，主要是工作还有求学啥的，然后我发现他的ID出自《论语》，就又聊了聊喜欢看的书，初步感觉没啥槽点，是个积极向上的文艺青年，就加了微信。</p>
<p>+v的第一天我俩发现了一个离谱的事实(切到第二个tab看答案)：</p>
<div class="tabs" id="「天意」"><ul class="nav-tabs"><li class="tab active"><a href="#「天意」-1">「天意」 1</a></li><li class="tab"><a href="#「天意」-2">「天意」 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="「天意」-1"><img data-src="https://s2.loli.net/2022/05/28/aAWnBEGNTpVlwJv.jpg" height="450" width="200"></div><div class="tab-pane" id="「天意」-2"><img data-src="https://s2.loli.net/2022/05/28/gvLfcjibhy1Eqe4.jpg" height="450" width="200" alt="?!"><span class="image-caption">?!</span></div></div></div>

<p>事实就是我俩一个姓，这在平常可能不算什么，但我们的姓氏确实比较特殊，在百家姓里都排到了200多位，所以我从小到大除了亲戚，没遇见过同姓的同学朋友，可竟然在这里让我遇到了，而且我们的名字都是三字含玉，我俩还同岁，还住得这么近，不得不说非常有缘。</p>
<p>然而，我渐渐发现除了这样的缘分之外，我们没有一点相似之处，工作和生活也完全没有交集和共同话题。</p>
<ul>
<li>他会早上6点起床出门跑10公里，每天坚持健身，疫情期间还经常去做志愿者(虽然好像是单位要求的)，平时出去玩也大多会去逛逛公园山水、文物博物馆、寺庙之类。</li>
<li>他知道经纬度和树木的生长规律(说这个是初中地理)，各种诗句和成语随口而出也是普通操作。</li>
<li>他工作很忙经常加班，但也会每天看书至少一小时，还时常给我分享书中的内容，表达自己的见解，文学素养直接拉满，这个时候我经常接不上话，觉得自己像个文盲：</li>
</ul>
<div class="tabs" id="文盲"><ul class="nav-tabs"><li class="tab active"><a href="#文盲-1">文盲 1</a></li><li class="tab"><a href="#文盲-2">文盲 2</a></li><li class="tab"><a href="#文盲-3">文盲 3</a></li><li class="tab"><a href="#文盲-4">文盲 4</a></li><li class="tab"><a href="#文盲-5">文盲 5</a></li><li class="tab"><a href="#文盲-6">文盲 6</a></li></ul><div class="tab-content"><div class="tab-pane active" id="文盲-1"><img data-src="https://s2.loli.net/2022/05/28/w1MyaoinYG3sgQS.jpg" height="450" width="200"></div><div class="tab-pane" id="文盲-2"><img data-src="https://s2.loli.net/2022/05/28/XkerNJqnvo65cKi.jpg" height="450" width="200"></div><div class="tab-pane" id="文盲-3"><img data-src="https://s2.loli.net/2022/05/28/tS2nD5XJeGVU9fl.jpg" height="300" width="200"></div><div class="tab-pane" id="文盲-4"><img data-src="https://s2.loli.net/2022/05/28/Gwxto9l7USV2fXL.jpg" height="400" width="250"></div><div class="tab-pane" id="文盲-5"><img data-src="https://s2.loli.net/2022/05/28/qscwGnzlCLNafXH.jpg" height="450" width="200"></div><div class="tab-pane" id="文盲-6"><img data-src="https://s2.loli.net/2022/05/28/hWgSPY65dw742Ck.jpg" height="450" width="200"></div></div></div>

<ul>
<li>他的头像是自己拍的风景照，很少看朋友圈，偶尔发一条也会因为「老气横秋」的风格被吐槽，当我建议他换个头像的时候：</li>
</ul>
<div class="tabs" id="头像的故事"><ul class="nav-tabs"><li class="tab active"><a href="#头像的故事-1">头像的故事 1</a></li><li class="tab"><a href="#头像的故事-2">头像的故事 2</a></li><li class="tab"><a href="#头像的故事-3">头像的故事 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="头像的故事-1"><img data-src="https://s2.loli.net/2022/05/28/SO32jmFlCdZ68uo.jpg" height="400" width="200"></div><div class="tab-pane" id="头像的故事-2"><img data-src="https://s2.loli.net/2022/05/28/7ZAGMfshJUDk8ae.jpg" height="350" width="250"></div><div class="tab-pane" id="头像的故事-3"><img data-src="https://s2.loli.net/2022/05/28/JN5xB7sfwiF8oke.jpg" height="500" width="250" alt="让他做自己吧"><span class="image-caption">让他做自己吧</span></div></div></div>

<ul>
<li>他会每天给我发早安晚安，会因为加班太累没和我聊天跟我道歉，在这样的努力下(我也努力了)，我们的聊天记录没有一天断联。</li>
<li>他会经常向我吐露一些负面情绪，有时候还说一些莫名其妙的话，他说可能因为自己看书看到上头，想到那些书中人物可悲可叹的经历，所以老是不开心。</li>
</ul>
<p><em>第一次见面，是在两个月后。</em></p>
<p>刚开始聊天的时候，因为距离只有500米，我希望他可以主动提出过来面个基啥的(因为是我加的他算是主动过了)，然而没有，等了几天，我就在微信上暗示他了一下，也没有回应，心想可能是人家太忙或者觉得太早了？</p>
<p>然后就疫情封城了，在网上没有断联的聊了快两个月(参考上边的聊天记录)，解封之后，我又等了几天，他还是没有约我，眼看着马上就春节放假了，我说：</p>
<img data-src="https://s2.loli.net/2022/05/28/RZXwYmQ7iFzHfho.jpg" height="300" width="200" alt="约吧求求了"><span class="image-caption">约吧求求了</span>

<p>可算是见上面了，还是在周边的一个商场，他预约了一家比较安静的店，还问我忌口什么的，挺细心的。<br>第一印象？他是我所有男嘉宾里唯一没有照骗的男生，真人也很精神小伙，挺板正的一个小哥哥，刚进门的瞬间看到他低头看手机有点被帅到，聊天的时候氛围还算可以，吃完聊完我们就一起坐地铁回来了。</p>
<p>然后就是过年，回来上班，也继续在微信上聊天，还约着出来散了几次步。</p>
<div class="note info"><p>情人节</p>
</div>

<p>情人节晚上，他约我看了电影《奇迹笨小孩》(他说这是中宣部主推的剧情片)，因为是当天才约的，所以只能订到。。。第一排。</p>
<p>下班后我打车过去，路上很堵，到影院前500米车就走不动了，但他已经到了，所以我提前下车一路小跑到影院门口，看见他拿着一小束花在等我(说是在商场门口买的)。。。接过了花我们就进去了。</p>
<p>看了一天显示器的我，在努力适应第一排的观影视角，尽量不让自己被闪瞎，然后认真看剧情和他小声讨论。</p>
<p>看完电影，又一起坐地铁回家，一路上拿着那束花(虽然我很想把它藏起来)。</p>
<p><em>后来的一段时间，我很忙，他更忙。</em></p>
<p>他还是会给我发早安晚安，被拉去团建可能涉及到饮酒的时候，甚至会给我发消息说希望我别介意，可是，我真的不介意。</p>
<p>说实话，他身上有很多优点，比如健身、看书，确实很优秀，有时候觉得他很「老干部」，有时候又觉得他是个同龄人(上边聊天记录也可以看出来)，也会发一些表情包，很反差。</p>
<p>对待感情也非常认真主动，但是，我们确实没什么共同话题，我真的努力了。或许有腹肌的帅哥都注定不会属于小姐姐(腐眼看人基)？说实话我还偷偷磕过他和12号的CP(我错了)，不过一旦接受了这个设定。。。</p>
<p>怕他对我抱有太多期待，我想请他吃顿饭当面聊聊，但是他真的太忙了，约了好几次都约不上，就直接在微信上跟他说了：</p>
<img data-src="https://s2.loli.net/2022/05/28/492TiIohapMJkY8.jpg" height="400" width="400">

<p>我们持续两个多月的对话，终于开始断联了，后来我又约了他几次还是想请人吃个饭，毕竟之前约饭电影什么的都是他付的钱，怪不好意思的，不过还是约不上，只能这样了。</p>
<p>其实我很难找到一个词来形容他，后来选择了「月光男孩」，因为他经常给我发月亮(有人告诉我这就是喜欢的意思)，然后他本人也符合这个描述，像月光一样纯粹，柔和，但希望他以后可以多点开心的事情吧。</p>
<img data-src="https://s2.loli.net/2022/05/28/BoKSpAVMWgfUEIP.jpg" height="360" width="200" alt="月光男孩"><span class="image-caption">月光男孩</span>

<h2 id="No-14-表弟"><a href="#No-14-表弟" class="headerlink" title="No.14 表弟"></a>No.14 表弟</h2><p>一个不太熟的同事推荐给我她的表弟，虽然觉得和同事成为亲戚这件事不大可能，不过也可以认识一下，所以就加微信了，她说表弟「就是一个话比较少的人」，</p>
<p>其实不然，表弟说「话多话少依据对方的可爱程度而定」，喜欢看《JOJO的奇妙冒险》(据说喜欢看这个动漫的都是宝藏男孩)，因为我和坐旁边的同事都是稀有姓氏，他说「替身使者是会互相吸引的」。<br>由此可见，同事对自己的表弟误解很深，表弟也说「可能是我这几年和表姐交流的太少了」。</p>
<p>和表弟聊了动漫、番剧、电影、奥特曼、游戏卡、B站新梗，还有彼此的经历以及平时的生活爱好之类，感觉挺能聊的，所以两周后约了见面。</p>
<p>由于我们离得比较远，所以只能选择一个折中的地方约饭，所以我公交+地铁一路过去，天气有点热在外边等了一会，他出现了。</p>
<p>虽然我很不想用「见光死」这个词来形容男嘉宾，但表弟的外形真的不是我喜欢的类型，尬聊了很久还吃了顿人均一百的烤鱼：</p>
<img data-src="https://s2.loli.net/2022/05/28/zJiAb7TtUXoIslH.png" height="400" width="200" alt="谢谢您嘞"><span class="image-caption">谢谢您嘞</span>

<p>推完表弟，同事还给我推荐了一个跟她一个项目组的男生，说我们同岁，让我「双线操作」，她说人家「可可爱爱，白白净净」，我又信了，然后：</p>
<img data-src="https://s2.loli.net/2022/05/28/lQJEnABk9t1mWpG.png" height="400" width="200" alt="好可爱啊(微笑)"><span class="image-caption">好可爱啊(微笑)</span>

<p>我们这辈子的聊天就这样结束了。<br>我愿称这个同事为「冤种同事」，真的会谢好吗。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>人类大多都在寻找着什么吧</title>
    <url>/looking-for-the-one-15/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/oHPWpsVKeXS6yCO.png">


<h2 id="No-15-受伤的男人"><a href="#No-15-受伤的男人" class="headerlink" title="No.15 受伤的男人"></a>No.15 受伤的男人</h2><p>二狗上加我的男嘉宾，程序员，我们俩住的很近，还在同一个园区上班，生活轨迹高度重合，他说自己之前在不同城市辗转，混迹于各种互联网大厂，去年回西安还差点成为我的同事，但因为给的钱太少所以去了国内大厂内卷，不过比起他之前的工作已经不算很卷了。</p>
<p>喜欢打王者(重度)，正好我也经常打，所以一开始我们经常聊游戏，我是又菜又爱玩，人家是野王，不过我们从来没开过黑，因为那段时间我很忙懒得打，接着加了微信。</p>
<p>然后就发现我们竟然是老乡！蛮能聊得来，爱好也有很多相似，各种发言让人很有好感。后来我说想买个入门的游戏机，就入手了switch，结果他说也要买，现在我俩的switch都在吃灰(有点后悔分享给人家了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>)。</p>
<p>第一次见面，约了打羽毛球，在周边一个场馆，我其实觉得吃饭会比较好，感觉打球这种舒缓身心的活动，更适合跟熟悉的朋友一起吧，不过人家都约好了就去了。</p>
<p>嗯，真人和照片还是有些差距，不过正常，正常。<br>打了两个多小时的羽毛球，刚开始不太习惯，后来打着球身体舒展开了倒也自在，中场休息的时候就坐在一起聊些有的没的。<br>然后我觉得打球也不错！既能锻炼身体，还能观察对方体能，同时彼此也能展示更真实的一面，我对这次的活动由衷发出了赞叹，思考和下个男嘉宾要不也约着打球？</p>
<img data-src="https://s2.loli.net/2022/05/28/u9DxYqj6yGvSpmc.png" height="450" width="200" alt="瞧瞧瞧瞧"><span class="image-caption">瞧瞧瞧瞧</span>

<p>到这里我真的非常赞叹这位男嘉宾，瞧瞧这关心的话语，顺便不经意的夸赞对方，同时发出下次邀约，答应我，都学着点好吗？</p>
<p>这样又过了几天，打完球后的某个工作日，他说中午要约饭，因为是当天约的，我觉得有点突然，感觉事情不太简单，不过都在一个园区也挺好约，就走起来了，还想着这次我来掏钱，不过他说一会说，然后：</p>
<img data-src="https://s2.loli.net/2022/05/28/7qTifKpWledHBFJ.png" height="400" width="200" alt="我真的信了"><span class="image-caption">我真的信了</span>

<p>事情是这样的。<br>吃饭的时候一切正常，之后我们在园区里走了走，他突然说有件事要给我说，原来他和上个女朋友交往了好久，后来因为某个不可抗力(具体是啥不方便在博客里说了，不过和她父母有关)分开了。</p>
<p>要是因为感情破裂分开还好，但又不是，可要不顾这个「不可抗力」在一起的话，以后要面对很多困难，所以万般纠结之下，无奈分手。</p>
<p>他本人很讨厌这种被无法掌控的事操纵导致失败的感觉，觉得很挫败，不停在回想，所以一直以来状态都很糟糕，想着开始一段新感情或许会冲淡这种感觉。</p>
<p>于是他来到了二狗，前后也约了好些女生，但都没有进展，至于我？据他所说，我是第一个让他想倾诉这件事的人，因为觉得我人很不错，不想因为自己的状态影响我，所以想坦白一下交个朋友，换做别的女嘉宾，他说就是别的「处理方式」(就直接不联系了)。他对我说这些的时候，其实我很诧异，本来我也没想太多，不过既然人家分享了，我也表示理解，并适当言语宽慰一下。</p>
<p>之后他又给我发了上图的话，言语之真诚触动了我(我真的信了)，后来他又给我发过几次消息，我都礼貌回复，再之后他约我打球，我又礼貌拒绝，嗯，现在应该是要相忘于江湖了，祝他早日摆脱这种纠结吧。</p>
<h2 id="人类大多都在寻找着什么吧"><a href="#人类大多都在寻找着什么吧" class="headerlink" title="人类大多都在寻找着什么吧"></a>人类大多都在寻找着什么吧</h2><p>人类观察员已经营业半年了，除了这15位男嘉宾，其实我还遇到了更多「有趣」的人，同一座城，不同的人，形形色色的灵魂，或许会擦肩而过，或许会驻足停留，都在寻找着什么吧。可是，每个人都知道自己在寻找什么吗？我也无法找到答案，所以总是时而寻找，时而遗忘。</p>
<p>15号以后，我没有遇到更多的人了，感觉观察人类也是很大的精神内耗，而且这段时间一直厄运缠身，处理了很多杂事，还有很多的胡思乱想，没有精力去寻找了，暂且先停留一会吧。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>老实憨厚的程序员</title>
    <url>/looking-for-the-one-18-19/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/10/09/EePou4ctM9m26VL.png">

<div class="note info"><p>写完17号之后，我觉得只靠二狗这一个平台来认识男嘉宾路子太窄了，但又没有别的方式(社恐太难了)，为了打开点格局，我想到了之前被我注销账号的青藤之恋(所以其实格局也没有打开多少)，接着搞好账号，收拾心情，重新出发。<br>不久，我就在同一天内认识了18和19号，对比在这期间毫无进展的二狗平台，青藤之恋终于扳回一局。</p>
</div>

<h2 id="No-18-生活支线玩家"><a href="#No-18-生活支线玩家" class="headerlink" title="No.18 生活支线玩家"></a>No.18 生活支线玩家</h2><p>他，96年生人，20年毕业(说自己幼儿园的时候智商太低留级了)于某211本科，毕业后去某965养老企业打工，期间投资比特币撞上疯涨风口身价倍增，后来比特币暴跌错过收手时机又一身债务，大起大落后心灰意冷的打了段时间游戏麻痹自己，为了还债，现在是试用期中的华为程序员，没有996，只有8-11.5-6(他自己说的)。</p>
<p>除了还债，他说也想培养下自己的核心竞争力，做个手艺人，而不是像之前靠运气和歪门邪道(虽然我觉得后者也是手艺)，不过对比我这个在一家公司躺平四年的佛系青年，他毕业两年就能有这么丰富的经历，让我觉得很惭愧。</p>
<p>被他主页展示的rua破(rap)一整个吸引住，还有生活支线玩家的描述和鬼畜的照片，我敏锐的嗅到了素材的味道(不是)，然后点了关注，接着他也关注了我(可能被我的照骗吸引了？)，然后我俩就聊起来了。</p>
<p>他倒是很坦诚，说自己还在还债，现阶段可能不太适合找对象什么的，不过我觉得不打紧，毕竟我是个人类观察员，只看人，接着他说要不加个微信聊，我也觉得这小伙子不错就加了，然后继续微信聊天，对他有了更多的了解：</p>
<div class="note primary"><ul>
<li>他的朋友圈十分丰富(少见的比我丰富)</li>
<li>他全网只有一个马甲 好可怜(其实我也是)</li>
<li>他给自己做了一套表情包(蛮行为艺术的) 然后还老偷我表情包</li>
<li>他喜欢看日常番 顶级学者(跟我看甄嬛传有的一拼)</li>
<li>他跟我住一个小区！？</li>
<li>他喜欢逛超市买菜和养生(一把年纪了是该注意点)</li>
<li>他经常不吃早饭大半夜出去嗨骑电动车闯红灯又只有个玩具头盔(好嘛又不养生了)</li>
</ul>
</div>

<p>基于最后一点我建议他把主页的养生描述删掉，他说我知道的太多了晚上要炸我的楼，挺害怕的。</p>
<p>感觉我俩蛮能聊得来，以及对彼此有趣灵魂的认证，又在一个小区，我就想着说要不直接出来面基，他有些犹豫，说太热了，我不信，然后夏末的晚上9点，月黑风高，我洗了头穿了件长裙又摸索了件外套穿上出门(平时出门取快递的穿搭)去面基，集合点是小区幼儿园门口。</p>
<p>他本人长得并不鬼畜比较清秀，声音也蛮好听的，不像是那个扬言要炸楼的家伙。我们在小区里转圈圈瞎聊天，除了他毕业之后的经历，他的一打子爱好也非常让我赞叹：篮球、羽毛球、乒乓球、台球、游泳、游戏、番剧etc…，真.生活支线玩家。</p>
<p>天气太热了，穿着外套的我面带微笑和男嘉宾在热风中聊了一个半小时，回家后才算是活过来了，他也一身汗，真是辛苦了。</p>
<p>觉得这人挺能处的，就把我的博客分享给他看。之前也是，每次遇到一个挺能处的男嘉宾我都会让他看我的博客，这样才有更全面的了解，比如12号、13号(现在看来不太行)，不过认识第一天就分享的只有他，可能因为太聊得来了。他说很有趣，问自己是不是18号(现在是了)，还说写完之后给他发链接(会发的)。</p>
<p>然后就是互相分享日常，微信聊聊天之类的，我俩对话经常像小学生斗嘴，满好笑的，也很上头。后来的日子里，发生了很多奇幻的事儿。</p>
<div class="tabs" id="奇幻的事儿"><ul class="nav-tabs"><li class="tab active"><a href="#奇幻的事儿-1">奇幻的事儿 1</a></li><li class="tab"><a href="#奇幻的事儿-2">奇幻的事儿 2</a></li><li class="tab"><a href="#奇幻的事儿-3">奇幻的事儿 3</a></li><li class="tab"><a href="#奇幻的事儿-4">奇幻的事儿 4</a></li><li class="tab"><a href="#奇幻的事儿-5">奇幻的事儿 5</a></li></ul><div class="tab-content"><div class="tab-pane active" id="奇幻的事儿-1"><p><mark class="label primary">垃圾之交</mark></p>
<p>基于他8-11.5-6的还债时间(有时候没那么晚)，我俩会晚上11点多在小区楼下碰头，而这刚好是我平时去扔垃圾的点，所以我们就变成了「垃圾之交」，我扔垃圾，他扔他自己，扔完垃圾再在小区里遛会儿弯。</p>
<img data-src="https://s2.loli.net/2022/10/13/EXp1fOBhYmMxN5Q.jpg" height="470" width="200" alt="垃圾之交"><span class="image-caption">垃圾之交</span></div><div class="tab-pane" id="奇幻的事儿-2"><p><mark class="label primary">钥匙丢了</mark></p>
<p>有次我上班出门太急忘了拿钥匙，万幸还有放在公司的备用钥匙才回家，被他嘲笑，结果当天自己就把钥匙丢了，还问我能不能借宿(excuse me?)，我给他推荐了物业的开锁师傅，后来发现是他自己插在车上忘记拔了，被我反向嘲笑。</p>
<p>几天后，一个下雨的晚上。</p>
<img data-src="https://s2.loli.net/2022/10/13/yH2EgXn7ejc1PLi.jpg" height="220" width="200" alt="钥匙丢了"><span class="image-caption">钥匙丢了</span>

<p>开锁师傅还得一段时间才到，左手饮料右手烤鸡又没有伞的他，在雨中给我发消息描述了自己的境况，然后请求借我地方吃个饭，给手机充个电。</p>
<p>我很犹豫，大晚上让一个才认识一周的男生来我家这种事，想想就觉得诡异，可他把自己描述的有点惨，拒绝的话好像有些不近人情，一番纠结之后还是同意了，就这样，他成为了我一个人住的4年中第一个来我家的男生，非常的离谱和奇幻。</p>
<p>一起吃烤鸡喝饮料，还放了他喜欢的日常番来看，我的猫从头到尾一直躲进柜子里不敢出来，气氛也全程透着一丝紧张和尴尬(至少我是这样的)，后来开锁师傅到了，他也回家了。</p>
<p>后来我想了下，还是认为他这个请求不太有分寸感，其实有很多种方式可以解决他当时的境况，比如在楼下找家店坐或者在物业那坐会之类的，但我不觉得他是故意的，因为他脑容量有限应该想不了那么多。</p>
<p>不过这次之后，他再来我家就没那么多心理建设了，所以后来我们还一起玩过游戏看过甄嬛传，猫也逐渐熟悉了他的气味。</p>
<p>他在我家倒是挺自在的，有时我觉得尴尬还让我别紧张(到底是谁家！)，甚至给了我他家的备用钥匙，他说我也可以放他那，我拒绝了，就像他说要帮我吹头发一样，这种事还是要跟男朋友做比较好，就先算了。</p></div><div class="tab-pane" id="奇幻的事儿-3"><p><mark class="label primary">挡泥板</mark></p>
<p>第一次出去吃饭，是去周边的一个商场吃海底捞。</p>
<p>他说让我骑摩托带他，其实我俩认识的第一天他就表达了这个愿望，但我从没带过人，技术也马马虎虎真的不敢，就拒绝了。</p>
<p>然后他骑自己的电动车带着我，我没戴头盔，他还闯红灯上桥，坐在后边的我有一种心惊胆战的感觉，最后决定还是搏一把让他掉头回去我骑摩托带他好了，让他带上自己的头盔。</p>
<p>就这样，有了一个不怕死的挡泥板，我鼓起勇气完成了第一次骑摩托带人的体验，而且还在晚上。</p>
<p>整体上还好，除了中途在一个大路口熄了次火之外，总算是活着把男嘉宾带到商场后又送回了家，一路上最高在市内加到60多码，因为紧张都有些超速，他倒是很开心，坐在后面说很刺激，不过应该也挺害怕的，毕竟我起步换挡的时候技术都不怎么到位。</p>
<p>嗯，感谢他豁出命来让我有了第一次带人的体验。</p></div><div class="tab-pane" id="奇幻的事儿-4"><p><mark class="label primary">OnCall的一天</mark></p>
<p>某次约好出去放风筝，天气也不错，结果他临时加班，后来下午背着电脑来找我，说可以OnCall(有人找的话要随时响应的假期办公模式)，接着说服了不想出门的我(真的不容易)。</p>
<p>搜了一个附近的公园，我骑摩托载着背着电脑的他，他说自己平时很少这样来公园转，感觉很惬意。我们租了个双人单车，边蹬边唠嗑，比如彼此的成长经历情感经历还有他出柜的前女友，，，总之聊了很多，现在想起来甚至有些交浅言深了。</p>
<p>嗯，还聊了别的男嘉宾，以及表达了目前对他不太有感觉的想法。</p>
<p>公园回来后，天也黑了，他又提议说要不去唱K，我同意了。这对我来说很难得，因为我平时比较喜欢宅在家，就算出去玩也要天时地利人和才行(当然这天是我自己比较和)，他骑电动车载着我过去，我们一直唱到。。。半夜一点多，回程的路上车很少还骑上了机动车道，也是一次蛮奇特的体验。</p></div><div class="tab-pane" id="奇幻的事儿-5"><p><mark class="label primary">开会</mark></p>
<p>OnCall之后我们又聊了几次，我说话都很有分寸，之后的某天我也直接坦白了自己对他只是比较欣赏而已，他说：</p>
<img data-src="https://s2.loli.net/2022/10/16/PoYbarDwG8zQ4IR.jpg" height="490" width="200" alt="就这样吧"><span class="image-caption">就这样吧</span>

<p>后来他说要下班领宵夜，问我吃不吃水果给我带点，我想着之前还管过他几顿饭高低得补回来，不吃白不吃，就说好呀，然后等着他联系我下楼去取。</p>
<p>没想到，他直接来敲门，我开门拿了水果，他又说突然有个紧急的会议要开会了，我又不能给人关外边儿，就让他进来开会，还给他分享了家里的wifi密码。</p>
<p>然后，接下来将近一个小时的时间，他就在我家开会，一对一的会议他全程开麦，我也小心翼翼不敢出声，还贴心的给人家倒了杯水(我人也太好了)，在自己家如坐针毡，让我觉得非常魔幻。</p>
<p>后来会开完了把水果取出来一起吃，结果不！好！吃！就这样，便宜没占到还让人在我家白嫖了wifi和几集甄嬛传，亏大了，看来小便宜不能占。</p></div></div></div>

<p>后来我就不主动给他发消息了，当然他发我会回几句，就像普通朋友那样。之后他还约过我，我也委婉拒绝，但是我们聊天还是蛮好笑的，毕竟是个有趣的人呀。</p>
<p>我们确实有很多共同点，喜欢雨天，喜欢唱歌，喜欢斗嘴，有趣，他还听我的推荐去注册了二狗平台，然后出现在了我的日推男嘉宾里，，，但他的日常番我老是get不到笑点(是我无趣了？)，聊天的时候我抛出的一些想让他关心我的话头，他也从来没接上过。</p>
<p>因为住得近，后来也感觉当朋友处了没怎么打扮，所以和他见面的时候我基本上都是素颜。<br>他会经常11点多下班到家后约我出去玩，老年人都是拒绝的；会突然敲门来我家撸猫看剧，让我防不胜防；会经常用他的9键打字机发给我一些听不懂的话，弄的我一脸问号？？？总之，是个典型的射手座了，我觉得他老让我大半夜出去玩就是想找个人陪他而已。</p>
<p>尽管有着8-11.5-6的还债时间，他也会在下班后玩游戏，或者出去玩放纵自己，甚至会大半夜跑去郊区吹风，同时还能养生，这种精力真的让我很佩服。他说，我们都是活在瞬间的生物，但我不是，我活着还是要睡觉的。</p>
<p>最后一次见面，是我下楼去还他的游戏卡和备用钥匙，然后，就像他说的只能相忘于江湖吧。</p>
<img data-src="https://s2.loli.net/2022/10/16/ycH7fuZWwOz6A2k.jpg" height="410" width="200" alt="最初的起点"><span class="image-caption">最初的起点</span>

<p>人类大多都在寻找着什么吧，而他就是有趣的人和事。</p>
<h2 id="No-19-风光摄影师"><a href="#No-19-风光摄影师" class="headerlink" title="No.19 风光摄影师"></a>No.19 风光摄影师</h2><p>跟18号同一天认识的，他的故事就比较短了。</p>
<p>程序员，大学毕业后去澳洲ADL留学了两年，去年回国然后校招加入一家国企直到现在，工作跟我一样965比较闲。我也是一毕业就在外企工作，还恰好在澳洲的部门，公司有很多澳洲留学生，他还说校招的时候也投过我司的简历，但没有通过，我们还聊了一些有的没的，感觉跟他聊天还不错挺正常的，就加了他的微信。</p>
<p>他说自己喜欢摄影，看了他的朋友圈我发现何止是喜欢，也太专业了吧，每条都是他的摄影作品，在世界各地拍的，一整个风光摄影师：</p>
<img data-src="https://s2.loli.net/2022/10/17/IUXZyETB1RtFOV9.jpg" height="220" width="300" alt="品品"><span class="image-caption">品品</span>

<p>那段时间疫情有点反复，我们都在家办公，就聊了点在家办公摸鱼的事儿，还互秀厨艺。后面就分享下日常，过了几天到了周末，就约着面基了。</p>
<p>下雨天，他说要不去书店转转，听到这个点子我直接笑死，因为前一天18号还跟我说想约我去图书馆，因为他想跟别人不一样(之前我跟男嘉宾第一次见面都是吃饭来着)，然后今天他的点子就被别人用了(书店和图书馆我寻思也差不多)。</p>
<p>所以约在周边一个书店，我打车过去进门被拦住看核酸，可我那些天都没做，人非不让我进，这就尴尬了，发消息给男嘉宾，结果他说自己没有核酸也进来了，给我气坏了，可能他从地库进来没人看，然后我又进去问工作人员，这个时候男嘉宾正好从里面看到我了走过来，我就举报他没做也进来了，工作人员笑了笑然后就让我也进去了(早这样不好吗非让我举报别人！)</p>
<p>男嘉宾没有照骗就正常人，我俩的穿搭还都是浅色牛仔裤配白鞋挺一致，然后就在书店里边转边聊天，书店并不大，不一会儿就转完了，正好这时候雨也停了，他说要载我去公园转转，就又走起来了。</p>
<p>公园倒是很大，转悠了好半天，一起聊了很多彼此的经历之类的，发现我俩的人生一样的平淡，hummm…他好像比我更平淡一些，后来我聊不动了主要是他在聊自己留学那几年的事儿，我不时附和几句，找了家咖啡店坐着歇了会，也是相对无言有些尴尬。</p>
<p>坐了会，我发现天有些暗了雨也快下了，就说要不回家？他说好，然后就送我回家了，现在想来其实都到饭点儿了也没吃个饭啥的，可能俩人都觉着有些无聊吧，到家后俩人吐槽了下核酸政策，互道晚安。</p>
<p>第二天，我没联系他，他也没理我，嗯，是两个成熟的相亲人了，啊不对，我明明是人类观察员！所以观察的结果就是他是个正常人，然后，相亲很专业，看来经历了很多，Over.</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>喜欢和不喜欢其实都没道理</title>
    <url>/looking-for-the-one-16-17/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/08/07/Ly74AfgW3cOT1eM.png">

<h2 id="No-13-「月光男孩」"><a href="#No-13-「月光男孩」" class="headerlink" title="No.13 「月光男孩」"></a>No.13 「月光男孩」</h2><p>正如本系列 <a href="https://jmyblog.top/looking-for-the-one-15/#%E4%BA%BA%E7%B1%BB%E5%A4%A7%E5%A4%9A%E9%83%BD%E5%9C%A8%E5%AF%BB%E6%89%BE%E7%9D%80%E4%BB%80%E4%B9%88%E5%90%A7">上文</a> 所述，由于琐事缠身和精神内耗，我决定让人类观察员先歇业一会，谁想到不久后我就经历了 <a href="https://jmyblog.top/a-story-about-z/">一则小故事</a> ，对男性群体有了一些偏见，感觉相比较于女生，男生的「坏心思」还是很多的，我自认没有知人之明，只能暂时敬而远之，所以不想再认识新的男嘉宾了。</p>
<p>其实，在之前接触过的所有男嘉宾里，<a href="https://jmyblog.top/looking-for-the-one-13-15/#No-13-%E6%9C%88%E5%85%89%E7%94%B7%E5%AD%A9">13号</a> 给我的印象是最好的，后来我还会经常想到他，有时还会想到 <a href="https://jmyblog.top/looking-for-the-one-11-15/#No-12-%E5%B0%8F%E5%8F%AF%E7%88%B1">12号</a>，hummm…或许我只是单纯磕他俩的CP?也可能这就是喜欢的意思?(这个可能性比较大)</p>
<p>这样的想法不时浮现在我的脑海，在小故事之后更强烈了，可是12号已经被我处成姐妹了，他也有对象了(后来他说是假的骗我)，倒是13号有时还会找我聊几句，应该还有戏，其实之前是因为我感觉我俩聊不来才结束的，人家娃本身没啥硬伤，而且我俩还有「天意」(不知道是啥的请补前文)，几番纠结后，我又又冲了：</p>
<div class="tabs" id="冲了"><ul class="nav-tabs"><li class="tab active"><a href="#冲了-1">冲了 1</a></li><li class="tab"><a href="#冲了-2">冲了 2</a></li><li class="tab"><a href="#冲了-3">冲了 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="冲了-1"><p>先是打听了下他找对象的进展(很好没啥进展)，然后瞎聊会最近工作咋样、假期去哪玩了之类(铺垫一下)：</p>
<img data-src="https://s2.loli.net/2022/08/06/imjWChgfeRbXtZr.png" height="500" width="250" alt="全是套路"><span class="image-caption">全是套路</span></div><div class="tab-pane" id="冲了-2"><p>最后开门见山：</p>
<img data-src="https://s2.loli.net/2022/08/06/f9zMlce4JB7snPk.png" height="500" width="250" alt="就是冲"><span class="image-caption">就是冲</span></div><div class="tab-pane" id="冲了-3"><p>他说很突然，让我给他一个思考的时间，到了第二天：</p>
<img data-src="https://s2.loli.net/2022/08/06/JaUphuNdiFK4jQZ.png" height="380" width="250" alt="芜湖(挺会啊)"><span class="image-caption">芜湖(挺会啊)</span></div></div></div>

<p>然后我俩就继续聊了，分享日常之类的，比如他看书，我追剧；他健身，我撸猫；他早睡，我熬夜。啊对了，还聊到了上次看电影的事，我提了一些建议：</p>
<img data-src="https://s2.loli.net/2022/08/06/mRKwQfPIJzocgyV.png" height="480" width="250" alt="搓手手"><span class="image-caption">搓手手</span>

<p>确实是「更喜欢」，因为他会经常去图书馆博物馆啥的，我出去玩也不喜欢人多的地方，所以比起两个人出去看电影(用投影仪在家看不行吗)，还是图书馆博物馆更清净吧。</p>
<p>这样一周以后，我看他还没有约我的意思(虽说中间一个假期他去单位团建了，可就500米的距离晚上也可以约啊，好吧这很「月光男孩」)，想着是我提出要继续聊的，那就主动约他好了，然后就约他晚上在小区楼下一个火锅店吃饭，之前和朋友在那吃过感觉还行。</p>
<p>当天约的，因为距离不远，我还提前给商家打电话让留个清净点的包间。<br>晚上8点，他先到了，说包间没有空调，我去了之后才发现，所谓的「包间」并不是封闭的，离大堂很近也很吵，只有一台看起来年代久远的立式电风扇吹着毫无作用的热风。<br>这确实是我失察了，上次和朋友来的时候整家店只有我们一桌，并没有观察店内的布置，最后决定就在大堂里吃了，最起码有空调能凉快点。</p>
<p>我穿着家居服也没咋打扮(小区楼下挺近就没收拾)，他还是印象中帅气的精神小伙，聊了会最近彼此的生活和工作，刚开始氛围还行，直到我提到了最近公司发生的一些事情，他的反应表现出了我俩完全不一样的三观：</p>
<div class="tabs" id="三观冲突"><ul class="nav-tabs"><li class="tab active"><a href="#三观冲突-1">三观冲突 1</a></li><li class="tab"><a href="#三观冲突-2">三观冲突 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="三观冲突-1"><p><strong>领导说什么就是什么</strong></p>
<p><mark class="label info">事件：</mark>公司的员工A某在工作群里表达自己的合理权益，和leader产生冲突，对方怼他「不要自以为是」，另一位leader甚至当场让他暂停工作等通知，第二天A某就被赶出了项目组，这在公司引起了轩然大波。</p>
<p><mark class="label primary">我的想法：</mark>在我司文化里，A某是在维护自己的合理权益，言语并无不妥之处，而leader「不要自以为是」这句近乎人身攻击的话是非常不合适的，另一位leader的做法更是细思极恐，第一天让暂停工作，第二天A某就真的下项目了，需要仔细调查还A某一个公道。</p>
<p><mark class="label danger">他的想法：</mark>领导说什么A某就应该点头称是才对，怎么还敢跟领导顶嘴导致自己被下项目，怪他没和领导「处好关系」。</p>
<p>我理解他在国企和我司的文化不一样，但试图说服他理解我司文化(在我看来三观正常的做法)，我失败了，他完全不能理解我的想法而且坚持自己的想法是对的。</p></div><div class="tab-pane" id="三观冲突-2"><p><strong>Z某太笨了</strong></p>
<p><mark class="label info">事件：</mark>我提到了一则小故事里Z某的 <a href="https://jmyblog.top/a-story-about-SH/#%E5%BC%80%E5%A7%8B%E4%B8%8D%E5%AF%B9%E5%8A%B2">4个不对劲行为</a></p>
<p><mark class="label primary">我的想法：</mark>文章里已经说了。</p>
<p><mark class="label danger">他的想法：</mark></p>
<ul>
<li>追车事件：Z某是想跟在我后面让我带着他走(excuse me?)</li>
<li>朋友圈点赞事件：Z某只是对一个骑摩托的女生表示好奇(excuse me?!)</li>
<li>喝东西事件：Z某有问题但做法太笨了，换做他会用别的理由先把我骗出来再说别的(excuse me?!!!)</li>
</ul>
<p>如果说上一个三观冲突我还可以理解是因为工作环境不一样，这里我完全不能理解和接受，甚至觉得他有些「金玉其外」了，和Z某是一类人而且比Z某更可怕，非常下头，也不想跟他争辩了。</p></div></div></div>

<p>火锅店里的人逐渐多了起来，后面还有几桌划拳的醉酒男，我看着对面还在说Z某笨的男生，眼中却只有另一个和他外表不相符的灵魂，没了继续了解的欲望。<br>其实，这不是我第一次发现他「表里不一」了，在之前的接触中，他也有一些让我下头的瞬间，只是没这次下头那么彻底：</p>
<div class="tabs" id="下头"><ul class="nav-tabs"><li class="tab active"><a href="#下头-1">下头 1</a></li><li class="tab"><a href="#下头-2">下头 2</a></li><li class="tab"><a href="#下头-3">下头 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="下头-1"><p>他的朋友圈背景是「人生的路就像内裤，哪一条不是自己选的？」，和他「饱读诗书」的人设不太相符。</p></div><div class="tab-pane" id="下头-2"><p>为了表现自己并不是古板单一，他给我发了一些黄色的表情包动图，说是从前在班级群里拿的(所以为什么现在还留着?!)，在我表达出不适后，他向我道歉：</p>
<img data-src="https://s2.loli.net/2022/08/07/EOkRC4jmALGTNW8.png" height="520" width="250" alt="辣眼睛"><span class="image-caption">辣眼睛</span></div><div class="tab-pane" id="下头-3"><p>他给我展示自己小区里的两条流浪猫，在我感叹猫咪都有伴后，他说其中一条怀孕了还给我发了之前两条猫在一起交配的图片(说是之前同事拍的)：</p>
<img data-src="https://s2.loli.net/2022/08/07/I7zLGXYDARHfPvC.png" height="520" width="250" alt="。。。"><span class="image-caption">。。。</span></div></div></div>

<p>两个人的火锅吃剩了不少菜，打包回去还能炒几盘，本来说好我请客的，但他硬是抢在我前面买了单，我没有多说什么，只在回家后把饭钱转给了他，第二天他才收下，还说自己昨晚吃完拉肚子，害，真是难为他了：</p>
<img data-src="https://s2.loli.net/2022/08/06/WU5KuDvazyoJCVl.png" height="470" width="250" alt="“月光男孩”"><span class="image-caption">“月光男孩”</span>

<p>这是我和「月光男孩」的最后一次聊天，后来我俩都心照不宣的没有联系对方，可能确实是因为三观不一致吧，也可能是他怕我再约他吃饭给他下毒<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>(怕了怕了)，总之我的直觉还是很对的，有的人聊不来就是聊不来，再怎么聊也没有结果，我彻底死心了，至于12号，还是做姐妹吧。</p>
<h2 id="No-16-就业咨询"><a href="#No-16-就业咨询" class="headerlink" title="No.16 就业咨询"></a>No.16 就业咨询</h2><p>二狗上加到的帅哥，计算机专业研究生，比我小一岁，还在读研，我俩主页照骗上穿的衣服是同款，有种情侣装的感觉hhhh，不过我严重怀疑他是来找我做就业咨询的，毕竟我搬砖都快4年了，而他还要再上二年学。</p>
<p>他问我西安计算机的就业情况，说因为我俩一个行业所以想认识一下多交流交流，还说自己本科是c9高校所以研究生随便上了个211(一些凡尔赛)。。。当然我们还有聊别的，比如他本科在华为打码的同学以及他自己毕业后的去处，再比如他已经开始有后移迹象的发际线和脱发困扰。</p>
<p>他聊天蛮有梗的，挺逗，除了同款衣服之外我俩的车也是一个牌子(他的电动车，我的滑板车)，平时也会互相分享日常，比如他健身，我搬砖；他上课，我下班。<br>他的朋友圈有很多约拍(他拍别人)还有自己的自拍照，hummm…不得不说挺帅的，他的外形长相很符合当下小鲜肉的主流审美，可以去参加选秀节目的那种。</p>
<p>周末他约我出去，我没有推荐的地方(自从13号被我毒的拉肚子之后我决定以后就让男嘉宾推荐面基地点)，他想约在市中心商圈，我想了想，相比于顶着大热天公交转地铁一小时去人多的地方只为一睹帅哥容颜这种事，还是宅家比较好，就拒绝了。</p>
<p>下一个周末，我约他，他学校离我住处也挺近的，就约在中间的商场见面，他说下午4点上完课才有空，我说可以，想着到时候再约时间，因为4点也挺热的，没想到他以为就约的4点，然后：</p>
<img data-src="https://s2.loli.net/2022/08/07/CVxHsSlfUh95z3Q.png" height="470" width="250" alt="?!"><span class="image-caption">?!</span>

<p>一下给我吓醒了，一番交涉之后还是决定去赴约，毕竟人家打着的20分钟过来也挺不容易的，于是刚睡醒的我，换衣服化妆打车20分钟后出现在帅哥歇脚的奶茶店，在这之前，他已经等了我半小时了：</p>
<img data-src="https://s2.loli.net/2022/08/07/GlECe59bYonRrps.jpg" height="400" width="250" alt="我错了真的"><span class="image-caption">我错了真的</span>

<p>外面的天气真的很热，虽然我是打车过去，但由于歉意加上心急也出了一身汗。<br>找到了一楼的奶茶店，想从外面推开门进去，却发现门被锁上了，带锁的门是透明的，里面不少人被我的动静吸引了过来，奇怪的看着我，有种社死的感觉，我才意识到只有商场内部的门是开的，于是又从商场大门进去找到奶茶店，下午5点整，我出现在了帅哥眼前。</p>
<p>第一反应是幸好帅哥的位置看不到我刚才社死的场景，然后就道歉毕竟因为是自己没有说清楚导致人家等了半小时，然后帅哥真人也很帅，有点像焉栩嘉(除了头发没那么浓密)，确实适合去选秀。</p>
<p>我本来想着坐一会吃个饭逛逛商场啥的，没想到我们只聊了10分钟天就结束了，而且宛如就业咨询现场，他一直在问我工作上的问题，比如我在什么公司、和华为比怎么样、年薪大概多少(这是可以问的吗?)、应届生可以拿多少、西安这边有什么值得去的互联网公司等等，由于心有歉意我都很细致的回答了他。<br>10分钟之后，他说我来得太晚了，本来可以多聊一会的，但自己和朋友还有约要去别的地方一趟，就走了，走了，了。</p>
<p>讲道理，虽然是我迟到了，但你有事可以提前说啊，改天约也行，就让我着急忙慌的过来做了10分钟就业咨询?!真就大无语，也太不会来事儿了吧，长得帅就可以为所欲为吗？我长得美我说什么了吗？</p>
<p>接下来的时间，我寻思反正来都来了，给自己买了杯奶茶，坐了一会冷静了下，跟一个姐妹疯狂吐槽了一会，在商场里转了转买了点东西就回家了。</p>
<p>后来我想着得不到人赚点内推费也是不错的，就把公司的招聘链接发给他，还帮他问了最近的实习生岗位，很遗憾并没有，而且他也不是应届生，所以感觉内推费也🈚️了，挺亏的。</p>
<h2 id="No-17-羊羊"><a href="#No-17-羊羊" class="headerlink" title="No.17 羊羊"></a>No.17 羊羊</h2><p>见完16号的同天晚上，我又和17号男嘉宾面基了。</p>
<p>想不到什么「特别」的描述，就用他的网名做标题吧。<br>事情是这样的，他在我和16号约见面的同天中午加了我，浅聊了下发现他就在我小区旁边的一个厂子上班，是车企工程师，住的也很近。</p>
<p>和16号就业咨询会结束后回家继续聊天，他还猜出了我的公司名字说有朋友也在我司，就挺巧，也算聊得来，因为离得近他说要不晚上出去遛个弯，我还沉浸在16号的阴影中，觉得换个心情也不错就答应了。</p>
<p>然后就是+v详聊见面时间和地点，晚上8点半，男嘉宾到我小区楼下，我俩一起打车去了下午见16号的同一个商场吃饭，衣服都没换的我，看到那家奶茶店，觉得人生真的挺drama.</p>
<p>吃饭过程挺愉快的，菜没剩下价格也很合适，聊的很轻松自在，吃完饭外边已经凉快多了，决定散步走回去，一路上继续聊彼此的各种经历，还有小型认车标大赛(毕竟是车企工程师嘛)，听他讲各种品牌车型的趣事等等，晚上10点半才到家，总之，完全驱散了16号给我的阴影。</p>
<p>啊对，第一印象，他的长相和上面两位当然不能比，甚至没有到达平均分(他说之前约过一个女生，结果对方在地铁口看到他直接说自己不舒服走了，可能是丑到人家了&gt;.&lt;)，身高体型倒还不错，戴上口罩可以装作是个帅哥。</p>
<p>不过我对长相已经不是很看重了，经历了一则小故事以及重新认识了月光男孩，感觉金玉其外的人太多了。<br>他有一个很大的优点，他的大学专业以及现在的工作，都是因为喜欢才选择的，之前还参加过大学生方程式比赛，在散步回家的路上听他讲自己的专业和工作，感觉整个人都在发光。<br>所以这个优点就是他知道自己喜欢什么，并且在干着自己喜欢的工作。</p>
<p>这个优点在我看来很了不起，因为没几个人可以做到，甚至没几个人知道自己真正喜欢干什么，就像我一样，专业也好，工作也好，都是随波逐流的选择，根本谈不上喜不喜欢，所以我觉得他很不错。</p>
<p>第一见面后，可以感受到他对我的印象非常不错(我四sei呀)，说自己很开心，还夸我可爱，当天晚上就问我的恋爱史，以及期待的恋爱模式、生气的话是冷战还是吵架等等，虽然觉得有点快但还是一一回答他了，在得知我一个人住还有switch时，他说以后可以来找我玩(?!)：</p>
<img data-src="https://s2.loli.net/2022/08/07/N5T6W9ULpzEmY7B.png" height="500" width="500" alt="激动的男嘉宾"><span class="image-caption">激动的男嘉宾</span>

<p>后面就是在微信上瞎聊，分享日常，我推荐他看甄嬛传(竟然还没有人看过甄嬛传！羡慕他有70多集可以看)，他看过之后经常跟我讨论剧情，我还把一则小故事讲给他听，他说我做的很对(终于碰到个三观正常的了)，后来还约着看过一次电影，吃过一次饭，来来回回的也算是AA了，当然主要是人家约我，我就掏个钱。</p>
<p>再后来就没有后来了。</p>
<p>怎么说呢，他真的很好，三观正常又有大优点，也能聊得来，我也尝试多跟人家接触了，但还是没有那种喜欢的感觉，就只是觉得这人挺能处。<br>发觉这一点之后，他再约我我就没有去了，回复消息也越来越少，说话也更有分寸感，他可能也慢慢感觉到我的态度，没有再主动联系我了，就是逐渐相忘于江湖吧。</p>
<p>也许不喜欢一个人就像喜欢一个人一样，都没有什么道理，如果非要说一个我为什么不和17号在一起的理由，可能是我们俩不够势均力敌吧。</p>
<h2 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h2><p>啊啊啊，西安的天气真的太热了，最近每天都高温预警，出去一趟感觉体表温度都40+了，空气都是烫的，没有空调真的不能活，更别说和男嘉宾约会了，而且现在手上没有新的男嘉宾了，不过我会努力的！</p>
<div class="note info"><p>一些题外话：人类观察员营业太久了，说实话我现在更多的不是抱着找对象的态度去认识男嘉宾，而真的只是观察人类而已，每次认识一个人，我都想看看他什么时候开始「不对劲」。。。<br>不过我觉得有个朋友说的话很有道理：「当你不是为了找对象而做这件事的时候，没准真正的人正在悄悄的出现」，嗯，但愿他说的对。</p>
</div>]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>单身都是有原因的</title>
    <url>/looking-for-the-one-6-10/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/al8tGVduY54c3Oi.jpg">

<h2 id="No-6-人在美国"><a href="#No-6-人在美国" class="headerlink" title="No.6 人在美国"></a>No.6 人在美国</h2><p>二狗上加我的校友，在美国哥伦比亚读博。<br>后来我们还加了微信，因为时差，我睡觉的时候他刚醒，他睡觉的时候我在搬砖，我们之间的对话大概是这样的：</p>
<img data-src="https://s2.loli.net/2022/05/28/PYILeEtGQSc9W1h.jpg" height="400" width="250" alt="别爱我没结果"><span class="image-caption">别爱我没结果</span>

<p>现在是彼此朋友圈的点赞之交。</p>
<h2 id="No-7-飞行员"><a href="#No-7-飞行员" class="headerlink" title="No.7 飞行员"></a>No.7 飞行员</h2><p>同事介绍的飞行员小哥哥，人不错！聊天也没有槽点，很主动，有来有回的聊了一段时间。</p>
<p>但问题在于我们异地，而且他工作很忙，人家又在考虑飞国际，我们生活上的交点就更少了，我劝他在当地或者公司找个同事，可他认识的同事大多是飞行员(男生)，找空姐也不容易发展，因为每次飞遇到的人都不一样，无果，只能祝他幸福了。</p>
<p>不过飞行员真的好酷！</p>
<img data-src="https://s2.loli.net/2022/05/28/ldshUAJ4S6GWzQe.jpg" alt="夜幕(飞行员视角)"><span class="image-caption">夜幕(飞行员视角)</span>

<h2 id="No-8-音乐小王子"><a href="#No-8-音乐小王子" class="headerlink" title="No.8 音乐小王子"></a>No.8 音乐小王子</h2><p>华为的程序员，每天加班回到家还得聊天找对象，我经常觉得他很心酸。</p>
<p>在二狗的纸飞机认识的，背景是我有段时间在二狗上吃瓜太多狗粮不够了，所以发个纸飞机问下大家都是咋获得狗粮的，然后就解锁了交友新姿势，因为不用加好友就可以直接在纸飞机聊起来。</p>
<p>聊了几句他说要加我微信，因为平台规则是不能在这里发联系方式什么的，我怕被抓就让他发:</p>
<img data-src="https://s2.loli.net/2022/05/28/kOfXMHuWEFYgIRJ.jpg" height="500" width="250">

<p>在微信上互相交流了下个人基本信息，开始了两个互联网人之间的对话：</p>
<img data-src="https://s2.loli.net/2022/05/28/6U8bYIasKOH3Zme.jpg" height="500" width="250">

<p>聊到爱好，他说自己喜欢音乐，在学乐理什么的，然后推荐了一首歌给我，因为我唱歌还不错就让我唱这首，我录了歌发给他，然后问他还有什么别的歌推荐，就没有然后了(被我的美妙歌声震慑住了？)。。。<br>一个月之后：</p>
<img data-src="https://s2.loli.net/2022/05/28/B5iE947cS3RaYAj.jpg" height="500" width="250">

<p>他又来给我推荐歌了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，真.一月一首，后来我劝他别找对象了，醉心于音乐吧，时间一长肯定大有所成[手动狗头]</p>
<h2 id="No-9-阿汤哥"><a href="#No-9-阿汤哥" class="headerlink" title="No.9 阿汤哥"></a>No.9 阿汤哥</h2><p>在青藤认识的男嘉宾，后来加了微信。<br>他朋友圈的背景图是「努力只能及格，拼命才能优秀」，签名是「当你足够努力，幸运总会与你不期而遇」，聊天的时候他说：</p>
<ul>
<li>「优秀的人太多了，所以要和自己比，比昨天优秀就是最棒的」</li>
<li>「因为疫情，也能从侧面提醒人们珍惜当下的幸福生活」</li>
<li>……</li>
</ul>
<p>闻到鸡汤的味道了吗？所以是阿汤哥：</p>
<img data-src="https://s2.loli.net/2022/05/28/Yx39RJXTQnaKowk.jpg" height="380" width="250">

<p>接下来无奖问答，请问下图中他在排队做什么(切到第二个tab看答案)？</p>
<div class="tabs" id="无奖问答"><ul class="nav-tabs"><li class="tab active"><a href="#无奖问答-1">无奖问答 1</a></li><li class="tab"><a href="#无奖问答-2">无奖问答 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="无奖问答-1"><img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/new.gif" height="520" width="250"></div><div class="tab-pane" id="无奖问答-2"><img data-src="https://s2.loli.net/2022/05/28/T9hdpSaYVJZv4yg.jpg" height="500" width="250" alt="我觉得没救了"><span class="image-caption">我觉得没救了</span></div></div></div>

<p>别装了，我知道你们跟我一样，看完只会猜到一些「不可描述」的事情。。。<br>总之阿汤哥很励志，但我们真的不合适，所以只能让他去找别的女嘉宾，然后祝他成功！</p>
<h2 id="No-10-得不到的男人"><a href="#No-10-得不到的男人" class="headerlink" title="No.10 得不到的男人"></a>No.10 得不到的男人</h2><p>刚开始看到他是在二狗，主页照片非常的小奶狗(虽然人家年纪比我大)，后来在青藤上查看日推男嘉宾的时候又碰见了，这可不是缘分吗？然后就互相关注聊起来了。<br>他说自己找对象已经自闭了，我就鼓励他不要放弃，说我俩星座很搭要不试试，就再也没有收到回复了。<br>我(wei)不(se)死(suo)心(mi)，后来在二狗上碰到又加人家好友尬聊，但聊了几天还是只有我在主动找话题，真的好累，所以说这位是我得不到的男人。<br>其实得不到的男人还有很多，比如5号，又比如很多男生直接拒绝我的好友申请，拒绝原因大多是「没有眼缘」(<del>可能</del> 是说我丑？)，要不我考虑去整个容吧。。。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>二狗平台</title>
    <url>/looking-for-the-one-er-gou/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/ORMnk4yZsSmg5Vf.png">


<h2 id="初印象"><a href="#初印象" class="headerlink" title="初印象"></a>初印象</h2><div class="note info"><p>二狗平台的全称是「二狗单身青年自救」平台，logo是一只狗子。<br>在朋友推荐之前，我并没有听说过，也没见过广告之类，不过这个名字非常接地气了，单身青年不就是单身狗吗？而且「自救」用在这里简直精准，所以这个小程序听起来像社恐青年找对象的福音。</p>
</div>

<h2 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h2><p>还是填好个人信息之后，进入小程序。<br>二狗的4个菜单栏和青藤之恋差不多，但界面设计多了一丝萌感，而且看到的功能点很多，不过一下子推给用户，反而让人有一种眼花缭乱的感觉。</p>
<h3 id="推荐"><a href="#推荐" class="headerlink" title="推荐"></a>推荐</h3><p>滑动分页，这个菜单目的只有一个，用各种方式认识男嘉宾。</p>
<h4 id="系统推送"><a href="#系统推送" class="headerlink" title="系统推送"></a>系统推送</h4><p>系统每天推荐5个男嘉宾，觉得合适可以加好友、关注，或者感觉自己配不上的话还可以推荐他上墙(下文介绍)：</p>
<img data-src="https://s2.loli.net/2022/05/28/oVPdQa7GZkOCfTN.jpg" alt="系统推送"><span class="image-caption">系统推送</span>

<h4 id="单身广场"><a href="#单身广场" class="headerlink" title="单身广场"></a>单身广场</h4><p>此外还有进入「单身广场」的入口，方便寻找心仪的男嘉宾，是我的吃瓜场地1：</p>
<img data-src="https://s2.loli.net/2022/05/28/JKSxWMsLyOQ87ue.jpg" alt="单身广场"><span class="image-caption">单身广场</span>

<p>可以筛选地区和性别，这里我就要吐槽一下，地区选项很少，很多城市都归类在其它里面，看起来很不方便，希望未来可以提供更多的城市筛选。</p>
<h4 id="推荐上墙"><a href="#推荐上墙" class="headerlink" title="推荐上墙"></a>推荐上墙</h4><p>这里展示用户所在地区，每天被推荐次数最多的10个男嘉宾，是我的吃瓜场地2:</p>
<img data-src="https://s2.loli.net/2022/05/28/QKmqcVPn9TdvuRi.png" height="400" width="200" alt="推荐上墙"><span class="image-caption">推荐上墙</span>

<h4 id="纸飞机"><a href="#纸飞机" class="headerlink" title="纸飞机"></a>纸飞机</h4><p>也可以通过发纸飞机的方式认识男嘉宾，不过这个是匿名的，收到纸飞机的人只能看到大概的信息，如果聊的投缘可以解锁看资料加好友什么的：</p>
<img data-src="https://s2.loli.net/2022/05/28/z6r5I37nN4XTpQf.png" alt="纸飞机"><span class="image-caption">纸飞机</span>

<p>有次想加一个小哥哥，但是狗粮(下文介绍)不够了，我想问大家有什么方式可以拿到狗粮，所以发了一个纸飞机，结果发现了新大陆，原来不加好友也能这样聊起来(上图右)。</p>
<h4 id="星球聊天室"><a href="#星球聊天室" class="headerlink" title="星球聊天室"></a>星球聊天室</h4><p>这里是一些情感话题的讨论直播间，没去过。</p>
<h3 id="星球"><a href="#星球" class="headerlink" title="星球"></a>星球</h3><p>这里和青藤之恋的「村口」页面差不多，展示嘉宾们发的动态，简单来说就是大型吃瓜现场：</p>
<img data-src="https://s2.loli.net/2022/05/28/qwyBQfOJtSce5rv.jpg" height="400" width="200" alt="星球"><span class="image-caption">星球</span>

<h3 id="消息"><a href="#消息" class="headerlink" title="消息"></a>消息</h3><p>可以看到好友申请、聊天列表，和一些系统消息，是故事开始的地方，尤其是聊天页面，有已读功能，聊天文本框的place holder也很耐人寻味「主动一点，让故事发生」哈哈哈哈，可谓是用心良苦了：</p>
<img data-src="https://s2.loli.net/2022/05/28/RGK1QOEL9oWNMZv.png" alt="消息"><span class="image-caption">消息</span>

<p>不过这个文本输入框有一些可以优化的点，它不能换行，而且文本多的时候也不能滑动编辑，就很不好用。</p>
<h3 id="我的"><a href="#我的" class="headerlink" title="我的"></a>我的</h3><p>个人信息和系统设置页，能看到最近来访和关注自己的嘉宾，啊，这里叫粉丝，也可以在匹配设置里指定系统推送男嘉宾的偏好(不用充会员！！！)，还有一个三观问答，男嘉宾申请加好友的时候需要回答问题：</p>
<img data-src="https://s2.loli.net/2022/05/28/bZosGQgUhlAkjau.jpg" height="400" width="200" alt="我的"><span class="image-caption">我的</span>

<p>在消息页面通过男嘉宾的交友申请后，我们就会互关，所以刚开始我只关注了跟我聊天的男嘉宾。后来我又去单身广场和上墙的男嘉宾里关注了好多小哥哥，他们有的会回关，有的也会加我好友，因为就算互关了也不能直接聊起来，还是得先发起交友申请。</p>
<p>再后来，通过吃瓜，我关注的小哥哥越来越多，我开始发现这个关注也不一定是喜欢人家，感觉跟关注明星的粉丝心理差不多，就是赞一个的意思。</p>
<p>这里也可以设置自己的情感状态，非常细节了：</p>
<img data-src="https://s2.loli.net/2022/05/28/cFOrRsTHN2VqepQ.png" alt="情感状态"><span class="image-caption">情感状态</span>

<p>最后就是个人信息，还是和青藤之恋差不多，需要传照骗，做学历和身份认证，比青藤多了一个工作认证，非常靠谱了；还有个人基本信息(昵称/年龄/星座/身高/职业)，二狗这里不需要展示收入，可能还是想少一些物质吧，很赞！</p>
<img data-src="https://s2.loli.net/2022/05/28/ofU4Vc58GQB9HxC.png" alt="个人信息"><span class="image-caption">个人信息</span>

<p>再然后就是一些自我介绍、兴趣爱好、家庭背景之类的描述，以上也都需要系统审核，不过和青藤之恋的打分评价不同，这里是分青铜、白银、黄金三个等级来评价用户信息真实性和完整度，有种打游戏冲关的感觉，所以我很快就到了黄金哈哈哈<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<h2 id="狗粮"><a href="#狗粮" class="headerlink" title="狗粮"></a>狗粮</h2><p>青藤之恋有「青藤币」，二狗平台也有「狗粮」，先从名字上来看就很接地气了，对比不适合穷逼的青藤币，狗粮的获取则非常容易：</p>
<img data-src="https://s2.loli.net/2022/05/28/ut1PYsAcLBHTwxV.jpg" alt="狗粮"><span class="image-caption">狗粮</span>

<ul>
<li>先说获取：首先注册的时候就会送狗粮红包200+，然后之后填个人信息、关注公众号也会送狗粮200+，再加上每日签到，其实就已经够用了。</li>
<li>然后花费：解锁粉丝和访客都只需要20狗粮，解锁匿名动态也只需要10狗粮，加好友是花费狗粮最多的操作(非常感谢加我的男嘉宾了)，但也就100狗粮，所以完全可以满足我找对象和吃瓜的需求。</li>
</ul>
<p>而且就我发纸飞机调研得到的结果来看，大家都觉得狗粮够用，部分用户还说自己狗粮都用不完。。。，然后我尝试购买狗粮，结果人家直接给我一个弹窗(上图2)提示买不了，太实诚了。</p>
<hr>
<div class="note primary"><p>以上就是我在「青藤之恋」和「二狗」平台小程序的体验，hummm，还有一些职业病，因为感觉写成了软件测评的样子🙈，总体来看，我是比较看好狗子这个平台的(写这么多是不是得要点广告费哈哈哈哈)，所以我遇到的男嘉宾基本上都来自这个平台，接下来的博客会讲我和他们的故事。</p>
</div>

<p>祝我脱单成功。</p>
<hr>
<p>一个多月过去了，由于西安的疫情，寻找男嘉宾大计进展缓慢，没有太多故事可以更新，所以暂时搁置这个系列，等我找到了男嘉宾，或者像那个小红书的博主一样放弃了，再来回顾我和他们的故事吧，我希望我的结局是前者🙈</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>青藤之恋</title>
    <url>/looking-for-the-one-qing-teng/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/05/28/kbpjsQcq6HR1Tg9.jpg">

<h2 id="一些缘起"><a href="#一些缘起" class="headerlink" title="一些缘起"></a>一些缘起</h2><h3 id="来自老母亲的担忧"><a href="#来自老母亲的担忧" class="headerlink" title="来自老母亲的担忧"></a>来自老母亲的担忧</h3><p>前段时间，老母亲又给我发了一个她中意的男嘉宾让我去认识认识。由于我们一直都互相嫌弃彼此的品味，所以每次她推荐的男嘉宾看起来总有一些跟我不太搭调，这次也不例外。在我的追问下，她交代了自己在用的一个相亲小程序:</p>
<img data-src="https://s2.loli.net/2022/05/28/xpczLX3MH2Wuedq.jpg" width="200" height="400" alt="寻缘"><span class="image-caption">寻缘</span>

<p>看到这充满土味的「寻缘」页面，又想起之前她让我加的「好心人」推荐给她的相亲群：</p>
<div class="tabs" id="好心人的故事"><ul class="nav-tabs"><li class="tab active"><a href="#好心人的故事-1">好心人的故事 1</a></li><li class="tab"><a href="#好心人的故事-2">好心人的故事 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="好心人的故事-1"><img data-src="https://s2.loli.net/2022/05/28/AGKRwuWy7nVszTx.jpg" height="460" width="250"></div><div class="tab-pane" id="好心人的故事-2"><img data-src="https://s2.loli.net/2022/05/28/y4VzgqwoHAfpKFa.jpg" height="480" width="250"></div></div></div>

<p>我突然觉得把找对象这件事交给老母亲，有点过于草率了，不过不就是对象么，找就找呗，我要开始认真了。</p>
<h3 id="朋友的推荐"><a href="#朋友的推荐" class="headerlink" title="朋友的推荐"></a>朋友的推荐</h3><p>但是找对象这事，我总不能出门随便抓一个小哥哥问人家需不需要女朋友吧，所以还是首选线上平台，于是我打开了两个鼎鼎大名的小程序：</p>
<img data-src="https://s2.loli.net/2022/05/28/W2tRaCbhQ56m7fS.jpg" width="400" height="440" alt="世纪佳缘&amp;珍爱网"><span class="image-caption">世纪佳缘&amp;珍爱网</span>

<p>果然没有最土味，只有更土味，甚至世纪佳缘还给我报了一个亲切的后端错误QAQ。<br>连最有名的两个交友平台都这样，让我有些emo，正在我一筹莫展的时候，一个非常靠谱的朋友推荐给我两个交友小程序，「青藤之恋」和「二狗」平台，她说已经面基了几个小哥哥，感觉还不错，于是正在搬砖的我连忙摸鱼注册好了这俩小程序，故事就这样开始了。</p>
<h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>我在找对象的时候，朋友分享了一个小红书的视频，里面的博主(173的林铁柱)复盘了自己相亲多年，和二十几号男嘉宾的故事，视频中博主真情流露，字字珠玑，多少让我有一些共鸣。<br>所以我也想把自己寻找男嘉宾的过程复盘一下，但我没勇气录视频，还是用文字描述吧，然后就有了这个系列。</p>
<h2 id="青藤之恋"><a href="#青藤之恋" class="headerlink" title="青藤之恋"></a>青藤之恋</h2><p>啊，这个字体怎么有bug，人家叫「青藤之恋」。。。<br>ok anyway，对青藤之恋的第一印象，来自它在知乎投放的广告，上边说「老实忠厚的程序员」，我一整个大离谱，都2021年了，还在宣传程序员老实忠厚吗<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，但是朋友推荐的，我还是去看看，所以搜索添加了小程序。</p>
<h3 id="初印象"><a href="#初印象" class="headerlink" title="初印象"></a>初印象</h3><p>首先，青藤之恋的页面设计非常简约，小清新的感觉，终于没有土气了，再然后，我开始注册，选择性别，年龄什么的，让我印象深刻的是注册的时候，它默认选中的出生年份是95年，而且是12.1：</p>
<img data-src="https://s2.loli.net/2022/05/28/FoKz3DTdLpmu6Cr.jpg" width="200" height="440" alt="默认95年"><span class="image-caption">默认95年</span>

<p>我大受震撼，现在找对象年龄已经这么卷了吗？直接默认95后可还行，害，老了老了。</p>
<h3 id="菜单栏"><a href="#菜单栏" class="headerlink" title="菜单栏"></a>菜单栏</h3><p>所有信息填好之后，就进入了小程序：</p>
<img data-src="https://s2.loli.net/2022/05/28/gfBhFaqEmQJWYTj.jpg" alt="青藤菜单栏"><span class="image-caption">青藤菜单栏</span>

<p>小程序有四个菜单栏：</p>
<ul>
<li>「寻觅」：系统每天中午12点会推荐10个男嘉宾，都分页展示在这，点 X 表示无感然后会切换到下一个男嘉宾，💗表示喜欢，左上角可以回看推荐过的男嘉宾</li>
<li>「消息」：互相喜欢的嘉宾会配对成功，然后可以在这里聊天发消息(注意这里是一个伏笔)</li>
<li>「村口」：展示嘉宾们发的唠唠(跟朋友圈差不多)，还有一些情感话题可以讨论</li>
<li>「我的」：个人信息和系统设置页，点击头像可以查看个人资料，也可以编辑自己的信息，还能看到最近来访和喜欢自己的嘉宾。</li>
</ul>
<h3 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h3><p>青藤之恋需要添加的个人信息如下图：</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/looking-for-the-one/qtInfo.jpg" alt="青藤个人信息"><span class="image-caption">青藤个人信息</span>

<p>主要是一些照骗，学历和身份认证(认证之后会在「我的」页面加上已认证标签)，还有个人基本信息(昵称/年龄/星座/身高/职业/收入等等)，以及一些自我介绍、兴趣爱好、感情观、理想型之类的描述。</p>
<p>系统会对这些信息进行审核，然后对其真实和充足性打分，之后在「我的」页面点击个人头像，就可以预览自己的信息页(上图最右图)。</p>
<p>因为我是真诚找对象，所以很积极的做了双重认证，也边抄作业边完善了这些描述信息，最后系统给我打出了95的高分，还给我提供了7日优先推荐：</p>
<img data-src="https://s2.loli.net/2022/05/28/jfiryIgUKdOutqY.jpg" width="200" height="440" alt="7日优先推荐"><span class="image-caption">7日优先推荐</span>

<p>hummm…大概这样，一切都是这么的顺利，所以开始的时候我是比较喜欢这个平台的，因为大道至简的功能展示和简约的界面设计比较合我的心意，刚开始推送的男嘉宾也还好。</p>
<h3 id="青藤币和青藤会员"><a href="#青藤币和青藤会员" class="headerlink" title="青藤币和青藤会员"></a>青藤币和青藤会员</h3><p>一段时间之后，事情开始微妙了起来。<br>比如我想解锁喜欢我的男嘉宾/来访者，或者查看更多男嘉宾，我都需要一个东西：<strong>青藤币</strong>。<br>再后来，系统给我推荐的男嘉宾越来越「优质」，甚至看这个成了我每天的快乐源泉，所以我想筛选一下推送偏好，这个时候，我又需要一个东西：<strong>青藤会员</strong>。</p>
<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/looking-for-the-one/qtMoney.jpg" alt="青藤币和青藤会员"><span class="image-caption">青藤币和青藤会员</span>

<p>作为一个穷逼，青藤会员我就不想了，重点关注青藤币。</p>
<p>可盘算了半天，上图免费获得青藤币的方式，我只能做到「签到」，但是每日签到只有3个青藤币，可光解锁一个男嘉宾就需要100个青藤币，差距如此悬殊，后来我又抖着手点了超级喜欢想赚点儿币，结果就连超级喜欢别人这个操作，本身也要60个青藤币。。。</p>
<p>所以系统贴心的提供了购买青藤币的入口，又把我这样的穷逼排除在外。我终于明白了，青藤之恋想表达的意思就7个字：<strong>没钱就别找对象</strong>。</p>
<p>在这里非常感谢目前为止「喜欢」我的100多个男嘉宾，不是我不「喜欢」你们，而是我没钱。</p>
<h3 id="终于聊起来的消息页面"><a href="#终于聊起来的消息页面" class="headerlink" title="终于聊起来的消息页面"></a>终于聊起来的消息页面</h3><p>情况一度十分尴尬，就这样过了几天，最后我想着注销账号吧，找不到对象也不能被别人当作赚钱的工具啊，那也太惨了。</p>
<p>所以我又打开了青藤之恋小程序，寻找注销账号的入口，顺便最后看看系统推给我的「优质」男嘉宾，没想到这次竟然有几个不错的，我寻思着自己反正要走了，最后点几个喜欢吧，然后：</p>
<img data-src="https://s2.loli.net/2022/05/28/EvHFVYPgex3TWMd.jpg" width="200" height="440" alt="第一个相互喜欢"><span class="image-caption">第一个相互喜欢</span>

<p>原来这个男嘉宾之前也「喜欢」过我，相互「喜欢」，所以我们就能聊天了！！！这是啥？这就是缘分呐！爱情这不就来了吗？于是怀着十分激动的心情，我主动给男嘉宾发了一条消息，1分钟之后：</p>
<img data-src="https://s2.loli.net/2022/05/28/Ksir5vLV4XPgNOM.jpg" width="200" height="440" alt="啊哈哈哈哈嗝"><span class="image-caption">啊哈哈哈哈嗝</span>

<p>男嘉宾取消了喜欢。<br>他取消了喜欢。<br>喜欢。<br>欢<span class="emoji" alias="broken_heart" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8">💔</span><br>我也有今天<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，所以男嘉宾是觉得自己之前瞎了眼吗？到今天我都还在思考这个问题，但是无解。<br>后来我又通过这种方式成功添加了几个男嘉宾，而且没有被取消喜欢，他们的故事我会在后续的博客中讲到。</p>
]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>罗生门</title>
    <url>/luo-sheng-men/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/10/26/C1qOvPiJBL47sD2.jpg">

<h2 id="一个故事"><a href="#一个故事" class="headerlink" title="一个故事"></a>一个故事</h2><p>时为日本平安朝(794-1192)，接连灾祸导致经济萧条，饿殍遍野，弱肉强食。</p>
<p>某冬日傍晚，大雨，冷风萧瑟。</p>
<p>一位不久前被主人家辞退的家丁，在罗生门(日本京都中央大道朱雀路南端的一个城门)下躲雨，纠结着自己是要等着被饿死，或是去做强盗不择手段的活下去？</p>
<p>心中尚存的善念劝他选择前者，可求生的本能还是迫使他选择后者，现在的他，需要一种勇气，做强盗的勇气。</p>
<p>夜渐凉，他决定去门楼上过夜挨到清晨再说。于是猫着腰慢慢拾级而上，在最上一级时，小心翼翼地往里窥视。门楼内果如传闻一般，尸骸遍地，腐臭难闻，忽见尸骸中蹲着一小老太，正借着蜡烛的微光在拔一具女尸的头发。</p>
<p>看到这情景，家丁先是骇然，后又生出强烈的对老太行为的憎恶，最终上升到对一切罪恶的反感。此时若是重又提起刚才委决不下的问题，他一定会毫不犹豫地选择饿死。</p>
<p>趁这样的雨夜，在楼门上拔死人的头发，真是不可饶恕。</p>
<p>于是他一跃而上，手持刀柄闪身到老太面前，呵问她为何如此，老太吓的不轻，又被挡住了逃跑的去路，只能颤声答道：头发拔下来后，去做假发。</p>
<p>只是这样？家丁大失所望。察觉到他轻蔑的神情，老太又结巴道：拔死人头发或许不对，可这女人生前却将蛇肉充做鱼肉拿去卖，若非得了瘟疫，恐怕至今还在做这营生，不过她也是没法子，不这么做就得饿死，跟我现在一样，既然都没办法，我想她也就能谅解了。</p>
<p>听老太这样说，家丁心中渐渐鼓起了勇气，一种刚才在门楼下所缺的勇气。饿死还是当强盗，他已不再犹疑，甚至根本不去考量还有饿死这一说。</p>
<p>他嘲讽道：说得也对。突然上前一步揪住老太的脖颈，狠声说道：既然这样，我扒你的衣服，你也不会怪我吧，我也是不得已，否则就得饿死！</p>
<p>他麻利的抢下衣服夹在腋下，一脚踹开老太，跨步下楼，消失在夜色里，无人知晓他的下落。</p>
<h2 id="罗生门"><a href="#罗生门" class="headerlink" title="罗生门"></a>罗生门</h2><blockquote>
<p>罗生门，原本只是一个城门的名字，却因上面的故事，被后人延伸为一种现象：当事情发生时，所有人都按照利于自己的方式来表述情况，从而让真相本身变得扑朔迷离，难以分辨，揭露出人性利己的本质。</p>
</blockquote>
<p>就像故事中的老太，女尸生前真如她所说这么不堪吗？还是她怕家丁伤害自己而编出这套说辞呢？即便她所说属实，也不是她通过拔私人头发这种下作手段来谋生的理由，这样说，只是为了给自己找一个心安的托词罢了。</p>
<p>而这种托词，也给了家丁勇气，让他不必承受良心的谴责，最终选择做一个强盗。</p>
<h2 id="作者其人"><a href="#作者其人" class="headerlink" title="作者其人"></a>作者其人</h2><p>每当读一本书时，我总习惯先了解作者的生平，而看完芥川龙之介的经历，就不难理解他的作品为何总是贯穿着对人性利己和丑恶现实的剖析了。</p>
<p>芥川龙之介，1892年出生，他出生不久母亲就精神失常，后又去世，父亲多子且素来与生母不睦，他便由无子的舅父收养。十二岁时被生父废去长子继承权，销去户籍，他由此改姓正式成为芥川家养子。</p>
<p>养父家是没落的旧世家，为维持体面，撙节度日，且家教严格，礼法繁缛，从小寄人篱下的他事事隐忍。一生未嫁的大姨母如生母般养育他，但也难免彼此伤害，因爱生恨。龙之介自小聪敏，成绩优秀，且养父一家颇好文艺，所以他自幼就受传统文化的熏陶，接触日本和中国古典文学。</p>
<p>对于创作，他并不是那种从自身经历取材的作家，事实上，他很不认同这种做法，讨厌“将自家一己的私事，不知羞耻地写给人看”。他所有的知识都来自书本，从书中认识人生，了解人性，也从书中取材。在探讨人生、考察人性的过程中，他发现了人世间的丑恶。在写给友人的信中写道“周围尽是丑恶，自己也丑恶，面对周围的丑恶，活着就是痛苦的事”，对人性感到失望。</p>
<p>由于道德上的“洁癖”，他极为重视人的精神世界。虽非有神论者，却十分欣赏和尊敬信教的人，以为虔诚的信仰和内心的清明，可以形成一种崇高的道德情操。他关注基督教却并未入教，始终是个冷静的旁观者，因为他做不到相信上帝，只是从艺术的角度喜欢基督教。他尤对殉教者深表崇敬，”那种为信仰奉献一切的牺牲精神，可以带来生命的升华“。</p>
<p>1927年，龙之介服安眠药自杀，生命停留在了35岁，临终时，摆放枕边的，是一本打开的圣经。</p>
<p>生母发狂，为人养子，个性压抑，让他终生背负着精神负累。且他从小身体孱弱，病痛不断，在人生最后那段时间里，神经衰弱、胃痉挛、肠炎、心悸接踵而来，也因担心母亲的精神病会遗传给他，经常出现幻觉，夜不能寐。他一生都在探求人性，揭露人性之恶，可这何尝不体现出他对人性善的向往和追求？他也最终解脱了自己，去寻找想象中的灵魂净土。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>罗生门</tag>
      </tags>
  </entry>
  <entry>
    <title>五月天演唱会</title>
    <url>/mayday-concert/</url>
    <content><![CDATA[<p><img data-src="https://s2.loli.net/2023/11/22/AGwTak42r3d1Rio.jpg" alt="现场图"><span class="image-caption">现场图</span></p>
<p>9.8我和强哥一起去看了五月天演唱会，就在西安，然后一起从五月天的路人粉变成真粉。</p>
<p>在这之前，我们俩共同喜欢的歌手只有毛不易，当然还有全宇宙都爱的周杰伦。他的歌单里风格很杂，经典、小众、民谣、Rap都有，有次还发现了blackpink的whistle，也经常听一些翻唱歌曲，分享给我很多。</p>
<p>对于五月天，只听过一些路人粉耳熟能详的热门曲目。初中时mp3里有首和陈绮贞合唱的私奔到月球，还有离开地球表面，整体印象是节奏不落俗套，歌词不空洞，风格也很前卫，但其实五月天成员都是70年代生人，跟我爸妈是一辈。</p>
<p>重新唤起五月天的音乐记忆，是19年的网剧《想见你》，戴着蓝色耳机的王诠胜骑着单车，在海边听着《拥抱》，微笑着，海风拂面，神情满足淡然，那样的干净纯粹，很符合这首歌的风格。</p>
<p>后来强哥还分享给我一首《因为你 所以我》：</p>
<p>最深刻 的故事 最永恒的 传说<br>不过 是你 是我 能够 平凡生活</p>
<p>平静温暖，充满感动。一个成立20多年的乐队，时至今日还能有这样的唱作能力，实在难得。</p>
<p>4月底看到他们要来西安开演唱会的消息，主题是「好好好想见到你」，有一些《想见你》剧的影子，而且歌单里也有《拥抱》和《因为你 所以我》，就决定要去，西安有三场，我们打算买第一场。</p>
<p>7月底第一次开票，在网上搜了一堆攻略，用大麦刷了好久没抢到，然后联系了一些私出的人，但是开价都高的离谱，也不想助长这种黄牛的风气，只好作罢。后来因为强实名有很多黄牛退票，所以8月底又二次开票，这次在家连上5G频段wifi坐在路由器旁边，换了纷玩岛，终于抢到了：</p>
<img data-src="https://s2.loli.net/2023/11/23/SuieJU4ZWL2jb6I.jpg" width="200" height="400" alt="抢岛成功！"><span class="image-caption">抢岛成功！</span>

<p>我们都是第一次看演唱会，再加上路人粉，所以什么海报、荧光棒之类的都没买，纯纯的去听歌。周五在地铁站碰头然后过几层安检，奥体中心看起来也是银光闪闪：</p>
<p><img data-src="https://s2.loli.net/2023/11/23/nY5mQHw3ceodrFf.jpg" alt="奥体中心"><span class="image-caption">奥体中心</span></p>
<p>位置在看台区靠近过道，很方便上厕所走动，视野也不错，我很满意，还在斜对排偶遇了同事。</p>
<p><img data-src="https://s2.loli.net/2023/11/23/NJCr76WVoixgh2b.jpg" alt="看台"><span class="image-caption">看台</span></p>
<p>开场的《盛夏光年》和《派对动物》很快点燃了气氛：</p>
<video width="500" height="300" controls="">
    <source src="../videos/mayday2.mp4" type="video/mp4">
</video>

<p>也听到了我们都喜欢的《因为你 所以我》：</p>
<video width="500" height="300" controls="">
    <source src="../videos/mayday1.mp4" type="video/mp4">
</video>

<p>阿信的嗓音很有穿透力，吉他、贝斯、鼓声也很燃，5个快50岁的男人现场极稳。演出快3个小时，除了中间几次互动讲话和后边的安可环节，都在不停的唱，也算是个体力活，后来阿信都唱到要吸氧，实在不容易。</p>
<p>我们全程只有在《干杯》那首下去买喝的，基本上都在坐着认真听歌，遇到很燃的歌也会站起来边唱边摇。有个女生让我印象深刻，她全程拿着荧光棒站在走道边，无论快歌慢歌都疯狂摇摆跟唱，大概是真爱粉了。</p>
<p>串场的时候他们老是Q到回民街，阿信还现场吃了肉夹馍，原来有句歌词是「从回民街再飞到尖沙咀」。点歌的时候有个女生说要听《米老鼠》，我开始以为是儿歌，结果五月天真的有首歌叫这个，后来还有人点《步步》，才发现好多五月天的歌我都没听过。</p>
<img data-src="https://s2.loli.net/2023/11/24/Xn4cm6P9NKCjGJV.jpg" width="400" height="200" alt="吸氧吃肉夹馍的阿信"><span class="image-caption">吸氧吃肉夹馍的阿信</span>

<p>演出结束后12点多到家，2点多才睡觉，强哥说他一闭上眼睛还是：一颗心扑通扑通的狂跳，后遗症很明显。</p>
<p>演唱会之后我们都更喜欢五月天了，到现在也每天都听他们的歌，每张专辑都听了一遍。还新建了一个歌单叫521，里面是21首我最喜欢五月天的歌，很多都是非热门的，比较喜欢的有「人生海海」、「星空」、「转眼」等等。</p>
<p>小红书也推了很多五月天早期的综艺片段给我看，以及「爱情万岁」、「你不是真正的快乐」的经典破音现场，还有一些八卦比如玛莎和梁静茹的恋情、阿信的黑道背景等等，都不是没有故事的小孩呀。</p>
<p>认真听了《任意门》的自传歌词，也了解了他们从滚石唱片到相信音乐的经历，原来是这么热爱音乐的一群人啊，所以才能不忘初心一直坚持创作吧，现在开始我也要不转弯的喜欢五月天了！</p>
<img data-src="https://s2.loli.net/2023/11/23/eoB3WGmjXf1AFS4.jpg" width="300" height="300" alt="我不转弯！！！"><span class="image-caption">我不转弯！！！</span>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>演唱会</tag>
        <tag>五月天</tag>
      </tags>
  </entry>
  <entry>
    <title>我的前1/3 of 2021</title>
    <url>/my-1-3-part-of-2021/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/05/19/Oe4vFPdGs7K3Nlc.png">

<h2 id="被「内卷」了吗？"><a href="#被「内卷」了吗？" class="headerlink" title="被「内卷」了吗？"></a>被「内卷」了吗？</h2><p>2021年开始之前，我还没从王铁锤的suffer中走出来。</p>
<p>等到半年之后我再思考王铁锤经历的一切，好像是跟今年的流行词「内卷」有点关系。通过拜读一篇关于<a href="https://mp.weixin.qq.com/s/5RrEOppRanZHfKzfqRs25w">内卷是什么</a>的文章，其中有几点定义和王铁锤经历的一些事情仿佛可以对得上号，包括但不限于：</p>
<ol>
<li>将简单问题复杂化：各种评审会议和报告，实际上意义并不大，只是为了按部就班的走所谓的「程序」</li>
<li>与预期目标严重偏离：过分追求bug数量的趋势图，却从不考虑预防bug的产生</li>
<li>内部竞争：加班时间的battle，很多时候明明无事可干，比如环境挂了之类只能干等，却还是得等到9点甚至10点然后并没有任何产出</li>
<li>被动应付工作：在上线时间本就紧张的情况下，还要强行搞一些并不能发现问题的非功能测试，比如在测试环境做性能测试，一切只是为了走流程</li>
</ol>
<p>所以王铁锤其实是「被内卷」吗？我也不太确定，只是觉得王铁锤不属于这种环境，所以他只能退出。</p>
<p>关于内卷，我还在深圳航空上看到一篇飞机读物，航空公司不怎么样，但那篇文章还不错；下飞机后又在网上搜了一下电子版，分享给大家：<a href="https://mp.weixin.qq.com/s/RtRkisO9p6xgJD3zcGU6kA">不内卷的38岁北京程序员</a>。<br>文章的主人公实现了我理想中的「不内卷」生活，我也想搬一辈子砖；但人家能做到不内卷也是有前提的，他08年之前在北京买了房，外企工作，还丁克，我想在当前的中国社会这三个条件少了一个，都不能做到不内卷吧，所以普通人要做到不被内卷，难度还是相当高的。</p>
<h2 id="在家办公"><a href="#在家办公" class="headerlink" title="在家办公"></a>在家办公</h2><p>王铁锤事件之后，是11月底。</p>
<p>先是开始了两周没有项目的生活，算是缓了缓心情，也在复盘和思考，学了一些零散的知识。后来作为非正式成员加入了一个公司内部项目做了半个月，没有无意义的加班，项目安排也比较合理，只是再也没有归属感了。一个月的时间里，每天想离职想到睡不着，还会怀疑自己是不是不适合做这个行业，又想转行，但综合考虑各种因素后，还是决定苟且，终究没有付诸行动。</p>
<p>时间到了12月底，我又作为非正式成员加入了新项目，与之前不同，这个项目是做自己的产品，一个线上画图的工具。依然没有无意义的加班，项目安排有时不太合理但还可以接受，但还是没有归属感。项目的成员大多都异地，比较分散(比如在我的城市只有我一个成员)，所以基本上都在家办公。</p>
<p>于是我开始了在家办公的生活，时间是1月初到4月中旬，大概4个半月的时间。</p>
<p>对我而言，在家办公的这段时间是挺开心的。因为在家，不用通勤，也不用早起。有时我甚至一上午都可以躺在床上办公，然后中午起床做饭，就可以吃一天。而且可以自由安排时间，在不影响别人和项目进度的情况下，有时我会把输出时间挪到晚上，白天只参加一些必要的会议。甚至会边看电视边上班，早上起床打开投影仪播放自己喜欢的电视剧，然后躺在沙发上敲电脑，一躺就是一天。有时晚上虽然也会加点班，但是因为真的有事干才加，而且因为在家，也感觉不那么抵触了。</p>
<p>虽然是远程办公，但项目里的同事都很不错，每天工作也充满了欢声笑语，感觉很温暖，大家对我的评价也都是积极的。就这样，王铁锤事件带来的阴霾也渐渐散去了，由此带来的工作倦怠感也没了，甚至有点想去公司上班，见见之前熟悉的同事。</p>
<p>最后安利一下我们的线上画图工具：<a href="https://beeart.hello-bees.com/introduce">BeeArt</a> (谁用谁知道，一般人我不告诉他～)</p>
<h2 id="新项目旧生活"><a href="#新项目旧生活" class="headerlink" title="新项目旧生活"></a>新项目旧生活</h2><p>4月中旬我交接了工作，在两周的准备后，作为正式成员在5月初又加入了新项目。</p>
<p>虽然是新项目，但之前经历过类似的项目，而且待了很久，无论是节奏还是工作方式都大同小异。总之就是熟悉的配方，熟悉的味道，所以过的是旧生活，但学到了很多。我的散装英语又派上了用场，之前的归属感回来了一点，但并不多，也许我再也不会有从前的「归属感」了，只是平淡的打工人，搬砖挣钱而已，并不会有太多的情怀。</p>
<h2 id="2021剩下的1-3"><a href="#2021剩下的1-3" class="headerlink" title="2021剩下的1/3"></a>2021剩下的1/3</h2><p>2021是我的本命年，虽然已经过去了1/3，不过也是开心的1/3，人生已经如此的艰难，还是开心最重要。<br>剩下的2/3，大概会继续平淡的过着我的旧生活，然后学点工作上的新技能。未来也许并不能实现搬一辈子砖的愿望，但搬砖的每一天都要开心，活在当下。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>活着</tag>
      </tags>
  </entry>
  <entry>
    <title>增驾摩托车奇幻之旅(中)</title>
    <url>/my-lovely-moto-2/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/06/13/lV9TGjfFbgCaWHD.png">

<h2 id="科二：人麻了-见鬼的2号车"><a href="#科二：人麻了-见鬼的2号车" class="headerlink" title="科二：人麻了+见鬼的2号车"></a>科二：人麻了+见鬼的2号车</h2><pre><code>事件发生时间：2月28日
</code></pre>
<p>虽然没练过科三，只有科二练了多次还算有点自信，但基于对驾校「包过」承诺的信任，而且我也看了科三的视频，将各种操作熟记于心，所以即使心里没太多底，还是打算直接去考试。</p>
<p>早上7点半带上我的沙哑低炮音出发，还是四人租车行，8点半到达考场，领了考试牌后就坐在候考室里，候考室的环境很简陋，室内不到一百平，脚踩着坑坑洼洼的水泥地，有限的座位导致一部分人站在后面，整个空间比较紧凑。<br>没想到，我们在这里一等就是6个多小时。</p>
<p>第一个小时，听考场的师傅讲考试注意事项，并按考试名单(据说是报名顺序)开始叫人排队考试，我们则认真看科二科三的视频，回忆各种操作点，同时努力克制尿意，怕被叫到的时候自己不在(因为那师傅说如果叫到名字的人没来就把他放在名单最后)。</p>
<p>第二个小时，考试群里开始有一些人探讨结果，群主还通知说上车前给教练打电话，有他在旁边就一定能过，我们猜测这就是所谓「包过」的操作，心中有了一些安慰：</p>
<img data-src="https://s2.loli.net/2022/06/13/O83odwQGsg9tczC.png" width="300" height="600">

<p>第三个小时，开始怀疑考试名单的公正性，因为如果按照报名顺序来考试，那我们这些一到点就报名的人，怎么也不会都三个小时了还没排到，但是无解。同时考试群里开始接龙考试结果：</p>
<img data-src="https://s2.loli.net/2022/06/13/xpGEthc4NeSrFvs.png" width="300" height="600">

<p>第四个小时，中午的饭点到了，但因为不确定我们什么时候被叫到，所以还是在候考室等，窗外不时有人抽烟，烟雾随风飘到室内，怕自己的沙哑低音炮更沙哑，只能友善提醒他们站远一点抽，然后无聊的四个人开始研究手相：</p>
<img data-src="https://s2.loli.net/2022/06/13/DqmUSG48bxA2Ncn.png" width="350" height="500">

<p>第五个小时，人麻了。</p>
<p>第六个小时，手机快没电了，也没带充电宝，麻中麻。</p>
<p>在朝着「麻中麻中麻」的状态转变的时候，终于到我们考了，等了6个小时，考试却只有5分钟，结果：</p>
<img data-src="https://s2.loli.net/2022/06/13/K1d4AabhOM9Se2q.png" width="300" height="600" alt="整整齐齐"><span class="image-caption">整整齐齐</span>

<p>除了H君一把满分过，我、L君、Z君三个人整整齐齐的挂了。其中，我最自信也最离谱，不仅起步就熄火甚至连第一个半坡都没上上去，而且在坡上熄火滑了下来，两把都是这样。</p>
<p>这和我之前练车的状态完全不一样，L君也觉得很离谱(她周末明明还来练了车)，后来三个人复盘了一下，发现我们是用同一辆车考的，就是2号车，我们上车的时候都发现这辆车非常容易熄火，他们两个人还说即使开着一档，没有加油，车子也会莫名其妙的开始加速，这导致他们在桩考的时候撞杆，H君则是用1号车考的。</p>
<p>我们当然按照上面说的考试之前给教练打了电话，他也过来跟我们打了招呼，然后，他就站在旁边，看着我们考试，完全没有想象中的有什么「包过」操作，所以为什么之前说「我在你旁边你绝对能过」？难道他在用什么意念魔法操纵考试车？总之我们还是挂了，非常离谱。</p>
<h2 id="科三：看过即考过"><a href="#科三：看过即考过" class="headerlink" title="科三：看过即考过"></a>科三：看过即考过</h2><p>我最有自信的科二都挂了，连车都没练过的科三当然更没有把握，但还是硬着头皮去考了，心中默想着之前看过的视频里科三的操作点，然后，我竟然神奇的一把满分过了科三，非常的魔幻，我们四个人都过了。</p>
<p>我们也在考试之前给教练打了电话(虽然不知道有什么用)，但他没有过来在旁边看我们考试，也许没有他的「魔法加持」，反而容易过了？总之这次车子没有莫名其妙的熄火，可能是之前人麻了挂了一科之后醒了？</p>
<h2 id="所谓的「包过」"><a href="#所谓的「包过」" class="headerlink" title="所谓的「包过」"></a>所谓的「包过」</h2><p>考完科三，已经是下午5点多了，天色渐晚，考试还在进行，考场也快下班了。在考试群里咨询科二怎么办，教练说让我们等着，本着「中国人不骗中国人」的原则，我们就一直等着：</p>
<img data-src="https://s2.loli.net/2022/06/13/M5S7xcFazv6K1CG.jpg" width="300" height="620" alt="等着"><span class="image-caption">等着</span>

<p>一个多小时以后，下午6点多，天黑了，教练让我们重新做身份验证，再考一次，L君和Z君没有用2号车，摸着黑自己考过了科二，而我，好死不死又轮到了2号车，由于科三一把过，所以我觉得可能不是车的问题，也许当时自己人麻了吧，操作不当，这样想着我还是上了2号车。</p>
<p>然而，第一把还是莫名其妙熄火了，我没有换车，依然用2号车考第二把，这次成功上了半坡，但是，绕桩的时候出现了之前L君和Z君描述的问题，我没有加油，但车子突然失控一般开始加速，导致我撞杆了，所以，第二把也挂了。</p>
<p>我不知道怎么办了，打电话给驾校老板，让他安排无论如何今天过科二，但是无果，然后我就明白了，所谓的「包过」操作，就是在白天正常考试挂了之后，等考场下班再免费安排一次补考，还是自己考。<br>说白了根本没有「包过」，就是自己过。</p>
<p>这太可笑了，报名的时候明明承诺我们只用来这里两次，我们已经来了一次考科一和练车，这次来了是计划考科二科三科四拿照的，结果我们等了6个小时人麻了不说，我的科二也没有过还要补考，之前承诺的「包过」就是个笑话，他们三个还要再来一次单独考科四。</p>
<p>气不过找老板理论，他还是来来回回那些话术，说的我脑仁疼，在我们的据理力争下，给我们每人退了60块钱，不过这根本不能治愈我的心塞，在我要求之后接送我补考的时候，他竟然以之前报名的时候便宜了50块钱接送费为由拒绝我，又气到语塞，罢了罢了，我已经不想再听他说话了。</p>
<p>这个时候已经是晚上8点半，从早上8点半开始，在这里待了12个小时，没有吃饭的四个人，折腾了一天经历了这么多离谱的事情(尤其是我)，就地找了一家炒菜店，豪掷百金点了份大盘鸡，然后驱车回家结束了疲惫的一天：</p>
<img data-src="https://s2.loli.net/2022/06/13/CrG39j6YHQeEpzM.png" width="500" height="400" alt="大盘鸡"><span class="image-caption">大盘鸡</span>

<p>当天是周一，但我觉得我只能用接下来的一周来治愈这天发生的一切。</p>
<h2 id="大怨种发烧"><a href="#大怨种发烧" class="headerlink" title="大怨种发烧"></a>大怨种发烧</h2><pre><code>事件发生时间：3月1日
</code></pre>
<p>前一天折腾一天，回家又收拾了半天，很晚才睡，然后控制不住去回想那些离谱的事儿，比如6小时、2号车，又比如驾校老板可笑的毫无意义的话术，越想越气睡不着，整个人变成一个大怨种。</p>
<p>再加上之前就因为去考场变成了沙哑低音炮，不太舒服，终于在凌晨4点被难受醒，发现有点低烧，鼻子也开始不通了，只能请个病假，在家调整自己，继续被怨种心态折磨：</p>
<div class="tabs" id="怨种发言"><ul class="nav-tabs"><li class="tab active"><a href="#怨种发言-1">怨种发言 1</a></li><li class="tab"><a href="#怨种发言-2">怨种发言 2</a></li><li class="tab"><a href="#怨种发言-3">怨种发言 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="怨种发言-1"><img data-src="https://s2.loli.net/2022/06/13/V4NuECRzoHwgM2n.png" height="600" width="300"></div><div class="tab-pane" id="怨种发言-2"><img data-src="https://s2.loli.net/2022/06/13/MRoznjSDZteqQI8.png" height="600" width="300"></div><div class="tab-pane" id="怨种发言-3"><img data-src="https://s2.loli.net/2022/06/13/jkyqwhLgcZ61teN.jpg" height="620" width="300"></div></div></div>

<p>已经分不清是因为生病导致的怨种心态，还是被怨种心态折磨生病，总之真的累了，决定先把这个放一段时间，转移注意力。不过被我说中了，坑确实还没完。</p>
<h2 id="练车还是白给"><a href="#练车还是白给" class="headerlink" title="练车还是白给"></a>练车还是白给</h2><pre><code>事件发生时间：3月27日
</code></pre>
<p>沉寂了一个月以后(在这期间H君等三位早已考完科四拿到了照)，感觉自己的心态已经平复了(还能咋办呢，自己报的名，哭着也得把照考完)，所以又约了考试，约完之后，群里负责人又说最近系统升级了，不好操作什么的，让我们好好练车，我就寻思之前有啥操作，大无语：</p>
<img data-src="https://s2.loli.net/2022/06/13/LXs92rJOw5DtIWy.png" height="600" width="300" alt="薛定谔的「操作」"><span class="image-caption">薛定谔的「操作」</span>

<p>总之还是得来练车，万恶之源L君陪我一起，早上9点到考场开始练，一共3个车排了3队，人很多，排一轮得四五十分钟，还是有大叔在队伍抽烟，这次我很坚决的让他们找别的地方抽。</p>
<p>这里又有一个奇葩的插曲，有个女生带了个大叔，练车的只有女生，但他们两个间隔一段距离都在排队，女生练完之后，又和大叔交换位置继续排，大叔就跑到队尾重新替她排，真的打开了我的眼界，这样也可以？早知道也让L君这样替我排了，离谱。</p>
<p>练车的时候，2号车又出现了问题，刚开始师傅还说是学员的操作不当，当然不是(没人比我更懂2号车了)，后来在大家的抱怨下，师傅换了车，然后检查发现2号车确实马达有问题。。。</p>
<img data-src="https://s2.loli.net/2022/06/13/YOcxW95VRZ7BuXH.png" height="400" width="500" alt="练车现场"><span class="image-caption">练车现场</span>

<p>为什么说这次练车是白给呢？因为这次来只有一个目的，就是听到「考试合格」的系统语音播报(练车的时候也开了考试系统)，可即使我没有用2号车练，也没有听到这个语音，L君旁观甚至觉得我的表现还不如第一次来考科一那天练车的水平，她让我别练了，说我心态不对，练多了反而会适得其反。</p>
<p>准备回去的时候，有个教练说可以稍我和L君到公交站，路上聊到考照，他问我们是不是在西安本地找的驾校报名，在得到肯定的答复后他一脸了然，用吐槽的语气说：你们报名的时候肯定忽悠是包过吧，其实哪有什么包过，都是自己练车过，不可能有什么操作的，我苦笑，心想我可太明白了，可我明白的太晚了。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>摩托车</tag>
      </tags>
  </entry>
  <entry>
    <title>增驾摩托车奇幻之旅(下)</title>
    <url>/my-lovely-moto-3/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/06/13/DtGac9qbuwiFfZz.png">

<h2 id="补考：一个人的战斗"><a href="#补考：一个人的战斗" class="headerlink" title="补考：一个人的战斗"></a>补考：一个人的战斗</h2><pre><code>事件发生时间：3月28日
</code></pre>
<p>还是来到了这一天，科二补考。<br>早上6点半起床吃早饭出发，虽然心里还是很慌，因为昨天练车效果不佳，一路上都在担心，这次是一个人去，一路倒地铁加出租，怕那里交通不便(想考完科二再去考科四，两个考场隔了一段距离)，还带上了我的滑板车：</p>
<img data-src="https://s2.loli.net/2022/06/13/rfchCqdaFungtPZ.png" height="500" width="350" alt="滑板车"><span class="image-caption">滑板车</span>

<p>不到9点我就已经坐在候考室了，带上了专门买的充电宝，做好了一个人再等6小时的准备。不过这次我没有等太久，大概半个多小时就叫到我了，在教练发的考试名单图片里，我甚至排到了第二名，可是我记得自己并不是第一时间报的名，所以上次我们等了6小时，肯定也是被严重潜规则插队了。</p>
<p>群里还是在说让我上车前给教练打电话，可太无语了，我当然没有打，不过教练已经记住我了，在我排队考试的时候看到我打了个招呼，然后在他的目光注视下，我刷了身份证，戴头盔，上车，半坡起步、绕桩、过单边桥，一把过，终于听到了「考试合格」的语音提示，只在半坡因为车身距中心线大于30cm扣了10分。</p>
<p>我也不知道为什么一把就过了，难道教练这次的意念魔法奏效了？考试群里，负责人还让我感谢教练，发朋友圈宣传，买饮料什么的，我只能阴阳怪气的回复：</p>
<img data-src="https://s2.loli.net/2022/06/13/pIRtNAXcyouOBP4.png" height="600" width="300" alt="真的栓Q"><span class="image-caption">真的栓Q</span>

<p>在我高高兴兴去办公室拿资料准备预约考科四，想着终于可以拿照了，一切suffer总算要结束的的时候，看到里面的工作人员接了个电话，说科四的考场突然被封了。。。听到这些，我整个人被雷劈了一样怔在当场，然后掌握了一手消息的我在群里通知：</p>
<img data-src="https://s2.loli.net/2022/06/13/WIDmw6ayPsUeOcG.png" height="600" width="300" alt="命运的捉弄"><span class="image-caption">命运的捉弄</span>

<p>我真的，不知道考个增照有这么难，一关关的像在渡劫，虽然我还撑得住，但也无法，只能回了。<br>后来，群里有一个大哥，也是大老远跑过来的，来一趟不容易，看我科二过了，还加我好友想问是不是有什么操作包过的，我就在验证消息里劝他：</p>
<img data-src="https://s2.loli.net/2022/06/13/Akcf5ugqoCRxdyb.png" height="440" width="300" alt="醒醒吧"><span class="image-caption">醒醒吧</span>

<p>后来在考试群里看到他科二挂了，科三也没考，不知道这位大哥现在怎么样了，祝他成功吧。</p>
<h2 id="小剧场之约科四"><a href="#小剧场之约科四" class="headerlink" title="小剧场之约科四"></a>小剧场之约科四</h2><p>由于上次补考时命运的捉弄，科四又只能单独一天去考，不过让我更觉得更气更恶心的，是约科四的过程。</p>
<p>之前几次约考，都还算顺利，就是负责人在群里说什么时候可以约了，我就自己去程序里填信息操作约考，其实按理说，这个操作本身都应该驾校负责，我只用说想哪天考，让驾校给我约好，我直接去考就行了，但前几次都是自己操作的，我也就没说什么。</p>
<p>然而这次，他们就连什么时候能约都不通知了，我问竟然还说不知道，让我自己去刷，那我交的钱是干啥的？！离谱到让人难以置信，可能因为群里的学员就剩几个人了，这些人越发有恃无恐起来，完全摆烂，请欣赏下面的离谱对话(小心不要代入感太强被气死)：</p>
<div class="tabs" id="约科四"><ul class="nav-tabs"><li class="tab active"><a href="#约科四-1">约科四 1</a></li><li class="tab"><a href="#约科四-2">约科四 2</a></li><li class="tab"><a href="#约科四-3">约科四 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="约科四-1"><p>4月1号第一次尝试约科四无果，没理我的问题，还有大姐？excuse me?!</p>
<img data-src="https://s2.loli.net/2022/06/13/az2qWv4KQdRrHlL.png" height="600" width="300" alt="第一次尝试无果"><span class="image-caption">第一次尝试无果</span></div><div class="tab-pane" id="约科四-2"><p>4月6号第二次尝试约科四依然无果，逐渐暴躁：</p>
<img data-src="https://s2.loli.net/2022/06/13/V79Kh2HvEsMQD6W.jpg" height="600" width="600" alt="第二次尝试无果"><span class="image-caption">第二次尝试无果</span>
答案就是他们啥也不知道而且根本无法沟通：

<img data-src="https://s2.loli.net/2022/06/13/sjmQA63hJrxfw21.jpg" height="600" width="600" alt="无法沟通"><span class="image-caption">无法沟通</span></div><div class="tab-pane" id="约科四-3"><p>知道他们靠不住以后抱着手机刷了两天，终于在8号早上约到了考试(所以他们的工作就是啥也不干然后每天确认一遍学员是否成功约到了考试？)：</p>
<img data-src="https://s2.loli.net/2022/06/13/LSwWuCVrQPJqeGo.png" height="600" width="300" alt="终于自己刷上了"><span class="image-caption">终于自己刷上了</span>

<p>之后有个小哥哥同样约不到科二继续在群里质问，然而还是无果：</p>
<img data-src="https://s2.loli.net/2022/06/13/FyW7ODpsa89JufN.jpg" height="600" width="600" alt="别人的故事"><span class="image-caption">别人的故事</span>
突然想到他也是之前和我一起补考科二的，但是又挂了，不知道他现在怎么样了，祝他成功吧。</div></div></div>

<h2 id="科四：走在冷风中"><a href="#科四：走在冷风中" class="headerlink" title="科四：走在冷风中"></a>科四：走在冷风中</h2><pre><code>事件发生时间：4月14日
</code></pre>
<p>这是我来考场的第五次，比驾校承诺的来两次已经多了三次，不过我已经不在乎了。</p>
<p>这次我没有带滑板，因为下雨了，而且上次发现考场周边的交通也还算方便，可以打到车。下午两点开始考试，请了半天假，一路打车转地铁坐出租终于在下午1点53分准时出现在考场门口。。。100米外：</p>
<img data-src="https://s2.loli.net/2022/06/15/VaGxFp1X2lLZWOU.png" height="500" width="350" alt="雨好大我好冷"><span class="image-caption">雨好大我好冷</span>

<p>拜托诶，工作日加上雨天，怎么还有这么多人考试啊，我承认我失策了。四月中旬，天气还未回暖，雨停了一会，然后越下越大，就这样，在风雨交加中排了二个半小时队的我，终于在下午4点半进入了考场。</p>
<img data-src="https://s2.loli.net/2022/06/15/gP8TDhwVj3AsLiR.png" height="400" width="500" alt="候考室"><span class="image-caption">候考室</span>

<p>下午5点，考过了科四，赶紧打车去交警队拿照，然后他们告诉我：</p>
<img data-src="https://s2.loli.net/2022/06/16/BSYhfRevOi3cnzQ.png" height="600" width="300" alt="5点就下班？！"><span class="image-caption">5点就下班？！</span>

<p>我这辈子真的不想再来这里了，靠着对驾校的最后一丝信任，让司机师傅调转车头，把资料交到驾校办公室里工作人员的手上，亲眼看着她装进资料袋，让他们后边帮我去交警队拿照然后寄给我，至少这点应该可以做到吧？</p>
<img data-src="https://s2.loli.net/2022/06/15/TkcYI9MgpWyXEab.jpg" height="610" width="300" alt="等着"><span class="image-caption">等着</span>

<p>在我坐上回家的出租，想着这个照总算是拿到手了的时候，万万没有想到，事情还是没有结束。</p>
<p>继续讲之前，还想吐槽下这天发生的一些戳心的小插曲：</p>
<div class="tabs" id="插曲"><ul class="nav-tabs"><li class="tab active"><a href="#插曲-1">插曲 1</a></li><li class="tab"><a href="#插曲-2">插曲 2</a></li><li class="tab"><a href="#插曲-3">插曲 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="插曲-1"><p>「funny little world」</p>
<p>在我快要排到门口的时候，看到之前使用意念魔法的教练带着一对男女在考场门口交涉着什么，很明显可以看出他们是想插队进去考试，面对队伍里逐渐多起来的审视目光，他们说「我们不进去考试，只是看看」，然而当我坐在候考室里的时候，这对男女又奇迹般的出现在我右前方(上面候考室图片右下角)。</p>
<p>回想起刚才教练在门口交涉时，和我的一次眼神交汇，仿佛是在嘲笑我等了两个多小时的守则行为，一时不知道谁的行为是更应该被嘲笑的。</p></div><div class="tab-pane" id="插曲-2"><p>「神奇的储物箱」</p>
<p>考场在四楼，当我拖着站软的双腿爬到楼上准备过闸机时，工作人员拦住了我说不能带包进去，并指了指背后的储物箱让我放在里面，怕候考室没位置又要等，所以和一帮带包的人连忙照做：</p>
<img data-src="https://s2.loli.net/2022/06/15/7JGYFoSu6kX2bjz.png" height="500" width="350" alt="储物箱"><span class="image-caption">储物箱</span>

<p>然后发现储物箱是需要掏钱的，存取一次3块，逻辑是扫码支付以后，储物箱会自动打开一个格子，同时打印一个密码纸，东西放进去，关上格子，取的时候再用密码纸对准扫码口取物，于是我开始尝试：</p>
<img data-src="https://s2.loli.net/2022/06/15/ynsckwhpWNqjQuL.png" height="200" width="300" alt="尽力在储物"><span class="image-caption">尽力在储物</span>

<p>第一次：扫码支付，格子打开，可并没有密码纸出来，白给。<br>第二次：扫码支付，格子打开，拿到了密码纸，可一阵风吹过没来得及抓住，它掉在地上成为密码纸堆里的一员难以辨认，又白给，和对面同样在找密码纸的小姐姐相视心酸一笑(还笑得出来)。<br>第三次：扫码支付，格子打开，眼疾手快拿到了密码纸，东西放在格子里关上，像守财奴一样把密码纸收好。</p>
<p>然而，当我坐在候考室的时候，发现前面地上放着好多包，同时另一个工作人员叮嘱「带包的把包放在前边来」，得，第三次还是白给。</p>
<p>所幸后来考完试后用密码纸成功取出了包，不能奢求太多了。</p></div><div class="tab-pane" id="插曲-3"><p>「和善」的司机师傅</p>
<p>考完试打车去交警队取照，师傅说20，懒得讲价了直接上车，结果中途折返去了更近的驾校办公室，想着反正待会也要打车去地铁口干脆让师傅在门口等着，之后直接送我去地铁口，师傅说40，因为我一个人，要是拼车可以便宜点。</p>
<p>等我交完资料回来的时候发现后座坐了三个人，默默去了前排，想着算是拼车了所以跟师傅降价到30，然而，当我到了地铁口，师傅又翻脸要40，我真的累了只想回家，40就40吧。</p></div></div></div>

<h2 id="拿照：考完增照我照没了"><a href="#拿照：考完增照我照没了" class="headerlink" title="拿照：考完增照我照没了"></a>拿照：考完增照我照没了</h2><pre><code>事件发生时间：4月27日
</code></pre>
<p>科四考完之后，当天我就可以在「交管12123」App里看到自己的驾照已经更新到了C1D，然而实体证照还是在等驾校邮寄。</p>
<p>18号，驾校通知我交科二的补考费(之前承诺是驾校包的不过我已经麻了)才能出证，交了以后他们说：</p>
<img data-src="https://s2.loli.net/2022/06/16/JAjUsW8FI45PpZ3.png" height="600" width="300" alt="无语"><span class="image-caption">无语</span>

<p>让我摆几桌请教练吃饭(还有脸说)？我没理，过了两天到了20号我突然想到，要寄驾照好像也没问过我住哪啊，一问果然还没办🤷‍♀️，发了地址之后过了几天，我就被移出了群聊。</p>
<p>想着这次总算寄了吧，可是等了一周还没到，市内的快递需要一周才能到？！幸亏我还加了魔法教练的微信，于是问他，结果他说：</p>
<img data-src="https://s2.loli.net/2022/06/16/aWyogxrwNLhQcm9.png" height="600" width="600" alt="人话"><span class="image-caption">人话</span>

<p>一周前我发了地址让他给我寄的时候，就找不到我的证件了，也不跟我说，就等着我去问，甚至说实体证件可要可不要？！我好好的把自己的C1驾照原件交给驾校，到现在直接没了，考个增照我照没了？</p>
<p>罢了罢了，只能自己去「交管12123」挂失补办证件，4月27日连夜挂失，隔天就可以查物流了，29日我终于拿到了证件，瞧瞧这效率？而驾校？14号考完科四就让他们给我寄证，27号询问才得知照没了，整整13天毫无进展，可笑至极。</p>
<h2 id="增加摩托车奇幻之旅"><a href="#增加摩托车奇幻之旅" class="headerlink" title="增加摩托车奇幻之旅"></a>增加摩托车奇幻之旅</h2><p>从2月20日报名驾校考增照开始，到4月29日，我终于拿到了C1D驾照，2个多月，期间发生的一系列荒诞可笑离谱的魔幻现实，以上，已尽数呈现，现在想来好像除了可以证明我是个坚强的人以外，也没什么大不了的。</p>
<p>不过，考照并不是终点，骑摩托才是目的，接下来请欣赏骑上我心爱的小摩托。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>摩托车</tag>
      </tags>
  </entry>
  <entry>
    <title>骑上我心爱的小摩托</title>
    <url>/my-lovely-moto-4/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/06/03/gkGWzpRAyOnMKBQ.png" width="800" height="600" alt="我的摩托车(SUNDIRO.HONDA_CBF190tr)"><span class="image-caption">我的摩托车(SUNDIRO.HONDA_CBF190tr)</span>

<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=503333680&amp;auto=0&amp;height=66"></iframe>

<h2 id="买车：二手也很香"><a href="#买车：二手也很香" class="headerlink" title="买车：二手也很香"></a>买车：二手也很香</h2><p>摩托车有很多种类型，比如防赛、复古之类，刚开始我也不知道买哪种，咨询一个骑摩托的女同事，她给我推荐了摩托范App，上面可以看车型，并且分享了她买的车型，我看一眼就喜欢上了。</p>
<p>她的车就是上图的CBF190tr，现代复古的车型，很对我的眼缘，没有防赛车的浮夸(过于酷炫)，也不像老复古车让人觉得年龄大(那种座高太低骑着需要手往上举的)，看起来非常的低调奢华，而且很适合新手。</p>
<p>H君和L君都是冲着防赛车才学照的，之后我们去了周边的实体店各自试骑了喜欢的车型，没过多久就定了，她们都买了下图的无极250RR，不一样的颜色：</p>
<img data-src="https://s2.loli.net/2022/06/19/gNHtLh3fO8RAmTY.png" width="500" height="600">

<p>而我因为喜欢的就是同事那款车，她又正好想换车，我也想着反正第一辆摩托车买个二手的练练手也不错，就和同事私下交易买了她的车，保险杠、配件什么的都是齐全的，她还把原厂的灰色坐垫换成了更复古的棕色。</p>
<h2 id="车险：求着买"><a href="#车险：求着买" class="headerlink" title="车险：求着买"></a>车险：求着买</h2><p>摩托车也是机动车，所以和小车一样是需要买车险的，大体还是有交强险、商业险(三责险)之类，前者是强制险，不买不能上路的，三责险就看情况找保险公司买，还有盗抢险，毕竟摩托车也是小几万块，万一丢了损失也不小。</p>
<p>H君和L君买的是新车，当场就在店家那买了交强险，我因为买的二手，就问同事要保单信息，结果她竟然不知道交强险是要一年一交的，所以只有买新车的时候保了一年，后来都没交过。。。只能替她庆幸没有遇上大的交通事故，然后联系H君她们买新车的店家买了保险。</p>
<div class="note info"><p>这个时候就体现出摩托车和小车的区别了，小车买车险的时候，各种销售可都是上赶着联系车主卖的，到了摩托车这，情况就大不一样了。</p>
<p>由于摩托车的危险系数比较高，而且保费比较便宜，所以基本上没有几家保险公司肯保摩托车，车险也就比较难买，还要自己联系销售渠道。交强险也就罢了，是国家强制的，一般比较大的保险公司比如太平洋、平安之类都可以办，可商业险就很难买了，首先保费基本上比小车贵很多，其次提供服务的都是小型的保险公司，不太靠谱。</p>
</div>

<p>所以我们都只买了交强险，至于盗抢险，因为我本来买的就是二手车，而且平时都停在地库，不太会有丢失的风险，也就没买，其它的就只能自己平时多练练技术，然后骑帅不骑快，别撞上豪车什么的就行了(这里留个伏笔)。</p>
<h2 id="过户：离谱的居住证"><a href="#过户：离谱的居住证" class="headerlink" title="过户：离谱的居住证"></a>过户：离谱的居住证</h2><p>买二手车是需要办过户手续的，因为我身份证不是本市的，所以过户的时候需要居住证材料，不过虽然身份证不是本市，但我的户口之前已经迁过来了，结果人家不看户口，唉，无法，只能去办居住证了。</p>
<p>办居住证的时候也有一些插曲，H君和我一样也要办这个，她先是电话咨询了当地办事处，结果工作人员说需要一堆资料，我说这跟我在网上看的不一样，然后我也去电话咨询了一下，结果人说需要的是一堆不同的资料，H君不信邪，让她对象又电话咨询了一下，结果又得到了不同的答案，离大谱。</p>
<p>没办法，只能按工作人员说的资料合集去准备，我不信邪，就按我电话咨询的工作人员给我说的资料去准备，和H君约好第二天早上去办事处，没想到为了这个居住证我来了这里三次：</p>
<div class="tabs" id="办事处的故事"><ul class="nav-tabs"><li class="tab active"><a href="#办事处的故事-1">办事处的故事 1</a></li><li class="tab"><a href="#办事处的故事-2">办事处的故事 2</a></li><li class="tab"><a href="#办事处的故事-3">办事处的故事 3</a></li></ul><div class="tab-content"><div class="tab-pane active" id="办事处的故事-1"><p>第一次，到了办事处，给工作人员展示资料，结果人说少了一个资料，就是在物业办一个居住证明(为了办居住证办居住证系列)，而H君都拿全了，甚至都多了，有的资料人压根没要，办居住证需要什么材料又有了第四种答案，后来她给我说了办理细节，我准备第二天又去办：</p>
<img data-src="https://s2.loli.net/2022/06/19/DylzY9NcRQrOFIs.png" height="600" width="300" alt="第一次尝试失败"><span class="image-caption">第一次尝试失败</span></div><div class="tab-pane" id="办事处的故事-2"><p>第二次，我在物业办了居住证明，又拿上了一堆资料，再次来到了办事处，这次终于办好了，不过和H君说的不一样，办居住证需要什么材料又有了第五种答案：</p>
<img data-src="https://s2.loli.net/2022/06/19/tU9Ao1zGYx5cyTk.png" height="600" width="300" alt="第五种答案"><span class="image-caption">第五种答案</span>

<p>当我以为终于办好了的时候，接到了工作人员的电话，说我的户口已经迁到了本市，所以不能办居住证，只能换个身份证：</p>
<img data-src="https://s2.loli.net/2022/06/19/y8qhzHmBouKZpa5.png" height="600" width="300" alt="人麻了"><span class="image-caption">人麻了</span>

<p>没办法，只能换身份证了，幸好两个业务的办事处离的不远，这次又详细的问了办这个又要什么资料，准备第二天再去一次，顺便去把办居住证的资料拿回来：</p>
<img data-src="https://s2.loli.net/2022/06/19/VdPx6519vNJZpEb.png" height="500" width="300" alt="H君的鼓励(里面说的物流就是驾校把我驾照弄没了之后线上挂失的新照物流)"><span class="image-caption">H君的鼓励(里面说的物流就是驾校把我驾照弄没了之后线上挂失的新照物流)</span></div><div class="tab-pane" id="办事处的故事-3"><p>第三次，到居住证办事处拿回了资料，又接着去办身份证，所幸这次没遇到离谱的事儿，很顺利，还可以自助拍照身份证照片，终于不是之前的丑照了，这天我也拿到了挂失后的C1D驾照，至此，我终于可以暂时远离这些政府机关的办事机构了。</p>
<img data-src="https://s2.loli.net/2022/06/19/Ap5yntSoUJdGDFl.png" height="500" width="350" alt="换身份证现场"><span class="image-caption">换身份证现场</span></div></div></div>

<p>拿着临时身份证，我终于办好了过户，找人代办顺便也拿到了自己的牌照，终于不用折腾了。</p>
<h2 id="练车：第一次撞车"><a href="#练车：第一次撞车" class="headerlink" title="练车：第一次撞车"></a>练车：第一次撞车</h2><p>由于我还没有自信把车从同事家骑回来，所以得去她那练车，熟悉一下，正好她说自己小区门口那块车很少，适合练车，H君也和我相约一起去，她是新手车神，取车没几天就能带人了，而且她的防赛车骑的时候得趴在车上，所以我坐在后座当她的挡泥板，一路上也挺吸睛。</p>
<p>因为之前为了考照经历了好多离谱的事儿，让我对骑摩托这件事心态上有点抵触，而且上次骑车还是在一个月前去店里试骑的时候，好久没摸车了，有点陌生，所以同事把车取出来后，先给我说了很多注意事项，然后就放手，和H君在路边看着我打火、挂档、转弯(因为要去路对面开始练)。</p>
<p>不知道为什么，我的手开始不受控制的拧油门(可能因为之前考科二的时候老因为没给油导致车熄火，所以就有了起步加油的习惯)，然后越拧越大，接着车身就失控向前猛冲，尽管我已经极力转弯，可车的保险杠还是挂到了停在路边的一辆车：</p>
<img data-src="https://s2.loli.net/2022/06/19/1OdIT2HiWsmAbg3.jpg" height="400" width="600" alt="触目惊心"><span class="image-caption">触目惊心</span>

<p>接着我和摩托车就一起倒地了，倒地的时候手还握着油门转把，轰隆隆的响，愣了两秒才松开，起身站在旁边。对面还在讨论摩托车的两个人被撞击声打断，回头震惊的看向我，也愣了两秒跑过来问我没伤着吧，我倒是没受伤，然后三人合力把摩托车扶起来。</p>
<p>然后就商量着怎么处理，在车上没找到电话，就打了122报事故想查下车主电话，折腾了一会还加了一个交警的微信说明情况，后来突然在车窗夹缝里看到了车主电话，就直接和车主联系了。</p>
<p>车主就在小区里，接电话的时候他也有点懵，我跟他说明情况之后他愣了一秒说「不会吧？」，一整个祸从天降，所幸车主倒也好说话，协商之后和他一起去了周边的修车店，掏了700块给人家换了一个新的车后杠，虽然摩托车没有保险，但万幸的是它选了一个便宜的车撞。</p>
<p>事情解决之后，冷静了一会，就又开始和H君练车，这次找了路边一个没人的非机动车道，刚才的车主还待了一会想看我们练车，不过我突然又找不到车钥匙了，折腾半天他才无聊走开，后来找到了钥匙，还练了加减档之类的，最后和H君一起在路上骑了几圈，才又找到点自信。</p>
<h2 id="取车：手机被偷了"><a href="#取车：手机被偷了" class="headerlink" title="取车：手机被偷了"></a>取车：手机被偷了</h2><p>练车之后过了几天，我觉得自己有自信(不知道哪来的)把车骑回来了，就叫上H君陪我去同事那取车，Z君(H君对象)也说要去，所以三个人一起出发，我还是做H君的挡泥板，Z君骑着电动车。</p>
<p>到了之后，Z君把电动车停在小区路边，我还是先练会车，和H君一起上路走了几圈，后来Z君也加入(骑着H君的摩托让她坐在后座)，一个小时后，我觉得差不多了，然后三个人回到小区门口准备出发，这个时候，H君突然发现自己放在Z君电动车手机支架上的手机，不见了。。。</p>
<p>原来刚才H君陪我上路练车之前，忘记把手机取下来了，打电话过去竟然关机了，铁定是被人拿走了，H君懊恼了一会，Z君也不住的吐槽她(冤种情侣)，我和同事吐槽，她也觉得震惊：</p>
<img data-src="https://s2.loli.net/2022/06/19/5k18TYFKDpIxsnv.png" height="600" width="300" alt="四脸震惊"><span class="image-caption">四脸震惊</span>

<p>我心里十分内疚，觉得是我把霉运转移到了H君身上，可能是老天爷看阻止不了我骑摩托，开始给我周围的人施法了？</p>
<p>打电话给10086挂失手机号，客服让我们说出手机号最近通话过的3个电话号码，拜托都2022年了大家都用微信通话好吗？当然说不出来最后通过别的当时冻结了手机号还有关联的各种服务。</p>
<p>打电话给110报警，接线员让我们给手机估价，然后说手机价值不高的话就只能当遗失处理而不是盗窃，excuse me? 交涉许久还是派了两个警察过来处理，去小区机房看监控发现那块正好是盲区，马路上也没有监控，小偷肯定是知道这块啥也没有才下手的。</p>
<p>没有办法，只能自己认栽回家了，恰巧这个时候我的手机也没电了，所以三个人一个手机导航，两个摩托车一个电动车，中途还下起了雨，中间断联了好几次，走走停停，天知道我们是怎么安全到家的，总之我把摩托骑回来了。</p>
<h2 id="买装备：头太小怪我喽"><a href="#买装备：头太小怪我喽" class="headerlink" title="买装备：头太小怪我喽"></a>买装备：头太小怪我喽</h2><p>骑摩托要买很多装备，最基本的就是头盔护具，然而等买装备的时候，我才发现自己竟然这么瘦，头盔护具都得买最小号，护具也就罢了，主要是头盔，合适的头盔，戴上之后应该是有挤脸的效果，比较安全。</p>
<p>可我的头围太小了，就算是最小号S码的头盔，戴上也只是稍微挤一点，店主都说我这种人买头盔，首先是要问尺码，然后才能选款式，所以一开始我并没有买到合适的头盔，就连之前去取车也是戴的电动车的头盔。</p>
<p>在网上买了几个头盔，回来试戴后尺码都不合适又退掉，后来线下再出去看了一次，买了AVA的复古款头盔，本来想买米色的，可当时S码只有粉色了，懒得再折腾，为了快点骑上小摩托，就是它了：</p>
<img data-src="https://s2.loli.net/2022/06/19/AnirzpHJK2ZS39V.png" height="500" width="380" alt="粉色头盔"><span class="image-caption">粉色头盔</span>

<h2 id="骑摩托：终于开始快乐了"><a href="#骑摩托：终于开始快乐了" class="headerlink" title="骑摩托：终于开始快乐了"></a>骑摩托：终于开始快乐了</h2><p>骑上摩托车已经一个多月了，目前为止也没有别的离谱的事儿出现，现在上路换挡已经比较流畅，也很少熄火了，还自己去加了一次油。</p>
<p>但因为我大多是通勤骑车，距离不太远而且市区内也骑不快，最多只到5档60多码，平时就放在小区和公司的地库，骑车的时候也逐渐能体会到快乐了，虽然还远没有到速度与激情的地步，毕竟为了安全，骑帅不骑快嘛。</p>
<img data-src="https://s2.loli.net/2022/06/19/cPQJVwroFqLHY4s.png" height="400" width="600" alt="骑上我心爱的小摩托"><span class="image-caption">骑上我心爱的小摩托</span>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>摩托车</tag>
      </tags>
  </entry>
  <entry>
    <title>增驾摩托车奇幻之旅(上)</title>
    <url>/my-lovely-moto/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/06/13/PBm2d5KVRx4NZCY.png">

<h2 id="万恶之源"><a href="#万恶之源" class="headerlink" title="万恶之源"></a>万恶之源</h2><p>时间回到2月下旬的某天晚上，死党L君(就是之前让我跟她一起 <a href="https://jmyblog.top/HuaShanTravel/">爬华山</a> 的冤种姐妹)和我一起吃完海底捞，在去往公交站的路上，开始了如下对话：</p>
<p>L: 我想考摩托车照，听说挺好考的，你陪我一起？<br>me(想到某个女同事朋友圈骑摩托的帅照): 我觉得🉑️，你报名的时候叫上我，舍命陪君子！</p>
<p>Deal! </p>
<h2 id="驾校：欢迎入坑"><a href="#驾校：欢迎入坑" class="headerlink" title="驾校：欢迎入坑"></a>驾校：欢迎入坑</h2><pre><code>事件发生时间：2月20日
</code></pre>
<p>L君是个行动派，第二天晚上，她就说已经咨询好要报名了，于是晚上7点半，我骑着自己的小滑板，连夜过去找她一起报名，故事就这样开始了。</p>
<p>因为我们本来就有C1驾照，这次算是考增照(C1D)，驾校老板熟门熟路的告诉我们，虽然这个也要考四科(科一科四理论+科二科三实操)，但考这个比C1简单多了，并向我们保证只要去考场两次(一次考科一加练车，一次考科二科三科四)就能拿照，让我们把科一科四考过，科二科三包过(一个敢说，两个敢信)。</p>
<p>接着我们提出了边界值问题：要是去了两次以上还没拿照或者补考的话怎么办？老板又「熟门熟路」的承诺那样的话就给我们报销前两次的来回路费和之后的补考费(一个敢说，两个敢信)。</p>
<p>考场在郊区，离我们所在的位置距离40公里，公共交通的话，地铁需要转三个线路(我还要转一次公交)，最后还要转出租。老板说都是去那考的，我将信将疑的和L君说，要不明天上班我咨询下同事然后再决定？可L君非常笃定且坚定的就要马上报名，无法，说好舍命陪君子的，陪！</p>
<p>在老板的各种承诺和所谓「包过」Buff的加持之下，报名费是1250，毕竟我们是两个人一起报名，所以在L君的软磨硬泡之下(我真的不擅长砍价)，价格降到了惊人的1200。。。</p>
<p>当夜，另一位姐妹H君在听说之后也报名了，后来老板把我们拉到一个考试群里，我们自己的群聊也创建成功：</p>
<img data-src="https://s2.loli.net/2022/06/04/gDdRV3ZIHxhqOMC.png" width="240" height="500" alt="骑上我心爱的小摩托"><span class="image-caption">骑上我心爱的小摩托</span>

<h2 id="考前：跨区换证"><a href="#考前：跨区换证" class="headerlink" title="考前：跨区换证"></a>考前：跨区换证</h2><pre><code>事件发生时间：2月21日
</code></pre>
<p>考试之前要做驾驶员体检，增驾也要做，老板说我们周边就有一个体检站，L君闻言第二天就去做了。</p>
<p>因为我驾驶证上的发证机关在老家，所以还要去把驾照换到本地，才能做体检再约考试。所以请了半天假，公交+地铁辗转到了另一个城区去办，因为老板说只有那个点当天换完证就能归档，可以尽快约考试，好吧勉强接受这个理由。</p>
<p>换证过程也十分周折。<br>门口查码的大妈让我先去前面500米处的驾驶员体检站照个相，就是换证后的驾驶证照片。</p>
<img data-src="https://s2.loli.net/2022/06/05/ecPYqDTvWR8QapO.png" width="350" height="500" alt="驾驶员体检站"><span class="image-caption">驾驶员体检站</span>

<p>接着又回来排队办换证业务，办好之后说是会现场制证，让我在外边等着拿，等了半天突然说制证的打印机坏了在修，幸好在他们下班前修好了，拿到了新证。</p>
<img data-src="https://s2.loli.net/2022/06/05/H3LpIOzThCE5w7V.png" width="350" height="500" alt="警务大厅"><span class="image-caption">警务大厅</span>

<p>沟通的时候驾校老板又说考场那就可以现场自助体检，所以和H君决定到时候在那做，然后三个人预约了两天后考科一，下载了驾考宝典开始刷题。</p>
<h2 id="科一：考场初见"><a href="#科一：考场初见" class="headerlink" title="科一：考场初见"></a>科一：考场初见</h2><pre><code>事件发生时间：2月23日
</code></pre>
<p>早上6点起床，按计划准备出行，H君说她对象Z君昨天晚上也报名了，所以又变成了4人行，租了辆小Polo开车去考场(本来3个人以上一起报名的话驾校是可以接送的，但我们这样一个个的报就错失机会了)。</p>
<p>9点整我们就到了考场，在候考室的自助体检机里做了体检，也是一次新奇的体验：</p>
<img data-src="https://s2.loli.net/2022/06/05/YemdNorGvn4VlcU.png" width="500" height="400" alt="自助体检机"><span class="image-caption">自助体检机</span>

<p>在办公室登记以后，戴上练车牌，我们就去场地里练车了，这里的考场其实是科二科三实操科目的考场，考试一般在周一，周二到周日都是来这里练车的人，进去之后，我们就看到了。。。三轮车(因为考的是增照D，考试就是用的三轮车，不过可以向下兼容二轮摩托车)：</p>
<img data-src="https://s2.loli.net/2022/06/05/BYgyQauZCqj6zLl.png" alt="科目二考试场地"><span class="image-caption">科目二考试场地</span>

<p>场地左右两边分别是「新手场」和「考试场」。新手场只有单边桥和无杆的地桩，考试场就是正式考试的时候用的场地，有两个坡道、三个带杆的地桩(每个都是5条杆)、三对单边桥。</p>
<p>一开始我们都在新手场熟悉车辆和基本操作，比如起步和停车，后来试着过单边桥和绕地桩，考场的师傅也教给我们各种技巧。练了一会，单边桥从上去就掉下来，有时还导致车熄火到后边可以顺利通过，绕桩也勉强做到不踩桩了。</p>
<p>但是，做到这些的只有我一个，他们三个还是各有各的问题，所以表面看起来，我的技术是四人中的Top1，后来我去了考试场练车，在师傅的指导下成功操作了定点起步，还练了一圈带杆的地桩和单边桥，都很顺利。</p>
<p>这个时候练车的人已经很多了，由于考场在郊区，比较偏远，环境也很差，尤其是厕所简直不堪入目，所以一早上都没喝水，而且排队的时候，老有人抽烟，在排队半小时(甚至更久)，开车5分钟的练车场景下，我一直被迫吸着二手烟。</p>
<p>当我在考试场排队准备练第二圈的时候，他们还在新手场，而且时不时和新加入的选手一起交流心得，于是我说：</p>
<img data-src="https://s2.loli.net/2022/06/05/ysAfVMwxYcH5uzl.png" width="300" height="440" alt="快要变成教练的三个人"><span class="image-caption">快要变成教练的三个人</span>

<p>后来，除了L君，其他两个人也过来考试场练了一圈，到了饭点L君说感觉自己没练好要继续在新手场练一会，于是三个人去吃饭。驱车在周围找到一家冒菜店吃了午饭，又回考场接了L君出发去考科一。</p>
<p>科一的考场离练车的科二科三考场3公里左右，两点开考，不过门口早就排了长队，在队尾等了几波才轮到我们，结果只有没怎么刷题的H君对象考了满分<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，不过不重要，过了就行，不到4点，时间尚早，我们就又回之前的地方练车了。</p>
<p>人还是很多，不过这次练车是模拟真实的考试场景，开系统刷身份证，练了两次科二项目，虽然没听到考试合格的声音，但自我感觉还不错。天色渐晚，我们都还没练过科三，于是赶紧去科三的场地看看，发现下班前是轮不到我们练车了，只能让师傅带着我们熟悉下场地，讲解要点。</p>
<p>其实科三也就是该刹车刹车，该打转向灯打转向灯，然后注意不要压线之类的，不像科二各种整活，而且场地被师傅们做了很多「手脚」，旁边有很多提示的布条之类告诉你什么时候点刹车和开转向灯，只要练过科二能控制住车，就问题不大。</p>
<p>所以师傅讲过之后，虽然没实际练过，但对科三也稍稍放心了些，就约了下周一考科二科三，打算周末再来练一次车，然后就回家了。</p>
<h2 id="沙哑低音炮"><a href="#沙哑低音炮" class="headerlink" title="沙哑低音炮"></a>沙哑低音炮</h2><pre><code>事件发生时间：2月27日
</code></pre>
<p>上次回来以后，本来打算周日再去练一次车，可到了周末：</p>
<img data-src="https://s2.loli.net/2022/06/05/5CmtwAbxHnV3hiI.jpg" width="300" height="610" alt="吸二手烟的后果"><span class="image-caption">吸二手烟的后果</span>

<p>因为之前练车吸了太多二手烟，导致我嗓子哑了，话都不能好好说，实在不舒服，再加上考场卫生条件太差也不能多喝水，所以最终我没去成，只有L君和H君(她对象也没去)去了。<br>她们说人很多，早上8点多到那，排了一天队结果就一人练了两圈科二科三，而且风很大，空中尘土飞扬，幸好我没去否则现在应该已经哑了。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>摩托车</tag>
      </tags>
  </entry>
  <entry>
    <title>我的厨艺进阶之路</title>
    <url>/myCookingWay/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/12/03/82ec95aLFtVkzAJ.png">

<p>作为新时代的「空巢青年」，做饭可谓是一个必备技能了。</p>
<p>小时候家里大多都是老爸<span class="emoji" alias="man" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f468.png?v8">👨</span>做饭，每次看他随便拿出一个食材就能想到做什么菜，怎么做，即使最简单的食材也可以做成一道菜，就觉得很神奇。</p>
<p>在家人的影(bi)响(po)下，初高中那会就已经会做一些简单的菜了，也打下了不错的切菜功底<span class="emoji" alias="v" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/270c.png?v8">✌</span>，但真正学会做饭，还是从毕业后的空巢生活开始的。</p>
<p>– 多图预警 –</p>
<h2 id="早餐篇"><a href="#早餐篇" class="headerlink" title="早餐篇"></a>早餐篇</h2><p>「一日之计在于晨」，说实话，早餐并没有太花心思做。</p>
<p>之前的固定搭配是胡萝卜葱花鸡蛋卷🥚+自己煮的粥🥣，后来又开始搭配纯牛奶🥛喝，有时加点水果蔬菜🍅，感觉营养就比较全面了：<br><img data-src="https://i.loli.net/2020/12/03/PNAzln8bfECFKa3.jpg"></p>
<p>现在很少做鸡蛋卷了，比较喜欢纯牛奶🥛+麦片+鸡蛋🥚的搭配，或者纯牛奶🥛+鸡蛋🥚+面包🍞的标准搭配，营养都很全面：<br><img data-src="https://i.loli.net/2020/12/03/oHFDUjY3PJcTl5x.jpg"></p>
<p>这里推荐 <mark class="label success">良品铺子</mark> 家的「每日坚果水果荟燕麦片」，还有 <mark class="label success">小熊家电</mark> 的「蒸蛋器」。</p>
<p>鸡蛋卷的教程可以在「下厨房」APP里搜，很简单的。</p>
<h2 id="午饭篇"><a href="#午饭篇" class="headerlink" title="午饭篇"></a>午饭篇</h2><p>午饭可就到了大显身手的时候了<span class="emoji" alias="metal" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f918.png?v8">🤘</span>。主食还是米饭，或者各种杂粮粥，配菜可就多了<span class="emoji" alias="smirk" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60f.png?v8">😏</span></p>
<p>搭配1: 杂粮粥🥣+老干妈土豆丝🥔+醋溜娃娃菜+可乐鸡翅<br>搭配2: 黑米粥🥣+老干妈土豆丝🥔+肉末炒鸡蛋+煎饼🥞<br><img data-src="https://i.loli.net/2020/12/03/6Os7ERPASYb9FGn.png" width="600" height="300"></p>
<p>搭配3: 糯米红枣粥🥣+西红柿炒鸡蛋🍅+醋溜娃娃菜+妈妈做的饼👩<br>搭配4: 糯米饭🍚+凉拌酸辣茄子🍆+清炒土豆片🥔<br><img data-src="https://i.loli.net/2020/12/03/gHPV73t8YDeQnZL.png" width="550" height="300"></p>
<p>搭配5: 糯米饭🍚+麻婆豆腐+鱼香肉丝<br>搭配6: 红薯小米粥🥣+凉拌黄瓜皮老铺🥒+老干妈土豆丝🥔<br><img data-src="https://i.loli.net/2020/12/03/peg6iVZFDfsXKB4.png" width="600" height="300"></p>
<p>搭配7: 糯米南瓜粥🎃+酸辣带鱼🐟+虾仁滑蛋🍤+煮玉米🌽<br>搭配8(早中餐一起吃)): 纯牛奶🥛+糯米饭🍚+煮鸡蛋+红烧茄子🍆+西红柿炒西葫芦<br><img data-src="https://i.loli.net/2020/12/03/H6i59XOltxoseJ3.png" width="550" height="300"></p>
<p>搭配9: 糯米饭🍚+酸辣平菇🍄+西红柿炒西葫芦<br>搭配10: 糯米饭🍚+青菜炒鸡蛋🥬+西红柿炒土豆片<br><img data-src="https://i.loli.net/2020/12/03/ZqQJmR6GOypi38H.png" width="600" height="300"></p>
<p>搭配11: 糯米饭🍚+西红柿辣椒炒鸡蛋🥚+酸辣娃娃菜+肉丸萝卜汤🥣<br>搭配12: 糯米饭🍚+酸辣娃娃菜+肉末炒西芹<br><img data-src="https://i.loli.net/2020/12/03/bJEl9z6yLmesPxk.png" width="600" height="300"></p>
<p>菜品单独展示，第一组：香煎孜然豆腐、蒜蓉粉丝娃娃菜、红烧带鱼🐟、麻婆豆腐<br><img data-src="https://i.loli.net/2020/12/03/MIHUyelGozkv1c2.jpg"></p>
<p>第二组：青菜炒平菇🥬、红烧茄子🍆、手撕包菜、鱼香肉丝<br><img data-src="https://i.loli.net/2020/12/03/5CyYM2RXBsVn1hj.jpg"></p>
<p>配汤组：枸杞银耳汤、疙瘩汤、萝卜肉丸汤<br><img data-src="https://i.loli.net/2020/12/03/1aYqCPMB7pdRjSm.jpg" width="600" height="200"></p>
<p>其实还有很多，没有存图<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span>，这些菜品都可以在「下厨房」APP搜索教程，个人认为最省时好做的菜品有：西红柿炒鸡蛋、老干妈土豆丝、酸辣娃娃菜、青菜炒鸡蛋。</p>
<h2 id="晚餐篇"><a href="#晚餐篇" class="headerlink" title="晚餐篇"></a>晚餐篇</h2><p>晚餐主要会做一些速食，或者吃中午的剩菜剩饭<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，比午饭耗时少，毕竟晚餐要少吃一些。</p>
<p>一组速食：酸辣挂面、家常版阳春面、酸辣速冻饺子、螺蛳粉<span class="emoji" alias="yum" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60b.png?v8">😋</span><br><img data-src="https://i.loli.net/2020/12/03/v8QbfkM9Hw72Wty.jpg"></p>
<p>说到螺蛳粉，我还是比较有发言权的哈哈哈，淘宝排名前5的店都吃遍了，好欢螺、嘻螺会、良品铺子、李子柒还有其他几家的都吃遍了，个人认为还是李子柒家的最好吃<span class="emoji" alias="thumbsup" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png?v8">👍</span></p>
<p>有时候会整点硬菜，煎个牛排啥的<span class="emoji" alias="wink" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">😉</span>，意面算是第5种速食了，做起来也很快：<br><img data-src="https://i.loli.net/2020/12/03/RqTOExXmvFnVBJw.jpg" width="400" height="600"></p>
<h2 id="烘焙篇"><a href="#烘焙篇" class="headerlink" title="烘焙篇"></a>烘焙篇</h2><p>工具是「小熊电器」的烤箱，其实烘焙自己做的种类也不多，主要用来烤鸡翅、烤红薯、烤饼干、做纸杯蛋糕：<br><img data-src="https://i.loli.net/2020/12/03/91VdOgUC2ruADZ4.jpg"></p>
<p>有时会买腌制好的鸡翅来直接烤，有时也会买生鸡翅，自己配酱汁腌制，烤鸡翅很快，230度烤15-20分钟即可；烤红薯时间比较长，需要先230度烤30分钟，再200度烤20分钟左右；饼干和纸杯蛋糕比较麻烦，需要按照教程做。</p>
<h2 id="便当篇"><a href="#便当篇" class="headerlink" title="便当篇"></a>便当篇</h2><p>作为一个会做饭的上班族，当然少不了带便当。但也不是每天都带，看心情<span class="emoji" alias="star" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2b50.png?v8">⭐</span>，我一般是前一天晚上做好第二天要带的便当：</p>
<img data-src="https://i.loli.net/2020/12/03/KdyLMiYnDbEO2pJ.jpg" width="500" height="600">

<h2 id="外卖篇"><a href="#外卖篇" class="headerlink" title="外卖篇"></a>外卖篇</h2><p>什么？！竟然还有外卖篇，想不到吧<span class="emoji" alias="grinning" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f600.png?v8">😀</span>，但有时候不想做饭，也是会点外卖的，一组外卖：<br><img data-src="https://i.loli.net/2020/12/03/d81bNuGAHcYJgtn.jpg"></p>
<div class="note info"><p>说了这么多，那到底怎么才能学会做饭呢？一句话：<strong>只要你做，就能会；不做，永远不会</strong>，哈哈哈哈哈哈哈哈哈。</p>
</div>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>Cook</tag>
      </tags>
  </entry>
  <entry>
    <title>两个人的春节</title>
    <url>/sf-of-2p/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/01/27/IQBPHCJ4XREOgeF.png">

<div class="note info"><p>种种原因，今年我没能和家人一起过年。</p>
<p>大年三十，给自己做了两菜一汤，一个人的年夜饭有些凄凉，正在我看着春晚准备早点睡的时候，小甜甜突然出现，带着一堆花炮，说要陪我一起跨年，心里立刻被惊喜填满。</p>
<p>之后春节假期，每一天都有他的陪伴。</p>
<ul>
<li>一起看电影，春节档《满江红》，剧情丰富，转场也很多。</li>
<li>一起逛公园，被放河灯的噱头吸引，结果被欺骗，就当遛个弯。</li>
<li>一起转书城，印象最深的是一本《蛤蟆先生去看心理医生》的畅销书。</li>
<li>一起逛商场，吃饭坚决避开需要排队的店家，还被大玩家里的抓娃娃机虐的体无完肤。</li>
<li>一起夜游，走在寒冷空荡的路边，突然出现几个扛枪的大叔，免费看了一场加特林烟花秀，之后被一个阴森的公园吓到跑路。</li>
<li>一起去寺庙，青砖红墙，头上的经幡随风摆动，免费赠送金刚结和经书，放弃了好多人排队领的《无量寿经》，挑了一本《人生最大的一件事》，看了几页才知道信佛是人生最大的一件事。</li>
</ul>
<p>两个人过年，也很温馨快乐。</p>
<p>疫情放开以来，我一直没被感染。</p>
<p>虽然我一个人住，可也没少往外跑，后来朋友说我肯定是无症状，有些信了，因为这些日子我老觉得神思倦怠，还嗜睡，很像新冠的后遗症。</p>
<p>最后一天假期，明天要去办公室上班，还真有些不适应，毕竟之前因为疫情放开，已经在家办公两个多月了，整个人有些懒散，脑子也木木的，所以今天一天都在家调整自己的状态，嗯，我觉得还没调整过来，慢慢来吧。</p>
<p>这才不是一篇水文呢喂！</p>
</div>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>春节</tag>
      </tags>
  </entry>
  <entry>
    <title>社畜的内心独白</title>
    <url>/she-chu-feb/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/02/26/ViQFtOyS6I35f2g.png">

<p>最近一段时间，我很疲惫。</p>
<p>身体上的疲惫：过完年后不能在家办公了，恢复了日常通勤。每天早上元气满满，到下班的时候却好像被吸干了阳气，年后连上了七天班，到现在每天也都很忙，头脑昏沉，形容枯槁。</p>
<p>精神上的疲惫：面对经济下行，公司做了全员不涨薪的决定，砍掉了好多员工福利，春招也停了。邮箱里一堆last day邮件，豆瓣上还有在试用期内被我司辞退的 <a href="https://www.douban.com/group/topic/282946110/?_i=739888842K9rlv">应届生血泪控诉贴</a> ，公司内部也流传着员工被约谈裁员的消息，脉脉里甚至出现了公司还能撑几年的投票，氛围诡异，人心惶惶。</p>
<p>所以说，是身心俱疲。</p>
<p>我反思了一下。</p>
<p>首先身体上，虽然年后到现在每天都很忙，但也一直保持着965的搬砖时间，对比大部分996还好好活着的从业者，我的「疲惫」好像没什么道理。</p>
<p>通勤是打车，单程只有10分钟(不堵车的话)，还经常迟到赶不上9点半的早会，所以我决定先给自己定个早睡早起的目标试试看，也可以把之前制定的健身计划拿出来练练，调整一下。</p>
<p>至于公司的情况，我无力改变，只能调整自己的心态。</p>
<p>我是一个没有梦想且低欲望的人，遵纪守法好好活着就是我的人生目标。所以一份工作可以同时满足这四点：正经、可以965、工作氛围相对轻松、薪资福利还说得过去，我就很满足了，况且还是在当前经济形势和就业环境都不好的情况下。</p>
<p>但是我知道，公司已经不是我入职时的样子了。</p>
<p>先是按业务线划分了很多部门，出现了很多大大小小的「领导」，部门之间也各自为政，文化和工作模式差异巨大，导致换个部门就像换了公司一样。</p>
<p>再后来，随着人数增长，有了OKR和KPI制度，也增加了很多无意义的内卷，还刚刚公布了每年硬性两次的KPI review政策，越来越像一个「上市公司」。</p>
<p>针对一些内外部的争议，不像以前透明公开处理，也不会正面回答和解决，到最后总是不了了之。身边的同事，说真话会干活的人越来越少，多得是只会嘴上功夫的人。</p>
<p>我见过能力不错但一直升不了职的同事在我面前哭诉，说HR告诉她公司需要的是会说话而不是会做事的人；也见过职级高会耍嘴皮子，但日常却要让我帮着他甚至需要我安排他工作，自己整日摸鱼的人，何其离谱。</p>
<p>幸好公司还有很多我欣赏的同事，有时候我在想，除了上面说的四点，他们可能是我待在公司的唯一动力了，如果身边的同事已经全是后者，我大概也会离开吧，但是这样的公司会生存下去吗？答案应该是否定的，大多是中高层耍耍嘴皮子剥削底层干活的人吧。</p>
<p>所以坚持本心就好，一份工作罢了，开心最重要。</p>
<p>最近我在带一个毕业生，是非计专业的海外留学生，和上面的血泪控诉贴主角背景相似，但应该不会有同样的遭遇。在得知我比她小一岁但工作已经快5年后，她十分震惊，问我是怎么做到的，其实我也不知道，可能因为我没有梦想吧。</p>
<p>她很像公司需要的那种「会说话」的人，能力也还不错，转正问题应该不大。她对未来有很多展望，是一个很有想法的年轻人，这里的「年轻」不是阴阳她的年纪，而是指她的心态很年轻。</p>
<p>因为就业环境不好，公司近一两年招进了很多优秀的留学生，换作往年这些人肯定能有更好的选择，至于未来能不能留住他们，如果公司继续像上面说的这样发展的话，我是持消极态度的。</p>
<p>算了，操心过头了，还是先想想自己上半年的KPI怎么搞吧，公司已经在催了。</p>
<p>不给钱还让人卷，没天理啊啊啊啊啊啊啊啊啊</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>我爱工作</tag>
      </tags>
  </entry>
  <entry>
    <title>坐标之力</title>
    <url>/sparks-in-my-life/</url>
    <content><![CDATA[<div class="note info"><p>很多朋友都说我很会归纳总结，善于发现华点，可能因为我喜欢用文字来情景再现，就会更注重细节的表述，以求写实有趣。博客里我比较喜欢的有 <a href="https://jmyblog.top/categories/%E4%BA%BA%E7%B1%BB%E8%A7%82%E5%AF%9F%E5%91%98/">人类观察员系列</a>、<a href="https://jmyblog.top/tags/%E6%91%A9%E6%89%98%E8%BD%A6/">摩托车系列</a> 和 <a href="https://jmyblog.top/bus-story/">雨天挤公交有感</a>，这里再分享一些福至心灵的瞬间，关于我觉得自己取的很妙的名字。</p>
</div>

<h2 id="坐标之力"><a href="#坐标之力" class="headerlink" title="坐标之力"></a>坐标之力</h2><p><img data-src="https://s2.loli.net/2024/06/26/yo4WugrLxvek6Fp.png" alt="坐标"><span class="image-caption">坐标</span></p>
<p>前几天家里买了新的路由器，配好网之后想着得起一个有意思的名字，起码不能输给隔壁的「快乐星球」和「米奇妙妙屋」。按照同样的思路，脑中搜索了一些影视剧和日漫番剧，于是福至心灵，决定起名叫「坐标之力」，越想越觉得很妙。</p>
<blockquote>
<p>坐标，日漫《进击的巨人》中的能力，始祖巨人的能力被称为坐标之力。<br>在漫画里，每一位尤弥尔子民都被正常情况下看不见的“路”所连接着，而每一条路最终都会交汇于一点，汇聚点则就是坐标。<br>坐标之下是始祖尤弥尔，在路的空间里，始祖尤弥尔通过堆沙子的方法，可以随意控制所有尤弥尔子民，这种控制不光指能够控制他们的行动，而是包括肉体和精神方面的全面控制，比如删除子民的记忆、使子民变为无垢(无脑)巨人等。<br>但始祖尤弥尔几乎没有自己的思想，只会服从始祖巨人拥有者的命令，同时始祖巨人的能力只有拥有弗里茨王族血脉的人能使用，所以坐标之力几乎等同于王族的力量。<br>—— <strong>摘自百度百科</strong></p>
</blockquote>
<p>路由器就相当于始祖，它拥有联网的能力。<br>在互联网中，每一个人都被看不见的网络节点(路)所连接，彼此交流，传递信息。而在中国，互联网却可以随意控制所有人，比如删除屏蔽信息、引导控制舆论、使大众变成「愚民」(无垢巨人)等。<br>路由器并没有自己的思想，只是它的联网能力被掌权者所控制和限制，这就是中国互联网的「坐标之力」，所以，每一位中国网民都是现实中的尤弥尔子民。</p>
<p>这剧情，简直一模一样，所以我觉得很妙，顺便希望通过这个名字安利《进击的巨人》这部伟大的日漫。</p>
<p>在漫画中，男主艾伦所在的帕拉迪岛里的尤弥尔子民，很久以前被王族使用始祖巨人的力量，抹去所有关于巨人和世界的真相关在墙内，直到破坏墙壁的超大型巨人出现，真相才被渐渐揭开。而墙外的尤弥尔子民也因为可以变身巨人的人种特性，被世界歧视和憎恨，只能在隔离区的收容所生活。</p>
<p>后来继承了始祖巨人的艾伦在路空间里找到始祖尤弥尔，说服其觉醒，即使没有王族血脉，也成功发动了坐标之力：</p>
<p><img data-src="https://s2.loli.net/2024/06/28/YtqDKQhe9Eykf1H.png" alt="艾伦和始祖尤弥尔"><span class="image-caption">艾伦和始祖尤弥尔</span></p>
<p>最终，巨人之力从世界上消失，尤弥尔子民也与其他人种无异。但人与人之间的歧视和憎恨依然没有消失，战争也永远不会停止，周而复始，一切不过轮回罢了。</p>
<p>在现实中，中国互联网的「墙」正如帕拉迪岛的墙壁，中国网民也被当权者使用「坐标之力」关在墙内，墙内外的中国人民也都深受歧视。每一个找🪜翻墙的中国网民，就像是漫画里调查兵团的调查兵，身披自由之翼去探索世界的真相，就当是在墙外调查吧。</p>
<h2 id="钰"><a href="#钰" class="headerlink" title="钰"></a>钰</h2><p>和强哥在一起不久，我就在想给孩子取什么名了(喜欢一个人是这样的)，很快就定了「钰」字。</p>
<p>首先我名字的含义就是美玉，而且强哥名字的谐音也是yù，以玉字为基础和发音联想适合取名的字，就想到了「钰」，细想之后觉得这个字真是极佳。</p>
<p>『钰』，读音yù，好听，左右字形结构，好看也好写，10笔的笔画十全十美，观感很好。字义指珍贵的宝物，也指坚硬的金属，用作人名寓意像美玉一样美丽珍贵，也像金属一样坚强刚毅。有金有玉，会联想到金玉良缘，代表我们俩是佳偶天成，珠联璧合；也会联想到金玉满堂，代表财富极多，学识丰富。</p>
<p>这个名字，不仅代表了父母对孩子的珍视和爱意，也表达了父母之间的爱，寓意孩子才貌双全，希望孩子内外兼修，物质和精神都富足，真的很妙。</p>
<p>因为它本身的含义就已经足够丰富，所以加上姓两个字就好。虽然还没想好生不生孩子，但如果生的话，我个人比较推荐跟我姓，毕竟可以保护稀有姓氏，还能防止重名。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>火花</tag>
      </tags>
  </entry>
  <entry>
    <title>测试策略浅谈</title>
    <url>/testStrategy/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2020/11/27/Nt7m4suaOyUPfBV.png">

<div class="note info"><p>前段时间，有同事分享了一些测试策略设计的内容，讲的很不错。并且自己也是最近才开始接触一些新的项目，之前都是中途加入项目工作，没有全面思考过测试策略的东西，所以感触比较深。于是记了点笔记和自己的心得，这样后续再加入一些新项目，也不会手足无措了。</p>
</div>

<h2 id="Foreword：前言"><a href="#Foreword：前言" class="headerlink" title="Foreword：前言"></a>Foreword：前言</h2><p>每一个测试小朋友进入到全新的项目时，肯定有很多<mark class="label info">问号</mark>，比如：</p>
<ul>
<li>这是一个什么样的项目？</li>
<li>是一个旧项目的改造还是一个全新的项目？</li>
<li>是某个产品的一部分，还是独立的一个产品？如果是一部分，是上游，还是下游，还是中间？</li>
<li>这个项目的用户群体是什么样？用户群体的数量？</li>
<li>这个项目的周期是多久？多久发一次版，每个版本分为几个阶段？</li>
<li>这个项目要做哪些方面的测试？</li>
<li>这个项目有几个QA？<br>…</li>
</ul>
<p>其实，这些问题都是包含在测试策略中的。</p>
<h2 id="What？测试策略是什么"><a href="#What？测试策略是什么" class="headerlink" title="What？测试策略是什么"></a>What？测试策略是什么</h2><blockquote>
<p><strong>测试策略</strong>一般是针对一个整体产品或者版本，制定出的包含质量保证策略、测试范围、测试方法、测试计划管理、测试分层、测试重点和难点、测试执行过程管理、环境策略、Showcase管理、风险识别等方面的<strong>设计文档</strong>。</p>
</blockquote>
<p>好的测试策略可以提升团队的质量水平和QA团队的工作效率，在敏捷软件开发生命周期的每一个阶段都能发挥作用。</p>
<h2 id="When？什么时候设计测试策略"><a href="#When？什么时候设计测试策略" class="headerlink" title="When？什么时候设计测试策略"></a>When？什么时候设计测试策略</h2><div class="note primary"><p>测试策略的设计，一般在需求分析(Inception)阶段开始，与技术设计并行，并且在需求分析阶段不断补充和完善。需要在测试阶段开始之前闭环。</p>
</div>

<h2 id="Who？谁应该参与测试策略设计"><a href="#Who？谁应该参与测试策略设计" class="headerlink" title="Who？谁应该参与测试策略设计"></a>Who？谁应该参与测试策略设计</h2><pre><code>测试策略是由项目的QA团队输出，团队成员参与评审的。
</code></pre>
<p>由于敏捷开发是一种重实践，轻文档的开发模式。所以个人认为不必写出多么详尽的文档，重要的是考虑全面，列出关键点，和团队成员一起讨论，达成共识，且在后续的开发测试过程中注意与测试策略保持一致。</p>
<h2 id="How"><a href="#How" class="headerlink" title="How"></a>How</h2><p>上文提到了测试策略是由许多方面的集合，接下来就分别聊聊它们。</p>
<h3 id="敏捷团队的质量保证策略"><a href="#敏捷团队的质量保证策略" class="headerlink" title="敏捷团队的质量保证策略"></a>敏捷团队的质量保证策略</h3><p>首先就是敏捷团队的质量保证策略，其实这就是许多非QA角色眼中的<strong>狭义测试策略</strong>，展示了敏捷开发中每个阶段团队如何协作来保证产品质量。个人认为这个是最基本的质量保证标准，每个敏捷团队都应该做好。</p>
<img data-src="https://i.loli.net/2020/11/30/TpxlCFQ4uYWa58s.png">

<p><span id="inline-toc">1.</span> <strong>故事分析</strong><br>BA与客户沟通清楚需求后，编写故事卡，并和QA结对写AC，或者写完AC找QA review.<br><span id="inline-toc">2.</span> <strong>故事启动</strong><br>BA组织团队成员一起讨论开发内容，澄清需求。<br><span id="inline-toc">3.</span> <strong>故事开发</strong><br>Dev同学按照需求写代码，确保单元测试的覆盖率满足要求。QA同学编写测试用例和自动化测试。<br><span id="inline-toc">4.</span> <strong>故事验收</strong><br>团队成员一起在正确的环境进行deskCheck，确保代码通过AC，满足基本需求。并再次检查单元测试的覆盖率是否满足要求。<br><span id="inline-toc">5.</span> <strong>故事测试</strong><br>QA同学进行测试，将发现的问题与BA、开发沟通并修复，直到产品行为满足需求。<br><span id="inline-toc">6.</span> <strong>故事演示</strong><br>所有故事卡测试通过后，团队组织showcase邀请客户一起查看产品功能，并对showcase中客户提出的优化建议进行记录，确定优先级后放入相应迭代开发范围。如果离上线还有一段时间，也可以组织团队成员进行BugBash，最好邀请客户，提前识别更多问题。<br><span id="inline-toc">7.</span> <strong>故事上线</strong><br>当所有Bug和优先级高的优化问题都已解决后，用户故事就可以上线了。上线后，对应用户故事的生命周期就已经终结。线上发现的问题在确定优先级后，建立新的用户故事，放入对应迭代开发范围。</p>
<div class="note default"><p>上线之后，团队应该回顾分析上个迭代的开发测试情况，可以一起查看迭代的<strong>Sprint report</strong>和<strong>Bug report</strong>。</p>
</div>

<pre><code>Sprint report
</code></pre>
<p>Sprint report是敏捷开发管理工具Jira的一个功能，如下图，纵轴是迭代内所有故事卡的点数，横轴是迭代时间。两周一个迭代，体现了迭代内随时间推移故事卡开发的情况：</p>
<img data-src="https://i.loli.net/2020/12/01/vEqDKlLMYz6fA3X.png">

<p>灰色线条是在迭代开始后，默认生成的一条该迭代的理想开发速率线，灰色地带是周末，所以没有变化(这也可以看出敏捷开发是不提倡加班的<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>)。红色是迭代开发的真实情况，健康的敏捷开发，<strong>红线的趋势应该是和灰线基本一致的</strong>。<br>上图就是因为两周内并不能完成迭代任务，所以又延迟了两周，此时就应该分析为什么会导致这种情况，是对需求理解不够，点数估计少了呢，还是别的原因，从而避免以后再发生同样的情况。<br>这里我再贴几张迭代的Sprint report，都是我之前经历过的真实敏捷迭代(所以我都经历了什么<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span>抱走心酸的自己<span class="emoji" alias="persevere" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f623.png?v8">😣</span>)，大家可以自己尝试分析，导致下边几种情况的可能原因：<br><img data-src="https://i.loli.net/2020/12/01/tueAgQEZ9byo4la.png"><br><img data-src="https://i.loli.net/2020/12/01/xSCBPQ9MJzLVTHb.png"><br>其实之前也有两条线一致的时候，但那已经是很久之前了。。。。</p>
<pre><code>Bug report
</code></pre>
<p>Bug report是对迭代内发现问题的总结，由QA同学产出，如何做好Bug report可以参考<a href="https://mp.weixin.qq.com/s/OVqTsk6OJ_xi5Q4iWtKkUg">ThoughtWorks洞见-Bug Report该怎么做?</a></p>
<h3 id="测试范围和重难点分析"><a href="#测试范围和重难点分析" class="headerlink" title="测试范围和重难点分析"></a>测试范围和重难点分析</h3><blockquote>
<p><strong>测试范围</strong>的确定需要分析软件周期各个阶段的需求目标，了解客户期望和产品的用户群体，主要包括以下几个方面：</p>
</blockquote>
<pre><code>功能
</code></pre>
<ul>
<li><p>业务功能</p>
</li>
<li><p>API功能</p>
</li>
<li><p>数据一致性</p>
</li>
<li><p>…</p>
<p>  性能</p>
</li>
<li><p>接口性能</p>
</li>
<li><p>单接口并发和非并发访问性能，混合场景并发访问性能</p>
</li>
<li><p>页面性能</p>
</li>
<li><p>常用操作页面响应时间，非常用操作页面响应时间</p>
</li>
<li><p>…</p>
<p>  安全</p>
</li>
<li><p>API访问权限</p>
</li>
<li><p>数据访问权限</p>
</li>
<li><p>数据传输安全</p>
</li>
<li><p>数据存储安全</p>
</li>
<li><p>异常信息展示安全</p>
</li>
<li><p>日志信息安全</p>
</li>
<li><p>…</p>
<p>  易用性</p>
</li>
<li><p>页面展示的引导性</p>
</li>
<li><p>操作的便捷性</p>
</li>
<li><p>返回信息的易理解性</p>
</li>
<li><p>…</p>
<p>  兼容性</p>
</li>
<li><p>操作系统兼容</p>
</li>
<li><p>数据库兼容</p>
</li>
<li><p>浏览器兼容</p>
</li>
<li><p>应用软件兼容</p>
</li>
<li><p>…</p>
<p>  可维护性</p>
</li>
<li><p>软件的安装和升级是否可以很容易的完成</p>
</li>
<li><p>核心操作是否都有日志记录</p>
</li>
<li><p>…</p>
<p>  可靠性</p>
</li>
<li><p>接口加锁和释放</p>
</li>
<li><p>接口失败重试</p>
</li>
<li><p>服务重启后数据恢复</p>
</li>
<li><p>大数据处理能力</p>
</li>
<li><p>页面重复操作禁止</p>
</li>
<li><p>…</p>
<p>  稳定性</p>
</li>
<li><p>长时间访问系统，系统在响应时间，资源使用方面的情况</p>
</li>
<li><p>…</p>
</li>
</ul>
<p><strong>以上这些方面，确定之后要求BA在写卡以及QA测卡时都要注意覆盖到。</strong></p>
<blockquote>
<p><strong>测试重难点</strong>确定后，需要多增加对应模块的回归测试，开发也应该增加单元测试的覆盖率。</p>
</blockquote>
<pre><code>测试重点
</code></pre>
<ul>
<li><p>需求的核心功能</p>
</li>
<li><p>经常变化的部分</p>
</li>
<li><p>与其他系统相互影响的部分</p>
<p>  测试难点</p>
</li>
<li><p>相对不够独立的部分</p>
</li>
<li><p>处理过程较复杂的部分</p>
</li>
</ul>
<h3 id="测试方法与分层"><a href="#测试方法与分层" class="headerlink" title="测试方法与分层"></a>测试方法与分层</h3><div class="note info"><p>明确测试范围，时间和人力之后，还应该根据需求的变化来确定<strong>测试方法</strong>，决定是否需要自动化测试。然后再按照 <a href="https://jmyblog.top/Test-Pyramid/">测试金字塔原理</a> 决定每种测试方法的比重。</p>
</div>

<h3 id="测试计划管理"><a href="#测试计划管理" class="headerlink" title="测试计划管理"></a>测试计划管理</h3><blockquote>
<p>测试计划管理是指按照团队的上线计划，确定具体的测试时间，包括迭代内测试、集成测试、回归测试、验收测试。</p>
</blockquote>
<h3 id="测试执行过程管理"><a href="#测试执行过程管理" class="headerlink" title="测试执行过程管理"></a>测试执行过程管理</h3><p>主要包括：</p>
<ul>
<li>测试计划制定和管理：按照测试计划安排的时间执行测试，避免延期</li>
<li>测试用例编写和管理：自动化用例编写以及自动化代码重构</li>
<li>测试过程记录和管理：我的做法是在每张卡里记录自己的测试环境，场景以及是否通过，疑问等等</li>
<li>测试结果管理：发现的缺陷管理，比如新建缺陷卡，Bug report等</li>
</ul>
<h3 id="环境策略"><a href="#环境策略" class="headerlink" title="环境策略"></a>环境策略</h3><blockquote>
<p>稳定的环境是高效开发和测试的先决条件，个人人为在开发之前就应该配置好环境以及流水线等基础设施，主要用到的环境有：</p>
</blockquote>
<ul>
<li>DEV环境：Dev自测和联调使用，deskCheck环境</li>
<li>QA环境：QA日常测试使用</li>
<li>UAT环境：用户验收测试</li>
<li>其他环境：按照项目情况准备安全环境、性能测试环境等等</li>
</ul>
<h3 id="风险识别与解决"><a href="#风险识别与解决" class="headerlink" title="风险识别与解决"></a>风险识别与解决</h3><blockquote>
<p>主要是识别敏捷开发流程中的质量风险。</p>
</blockquote>
<img data-src="https://i.loli.net/2020/12/01/rjD83zVIi9e4wHq.png">

<p><span id="inline-toc">1.</span> <strong>需求阶段</strong></p>
<p>R: 需求频繁变更，对产品的需求理解不准确有偏差。<br>S: 多和用户沟通，争取更充分的研发时间和测试时间，或者把提出的功能放到下一个版本中实现。提供验收环境给客户，需要的话也可以提供测试环境给客户，这样客户可以随时看到产品进展。</p>
<p><span id="inline-toc">2.</span> <strong>开发阶段</strong></p>
<p>R: 代码质量达不到相应要求，bug多，模块开发没有统一设计。<br>S: 提升单元测试覆盖率，进行code diff，与TL讨论更多提升代码质量的方式，确定好标准。</p>
<p><span id="inline-toc">3.</span> <strong>测试阶段</strong></p>
<p>R: 测试经验不足，用例设计不到位，对业务不熟悉、不了解用户如何操作该产品；测试时间短，测试环境与生产环境的不一致，不稳定。<br>S: 找BA或开发review测试用例，与开发一起pair单元测试场景；找熟悉产品的人员进行业务培训，增加人力，尽可能模拟用户使用的环境，在测试的时候尽量和用户沟通要到用户真实的数据进行测试。</p>
<p><span id="inline-toc">4.</span> <strong>上线阶段</strong></p>
<p>R: 上线环境准备不充足，与其他服务或系统有上线依赖。<br>S: 提前准备上线脚本、上线配置文档，上线前测试；提前识别上线依赖。</p>
<h3 id="Showcase管理"><a href="#Showcase管理" class="headerlink" title="Showcase管理"></a>Showcase管理</h3><blockquote>
<p>与客户、团队成员确定多久进行一次showcase，Showcase以什么样的方式进行。确定好每次showcase的owner，推荐的做法是轮流主持。</p>
</blockquote>
<h3 id="BugBash管理"><a href="#BugBash管理" class="headerlink" title="BugBash管理"></a>BugBash管理</h3><p>参考 <a href="https://jmyblog.top/BugBash/">BugBash知多少</a> 和 <a href="https://mp.weixin.qq.com/s/S5cOjQkyvpFxpfew_exZrA">如何成功的组织Bug bash</a>。</p>
<h3 id="遗留问题记录"><a href="#遗留问题记录" class="headerlink" title="遗留问题记录"></a>遗留问题记录</h3><blockquote>
<p>记录测试策略中还需要明确和后续更新的部分。</p>
</blockquote>
<h2 id="The-End：写在最后"><a href="#The-End：写在最后" class="headerlink" title="The End：写在最后"></a>The End：写在最后</h2><p>以上就是测试策略应该包含的内容，果然像海一样宽广<span class="emoji" alias="dizzy_face" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f635.png?v8">😵</span>，不过在敏捷开发中，产品的质量是渗透到每一个开发阶段的，所有团队成员都应该为质量负责，愿每一个QA都能开心的工(ban)作(zhuan)。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>敏捷</tag>
        <tag>测试策略</tag>
      </tags>
  </entry>
  <entry>
    <title>世界就是草台班子</title>
    <url>/the-fake-world/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/11/23/pTwjIJUboOYXeE3.jpg">

<p>前段时间，我买完房，后来写了一篇博客来总结全程，做完这一切之后，突然觉得很难过。</p>
<p>有多年目标达成之后的空虚，也有几十年负债的压力，还想到了一堆工作上的糟心事，整个人精神不振，有些消极。</p>
<p>回想起买房过程中，那种被宰羔羊般的感觉：<strong>各种交钱、办手续、走流程，中介、银行、政府部门、甚至物业都可以从这件事中分一杯羹</strong>，结果就只是得到了一个面积只有几十平(还有公摊)、七十年产权(现在只有60几年)的房子。</p>
<p>还有自己当初买房的原因：「归属感和租住不同权」，现在看来也十分虚浮。「归属感」和「刚需」的概念，实际上只是资本为了获取利益，用来洗脑大众的手段，而「租住不同权」，本质上是社会问题，凭什么要我被迫买单？</p>
<p>我突然有一种自己被操控的感觉，而且是心甘情愿的被操控。看着路上来往的人群，我开始觉得城市是假的，世界也是。每个人都被禁锢着，我们以为的人生和生活，实际上都被一双双无形的大手操纵，然后还让你觉得自己有选择。</p>
<p>整个世界就像一个水晶球摆件，观赏者制定规则，比如什么事情有意义、什么东西有价值，他们则看着里面的人不停奔忙，以此为乐。</p>
<p>这样的想法让我觉得世界很虚无可怕，一切都是徒劳。</p>
<p>所以某次我对强哥说：我感觉城市是假的，他有些惊讶，说：之前有一个坐在我对面的人也这么说(就是他的来访)，我笑道：看来我现在很危险。</p>
<p>然后他劝了我很多，只是我当时被这种想法吞噬，什么也听不进去，整个人像被抽走灵魂般黯然消极，然后第二天：</p>
<img data-src="https://s2.loli.net/2023/11/26/FV4AcwKRtsl7MHX.png" width="200" height="500" alt="！？"><span class="image-caption">！？</span>

<p>好嘛，现在不仅行为被操纵，思想都被监控了？有朋友在群聊里提到类似的观点，还说「世界就是草台班子」。</p>
<p>友A的理解是世界就像一个游戏，游戏的内容会随玩家的主观意志而改变，不如把自己当作主角，别人都是NPC，也不会被影响。友B则是搬出了ChatGPT的解读，跟我上面的想法有相似之处。</p>
<p>之后还聊到地球监狱说，其实我之前也有这种感觉。活着就像坐牢一样，周内去上学、上班，周末放风，甚至活在这个身体里本身就是一种禁锢，但是这样的想法比较危险。</p>
<p>后来我又去问ChatGPT，它给出了很多种解读方式：</p>
<p><img data-src="https://s2.loli.net/2023/11/24/B1TYQL6qZpotcvH.jpg" alt="chatgpt的解读"><span class="image-caption">chatgpt的解读</span></p>
<p>所以世界到底是什么样的？没有确切的答案，每个人都有自己的处世方式，一个人在不同人生阶段的世界观也不同。有常或无常，真实或虚幻，一切都取决于我们自己的想法。</p>
<blockquote>
<p>后记：偶然看到许嵩从前写的关于 <a href="https://www.bilibili.com/read/cv8944043/">无常</a> 的文章，也有一些类似的思考，又想到日番《日常》里的经典台词 “我们一日日度过的所谓的日常，实际上是接连不断的奇迹。”<br>也许，无常便是有常。</p>
</blockquote>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>世界观</tag>
      </tags>
  </entry>
  <entry>
    <title>将故事写成我们</title>
    <url>/the-one/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2022/10/29/q9DiLxdVAkuG4QT.png">

<h2 id="羊驼"><a href="#羊驼" class="headerlink" title="羊驼"></a>羊驼</h2><p>第一次看到强哥，是在二狗的日推男嘉宾里。</p>
<p>他的主页照片是一张证件照，穿着白大褂，五官端正，皮肤白净，眼神沉稳，发型。。。超像一张我之前见过的羊驼图片：</p>
<img data-src="https://s2.loli.net/2022/10/30/WOx6kq3RwugerP8.jpg" height="230" width="400" alt="羊驼"><span class="image-caption">羊驼</span>

<p>不能说毫无关系，只能说是一模一样。</p>
<p>我突然有一种必须把这个发现分享给他的使命感，然后用了当时账户仅剩的100个狗粮申请加好友：哇你的发型好像羊驼啊。</p>
<p>当然，这并不是我加他的主要原因，除了羊驼，还有一些他自己拍的风景照(蛮不错的)，和一张在路灯下的全身照，戴着口罩背着双肩包，身材修长，笑眼盈盈，整个人温和又清新。</p>
<p>个人描述也写的很真诚，我们同岁，而且，他还是个心理咨询师(有点意思)，巧了不是，在我司谁还不是个咨询师呢(手动狗头)。</p>
<p>这还不得支棱起来？所以除了加好友，我还顺手点了推荐和关注表达自己的欣赏(这算三连操作吗)。</p>
<p>其实加好友的操作更顺手一点，因为他太高了(190)，所以觉得人家可能比较喜欢高一点的女生(虽然我165也不算很低)？</p>
<p>1hour later: 他查看了我的好友申请和资料，但没有通过。<br>2hours later: 还是没有通过。<br>3hours later: ……</p>
<p>我已经做好被自动拒绝的准备了。</p>
<p>然而，到了晚上，他通过了我的申请还主动给我打招呼，后来他说那会在忙下班后才看到(信了信了)，总之我们聊起来了。</p>
<p>他说我的摩托车很酷，黑猫也蛮可爱的，我把羊驼的图片发给他，他也说很像，然后又瞎聊了会。</p>
<p>感觉他不咋看消息的样子，怕以后不好聊，而且我对他的职业很感兴趣，不忍心放弃这个素材，就主动加了微信。</p>
<p>他的朋友圈啥也没有(三个月可见)，微信昵称是真名，微信号是系统自动生成的(wxid_xxxx这种)，看起来是个正经人。</p>
<p>可他的头像又是个萌萌的漫画小人，有点反差，而且感觉也不是很难聊的样子。</p>
<p>简单聊了聊彼此的工作节奏和生活圈，都是差不多965，住的也蛮近的，正好以后方便约。</p>
<h2 id="聊天记录里的空白日期"><a href="#聊天记录里的空白日期" class="headerlink" title="聊天记录里的空白日期"></a>聊天记录里的空白日期</h2><p>第二天，他没理我，我也没找他聊。</p>
<p>第三天，他还是没理我，我寻思微信不能白加，而且快周末了，好歹约出来见见凑下20号的素材，所以我打破了沉默：</p>
<img data-src="https://s2.loli.net/2022/11/05/7aR5KPfv8YulHOy.jpg" height="430" width="250" alt="出来聊！"><span class="image-caption">出来聊！</span>

<p>从他回复的字数来看，好像他也不是不想跟我聊，后来他说第一次加网友不知道说点啥(信了信了)。</p>
<p>然后我就随便找话题，比如他做心理咨询的时候都跟别人聊啥(顺便学点话术)，再比如他自己emo的时候怎么办。。。越聊越诡异，接着话锋一转问他周末要不要面基。</p>
<p>因为他在医院工作，所以休息日在周内，周末是他的工作日，不过我们还是约在周六晚上面基，地点定了他说的一个商圈，其实离我不算近，但又想不到别的地方，就这样吧。</p>
<p>他也开始主动给我发消息，分享一些有趣的事。比如看到的可爱猫咪，地铁上尽收眼底的头顶，还被他发现我酷似本人的头像，感觉蛮不错的。</p>
<h2 id="网友见面"><a href="#网友见面" class="headerlink" title="网友见面"></a>网友见面</h2><p>周六，微雨，傍晚又出了会太阳，是凉爽惬意的天气。</p>
<p>我出门有点晚，决定斥巨资打车去见男嘉宾，路上堵了会车，不过也只比他晚几分钟到：</p>
<img data-src="https://s2.loli.net/2022/11/05/voxaL4AZInJTqD5.png" height="430" width="250" alt="网友见面"><span class="image-caption">网友见面</span>

<p>他在人群中很好辨认(190的身高加上羊驼的发型)，我在门外就看到了他，然后摆摆手确认了眼神。</p>
<p>他没有照骗，本人高瘦白净，穿搭简约清爽，从外形上看，是我喜欢的类型。</p>
<p>他有些局促，说自己是第一次这样跟网友见面，感觉很奇特，相比之下，我就适应多了。</p>
<p>随便聊了几句，找了家重庆火锅坐下(因为他资料上说自己喜欢吃火锅来着)，然后点了菜。</p>
<p>他说我的眼睛很好看，也没有照骗，说自己是被朋友安利注册的二狗，刚来没几天。</p>
<p>然后就聊聊平时的生活爱好，求学和工作经历之类，惊讶于我对他资料的了解(人类观察员的职业素养罢了)，还给我分享了一些他工作中遇到的有趣案例，吃饭的时候还帮我倒水夹菜什么的，很细心。</p>
<p>聊天蛮愉快的，但是火锅又贵又难吃(后来他说这次我们两个人吃了350就离谱)，我们都说以后可以避雷了。吃完之后周围也没个可以遛弯的地方，就一起坐地铁各回各家了。</p>
<p>我礼貌性地问要不要AA，他沉默了会说不用了吧(后来他说以为我对他无感就体面一点不AA了<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>)。</p>
<p>其实我对他感觉还蛮不错的，他整个人比较安静随和，是个非典型白羊座了(热情大方乐观开朗的白羊)，也没有我想象中心理咨询师高深莫测的样子，就可以继续接触。</p>
<h2 id="故事"><a href="#故事" class="headerlink" title="故事"></a>故事</h2><p>面基之后，他主动发消息的频率明显增加了，会经常分享自己生活和工作中有趣的事，我也一样。</p>
<p>和他聊天很治愈，他能接上我所有暗戳戳的话头，说话也很有分寸感。</p>
<p>他会回应我的每一条消息，有时因为在忙没有及时回复也会和我解释，给人一种很安心的感觉，也逐渐发现了彼此更多的共同点，比如喜欢的歌手(毛不易)、爱看的影视剧(想见你/请回答1988/鬼怪)。</p>
<p>我们的朋友都很少，不过他并不宅，会自己一个人下班后开车出去转转遛弯，还会一个人去看电影、吃饭、旅行，也会偶尔在家或者去清吧小酌一把，内心蛮强大的(不愧是心理咨询师)。</p>
<p>他说自己喜欢听故事，巧了，我刚好有很多，就把博客链接发给他看，他刚开始说喜欢我「真诚」的文风和黑猫，后来就没回复我了。</p>
<p>我以为他被人类观察员系列吓退了，或者看到了一则小故事有点尴尬。</p>
<p>第二天，他还是主动给我发消息分享日常，我没忍住好奇心就问了下他的想法：</p>
<img data-src="https://s2.loli.net/2022/11/05/Bhw4257YRde1jxm.png" height="420" width="250" alt="哦？"><span class="image-caption">哦？</span>

<p>哟，感触还挺多，不错不错，其实我主要是想听听他对一则小故事的看法，还是算了(后来他说确实看到了这篇还安慰我)。</p>
<h2 id="话痨"><a href="#话痨" class="headerlink" title="话痨"></a>话痨</h2><p>某个工作日，他说自己可以早点下班，我想着要不约一下，他说好呀。</p>
<p>刚开始决定去公园遛弯，他来接我，结果突发情况(车被家里人开走了)，就不能去公园了(公共交通太久了)。</p>
<p>我觉得那要不改天吧，他又说看到我周围有个小商圈，其实离他有点远，他说自己可以打车过来，真是破费了。</p>
<p>不过也挺巧，上次是我斥巨资见他，这次是他斥巨资见我。</p>
<p>于是决定去那吃我推荐的一家火锅店(那段时间我几乎每天都有火锅局)，下班后我先回家收拾了会(把昨天吃火锅的衣服又从洗衣机里扒出来穿上)，也打车过去，路并不远但因为下班高峰期有些堵，导致我迟到了整整20分钟。</p>
<p>感觉蛮不好意思的，我约了人家两次，结果每次都迟到，就说抱歉然后怕他无聊一直发消息给他，他安慰我说没事让我注意安全，还说自己在商场坐着看小孩子玩海洋球和滑梯蛮有童趣的(苦中作乐)。</p>
<p>我在门口就看到了里面的他，结果保安大叔蛮坚持的，说我没核酸不让进去，我果断扭头，换了个保安大叔不那么坚持的门才进去：</p>
<img data-src="https://s2.loli.net/2022/11/05/CU21ILbWQ8tPnJw.png" height="420" width="250" alt="坚持的保安大叔"><span class="image-caption">坚持的保安大叔</span>

<p>俩人终于吃上火锅了，这次比上次的好吃点，人也不多，比较安静。</p>
<p>结束之后一起遛弯去地铁口，路上我们聊了很多，他说自己是因为喜欢所以本科研究生都是心理学专业，我觉得这很好，也聊了一些自己当时选择专业以及找工作的事儿，还有公司里有趣的同事和之前遇到的有意思的男嘉宾。</p>
<p>也许觉得他是个很好的倾听者，那天的我像个话唠一样说个不停，他都插不上嘴。</p>
<p>其实去地铁口的路并不近，但聊着天也很快就到了，我驻足微笑向他挥手告别，后来他说当时光线很暗，但我的眼睛里却溢满了流光。</p>
<h2 id="小王子和小羊肖恩"><a href="#小王子和小羊肖恩" class="headerlink" title="小王子和小羊肖恩"></a>小王子和小羊肖恩</h2><p>中秋节，他休息的那天刚好是公共假期，就约我出去玩(终于可以白天约了)，计划是一起吃饭然后去做手工(画油画)，之后再看时间商量去哪玩。</p>
<p>第二天，天气很好，他来接我，一起去吃了韩餐，然后出发去画画。</p>
<p>画室朝南，大小适中，室内的布置很有艺术感，日光也透过白色的窗纱大片渗透进来。</p>
<p>室外是条小巷，门口摆着两张藤椅，店里还养着两只猫。老板是个大哥，人很随和。</p>
<p>来画画的人并不多，除了我们，还有一对相伴来玩的姐妹，以及一个独自作画的女生。</p>
<p>我们决定做机理画，需要用石英砂混着颜料作画，各自挑了两张喜欢的图片，他的暗黑系小王子，我的可爱风小羊肖恩。</p>
<img data-src="https://s2.loli.net/2022/11/06/mMjHeXhQkBtRopC.png" height="300" width="500" alt="小王子和小羊肖恩"><span class="image-caption">小王子和小羊肖恩</span>

<p>老板让我们airdrop到店里的ipad上照着画，他手机传不了，老板说：把图发给你对象让她传，他愣了一下结巴着说我们不是，但还是把图发给了我，我也说我们是朋友，老板笑了笑没说话。</p>
<p>石英砂缺货，老板说让我们等等，坐了会我提议去外面转转，然后两个人沿着小巷走了几圈，接着坐在店门口的藤椅上晒太阳，有种淡然闲适的感觉。</p>
<p>后来终于能画画了，老板教我们把砂子铺满画布，当看到他把整个画布涂黑的时候，我有点害怕了。</p>
<p>他是真的没有什么艺术天赋，画的很慢，老板调侃说这么大个子怎么不去打篮球，把人家拉来画画，我说是我逼的<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<p>他不怎么social，我倒是跟老板和其它画画的姐妹聊的很开心，老板说我很幽默，我说我比较喜欢别人夸我好看，他全程就在旁边偷笑。</p>
<p>后来他的画布铺满了黑色的颜料和石英砂，太厚了得放在外边晾着，就看着我画，不时给我递工具什么的。</p>
<p>我抛弃了原图全是石英砂的效果，决定下面直接化成油画，和上边的石英砂蓝天形成混搭风，还自己创作了小太阳，老板说我很有想法，还教了我一些画画的手法，很快就完成了。</p>
<p>他的画则比较复杂，需要老板帮忙，后来我也加入一起合作完成：</p>
<img data-src="https://s2.loli.net/2022/11/06/m6JzoYCk7UM8yqA.png" height="350" width="500" alt="成品"><span class="image-caption">成品</span>

<p>画完之后天都黑了，我们决定先去吃饭再过来取画，然后去了旁边的商场去吃我推荐的一家中餐店。</p>
<p>没想到，一进去我就看到了一则小故事的Z某，坐在门边的位置。</p>
<p>我立马移开眼神，带着他去店里最里面坐下，还拉上了帘子，他察觉我神情有异，我说只是看到了一个不喜欢的同事，Z某离开之后，我才放松下来。</p>
<p>饭后去取画，但画室已经关门了，果然是随性的老板。</p>
<p>在一起之后的某天，我独自去取画(他上班)，老板说对他的印象很深，又问他是不是我对象，这次我说，是。</p>
<h2 id="喝酒"><a href="#喝酒" class="headerlink" title="喝酒"></a>喝酒</h2><p>周六他调休，说要约我出去，他早上要考试，说下午来接我。</p>
<p>我看了下考试点离我挺远的，周围还有个景点公园，就提议我过去他那边，他也说那边有个商圈，正好可以转转。</p>
<p>于是第二天，我转了好几趟地铁过去，错误估计了时间，又迟到了20分钟🙈</p>
<p>商圈连着地铁挺方便，找了家清淡的火锅店吃，离谱的吃了两个多小时，之后去转公园，还是我喜欢的微雨天气，雨后空气清新，也没有暴晒的太阳，很凉爽。</p>
<p>公园人不多，我们坐着景区小巴车一路吹着风聊着天，也很惬意。</p>
<p>天色渐晚，景区也快关门了，想着去别的地方玩玩，他提议去游戏厅，我觉得可，就搜了最近的一个大玩家然后出发。</p>
<p>事实证明这是个错误的决定，游戏厅并不大人也不多，刚进去我就被里边嘈杂的音乐劝退，转了一圈也没有我们想玩的项目，果然两个安静的人不适合这种吵闹的地方，相视一笑，我们走出了游戏厅。</p>
<p>然后又苦恼去哪玩，想了甜品店和去听相声脱口秀几个点子，又因为时间和地点的限制被我们一一否决。</p>
<p>后来他又提议去酒吧喝酒，当然是那种比较安静的清吧，我觉得可，就出发去他推荐的一家市中心的店。</p>
<p>低估了周六的人流，我们堵在了距离酒吧500米的路上，时间分秒过去，车子只移动了几米，也不能掉头出去了，很是烦闷。</p>
<p>又过了一阵，他搜到了一个离我家不远的酒吧，感觉也还不错，说要不离开这去那，我觉得可。</p>
<p>于是右转正要离开，但走了几十米神奇的发现一个停车入口，然后就停在那。</p>
<p>走去酒吧街，发现刚才还堵死的路口这会又不堵了，神奇double，走到他推荐的店门口，发现人很多又作罢，后来辗转终于找到一家比较安静可以收留我们的店：</p>
<img data-src="https://s2.loli.net/2022/11/06/DuJqHUis1w2jQ75.png" height="300" width="330" alt="喝酒"><span class="image-caption">喝酒</span>

<p>我们坐在二楼，各自点了喜欢的酒品，然后边喝边聊，刚开始店里只有我们两个人，氛围感拉满。喝完酒，时间也不早了，叫了代驾送我们回家，结束快乐的一天：</p>
<img data-src="https://s2.loli.net/2022/11/06/CFqM2OiQb8Aj1t6.png" height="410" width="250" alt="快乐的一天"><span class="image-caption">快乐的一天</span>

<h2 id="第一天"><a href="#第一天" class="headerlink" title="第一天"></a>第一天</h2><p>和强哥接触已经一段时间了，无论是聊天，还是见面，都没有让我觉得有不对劲的地方。</p>
<p>他的分寸感极强，也让人很有安全感，而且无论是外形还是性格，都是我喜欢的类型，为了继续观察，我决定以身犯险，谈个恋爱好了。所以第一天，有些偶然又有些必然，一切，都在我掌握之中。</p>
<p>那是一个起不来的工作日，又正好是他的休息日，我决定在家办公，晚上再约他出去，所以在怨种同事群里发布了消息，还被一个同事道破玄机：</p>
<img data-src="https://s2.loli.net/2022/11/06/K82ZxTdpqkuo4yI.png" height="330" width="250" alt="知道太多的同事"><span class="image-caption">知道太多的同事</span>

<p>是我喜欢的微雨天气，我们约好先去周围的商圈吃饭，雨不大的话再去公园遛弯。</p>
<p>下班后，他来接我，外面下着微雨，我照旧没打伞，他也猜到了这一点，于是打着伞在门口等我想给我遮一遮。</p>
<p>到了门口，我也一眼就看到了他，依旧是简约帅气的穿搭，然后视线上移，看到了，他被风卷起的伞边，画面有些滑稽。</p>
<p>我不知道他拿着这把伞多久了，不过看到前面边笑边回头看他的几个阿姨，大概明白了几分。</p>
<p>我上前说你的伞怎么这样了，他这时才发现然后立马把伞边翻下来，被我疯狂嘲笑。</p>
<p>我们去吃了一家看起来很正宗的韩餐，问服务员有什么推荐，结果阿姨笑了笑说她也不知道，随便点了些菜但并不好吃，看来正宗的只是门口的韩国大叔。</p>
<p>吃饭的时候我就在铺垫气氛，跟他一起商量以后怎么调节彼此的时间出来玩，还有去哪玩之类。</p>
<p>饭后雨有些大，看来公园是不能去了，他提议去上次搜到旁边的一个清吧去喝酒，挺近的只有100多米，我觉得可。</p>
<p>走过去看到店门口灯光很暗，门也关着，非常安静，感觉不像酒吧的样子，进入之后发现只有几个服务员，并无客人，感觉很奇妙，让我想到了韩剧秘密花园里男女主交换灵魂时去的酒家。</p>
<p>我好奇问了下怎么没人，服务员说现在时间还早(8点)，好嘛，看来正经人都是半夜才来酒吧的。</p>
<p>我们点了酒品，找了个靠里的卡座，店里环境出乎意料的不错，灯光、装饰都蛮有感觉的，而且又只有我们两个人，天助我也。</p>
<p>聊了一会，我觉着氛围差不多了，开始说我提前想好的对白：你记得《想见你》里男女主在一起的那段情节吗？</p>
<p>他说记得呀，然后两个人把那段情节回忆了一遍：</p>
<p><img data-src="https://s2.loli.net/2022/11/06/CqROuwvz4X5UKPk.jpg" alt="想见你第一天"><span class="image-caption">想见你第一天</span></p>
<p>接着开始沉默，这跟我想象中的反应不一样，我预想的是他应该回复我说：那我们今天算是第一天吗？</p>
<p>正想着是不是我暗示的不够明显，他咋还不接茬，他说：我感觉咱们现在已经有在谈恋爱的氛围了，是吧？</p>
<p>我看向他，说：那我们今天算第一天吗？</p>
<p>他说：算！然后，牵手成功：</p>
<img data-src="https://s2.loli.net/2022/11/06/eYXfoyIwODGm5RP.png" height="400" width="300" alt="牵手成功！"><span class="image-caption">牵手成功！</span>

<p>接着当场注销二狗和青藤之恋的账号，然后发朋友圈官宣，回家后，他说：</p>
<img data-src="https://s2.loli.net/2022/11/06/1MeECLnBjTxyHIP.png" height="430" width="250" alt="我们的第一天"><span class="image-caption">我们的第一天</span>

<h2 id="日常"><a href="#日常" class="headerlink" title="日常"></a>日常</h2><p>和强哥在一起已经快两个月了，目前还是没有发现他不对劲的地方，除了喜欢没有别的。</p>
<p>喜欢跟他聊天，喜欢跟他出去玩(AA)，喜欢他约会时细心的小动作，比如吃饭时给我倒水夹菜，路上遛弯让我走里边，怕对面车灯晃着我给我捂眼睛，我说过的话他都会记得。</p>
<p>嗯，需要继续观察。</p>
<p>我不在家时他会替我照顾猫猫，出远门时会接我回家，还给我买吃的盖衣服怕我饿着冷着，在家办公时，会给我做早餐捏肩，也会一起玩游戏，一起看甄嬛传，一起打羽毛球，一起遛弯，一起做饭，一起在家喝酒小酌吃炸鸡。</p>
<p>在一起之后，我发朋友圈的频率也降低了，因为有趣的事都只想跟他分享呀(PS: 当初安利他来二狗的朋友还没有脱单)</p>
<img data-src="https://s2.loli.net/2022/11/06/rAyBmQf5XTLRFV7.png" height="440" width="330" alt="我们"><span class="image-caption">我们</span>

<h2 id="人类观察员"><a href="#人类观察员" class="headerlink" title="人类观察员"></a>人类观察员</h2><p>所以人类观察员歇业了吗？并没有，不同的是，现在只想观察一个人罢了，如果发现了什么不对劲的地方，再继续更新吧(手动狗头)。</p>
<p>或许也可以从强哥那搞一些心理咨询 Or 精神卫生所的案例呢？我开始期待了。</p>
<p>说来很奇妙，以前我用这个博客找工作，现在还可以用这个博客找对象，期待发掘它更多的用处。</p>
<p>也希望大家关注我之后别的系列文章呀，嗯，比如该开始搞搞事业了，事业爱情双丰收什么的，也很妙。</p>
<img data-src="https://s2.loli.net/2022/11/06/jCMzGahJYPrdQ6l.jpg" height="140" width="200">

]]></content>
      <categories>
        <category>人类观察员</category>
      </categories>
      <tags>
        <tag>人类观察员</tag>
      </tags>
  </entry>
  <entry>
    <title>博客Next主题升级</title>
    <url>/themeUpgrade/</url>
    <content><![CDATA[<h2 id="事情是这样的"><a href="#事情是这样的" class="headerlink" title="事情是这样的"></a>事情是这样的</h2><p>前几天在优化博客的浏览体验，过程中参考了一些同道博客，发现他们在聊Next主题的v8版本。因为我也用的是这个主题，但我只更新到了v7.8版本，而且浏览了官网，最新的就是v7.8版本，引起了我的疑惑🤔，然后就开始了解惑和升级之路。</p>
<h2 id="解惑：theme-next-next-theme"><a href="#解惑：theme-next-next-theme" class="headerlink" title="解惑：theme-next&amp;next-theme"></a>解惑：theme-next&amp;next-theme</h2><p>我目前用的是 <a href="https://github.com/theme-next/">theme-next</a> 团队提供的Next主题，最新的是我在用的v7.8版本：<br><img data-src="https://i.loli.net/2021/06/25/h54FWYfywklibjV.png" alt="theme-next-v7.8"><span class="image-caption">theme-next-v7.8</span></p>
<p>浏览了同道博客，发现他们用的是 <a href="https://github.com/next-theme">next-theme</a> 团队提供的Next主题，最新版本确实是v8.x：<br><img data-src="https://i.loli.net/2021/06/25/lpjf4UEsiXhkW8M.png" alt="next-theme-v8"><span class="image-caption">next-theme-v8</span></p>
<p>那么问题来了，同一个主题为什么有两个团队在维护呢？作为一个合格的吃瓜群众🍉，我嗅到了一丝不寻常的气息，果然，有疑惑的不止我一个人：<br><img data-src="https://i.loli.net/2021/06/25/5fkAD2LBXtCyWux.png" alt="同样疑惑的吃瓜群众"><span class="image-caption">同样疑惑的吃瓜群众</span></p>
<p>紧接着我就找到了答案：<br><img data-src="https://i.loli.net/2021/06/25/oliLXKknhpUQG51.png" alt="原来是一场神仙打架"><span class="image-caption">原来是一场神仙打架</span></p>
<p>好了，疑惑没有了，虽然已经完成了对当前使用主题的一些优化，但为了与时俱进，还是决定使用新团队开发的Next主题，当然，我心中对大佬们的敬畏是一样的😂</p>
<h2 id="升级之路"><a href="#升级之路" class="headerlink" title="升级之路"></a>升级之路</h2><p>首先git clone新的 <a href="https://github.com/next-theme/hexo-theme-next">next仓库</a> ，通读了read me，然后按照同道文章进行更新，参考了：<a href="https://asurada.zone/post/Update-Next-From-V7-To-V8/">Hexo Next 主题 V7 升级 V8 记录</a></p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>关于配置文件，新团队提出了 <a href="https://hexo.io/docs/configuration.html#Alternate-Theme-Config">Alternate Theme Config 存储配置</a> 的概念，简单来说就是推荐两种方式存放主题配置文件：</p>
<ol>
<li>在博客根目录创建一个_config.next.yml 文件，将next主题的配置迁移到这里，然后在博客配置文件_config.yml里指向这个配置文件。</li>
<li>直接在博客配置文件_config.yml里添加next主题的所有配置，在一个文件里同时管理博客配置和主题配置。</li>
</ol>
<p>我参考的同道文章中使用的就是第一种方式，但我尝试之后，还是觉得之前配置方式(在主题目录和博客根目录管理各自的_config.yml)比较适合我，因为我只有一个主题，而且我一直都是这么做的，已经习惯了，所以上面两种我都不采取。</p>
<p>于是按照之前的做法，对比新旧next主题配置，直接更改 <strong>next/_config.ym</strong>l 里的内容，从上到下依次改动了：</p>
<div class="note info"><ul>
<li>切换到Mist主题</li>
<li>修改网站图标</li>
<li>打开博文copyright</li>
<li>添加菜单栏</li>
<li>修改头像，打开圆角和旋转效果</li>
<li>添加社交链接</li>
<li>添加友链</li>
<li>修改网站底部信息</li>
<li>打开标签图标</li>
<li>开启博客赞赏并添加收款码</li>
<li>开启代码库复制按钮</li>
<li>开启浏览进度header bar</li>
<li>修改字体</li>
<li>开启图片fancybox和lazyload</li>
<li>开启livere评论</li>
<li>开启chatra chat</li>
</ul>
</div>

<p>这些配置大部分都只是把 next/_config.yml 文件里的toggle打开，把false改成true而已，非常方便，没什么可讲的，但有两个功能我觉得可以高亮一下。</p>
<h4 id="图片fancybox"><a href="#图片fancybox" class="headerlink" title="图片fancybox"></a>图片fancybox</h4><p>开启fancybox只需要在_config.xml里搜索fancybox，然后将false改成true就可以了，简单到不可置信。之后就可以点开博客里的图片，而且还能切换查看上下图、幻灯片播放、查看图片列表，而且还可以看到图片下方的描述，简直了，什么神仙功能，大佬们太棒了❤️：</p>
<p><img data-src="https://i.loli.net/2021/06/25/iMc3p7a8WSoGsdQ.png" alt="fancybox"><span class="image-caption">fancybox</span></p>
<h4 id="chatra-chat"><a href="#chatra-chat" class="headerlink" title="chatra chat"></a>chatra chat</h4><p>事实上，之前使用的next主题也有这项配置，但一直没深入研究，不过这次使用之后也觉得超级方便！开启chatra chat只需要在_config.xml里搜索Chat Services，之后开启chat button展示，接着去chatra官网注册账号，把id加上就可以了，官网和找id的路径也在文件里注释了：</p>
<p><img data-src="https://i.loli.net/2021/06/25/yVWdFzJloPquMt9.png" alt="开启chatra chat"><span class="image-caption">开启chatra chat</span></p>
<p>chatra官网中也可以进行个性化配置，包括默认回复的信息，展示文本等等：</p>
<p><img data-src="https://i.loli.net/2021/06/25/ikAVf1JdjSrOxYs.png" alt="自定义弹窗展示文本"><span class="image-caption">自定义弹窗展示文本</span><br><img data-src="https://i.loli.net/2021/06/25/J1F2fexgbtGrQ8I.png" alt="自定义用户信息表单"><span class="image-caption">自定义用户信息表单</span><br><img data-src="https://i.loli.net/2021/06/25/ykLIPbEMOqUQT3s.png" alt="自定义默认回复信息"><span class="image-caption">自定义默认回复信息</span></p>
<p>至于使用成本，自注册之日起，会赠送10天的pro套餐，10天之后会回到免费套餐，但这并不影响简单使用，基本的聊天功能还是会支持的，所以还是推荐使用：<br><img data-src="https://i.loli.net/2021/06/25/K7Sug1ksNRw8WyM.png" alt="价格信息"><span class="image-caption">价格信息</span></p>
<p>Chat Services里列出的其它Chat服务tidio和gitter我也试了，但tidio貌似需要科学上网，gitter貌似只能群聊，隐私感体验较差，所以还是选择了chatra。<br>chatra可以用邮件的方式提示新消息，但刚开始只能在网页上回复消息，后来发现AppStore也有这个应用，叫<strong>Chatra</strong>，下载后就能及时用手机回复消息了：</p>
<p><img data-src="https://i.loli.net/2021/08/07/fNKCAtxyvwecpRF.png" alt="用手机App发送消息"><span class="image-caption">用手机App发送消息</span><br>手机端交互和网页差不多，但不能同时在线：</p>
<p><img data-src="https://i.loli.net/2021/08/07/fvbPwaZUjMtzOlS.jpg" alt="chatra手机端"><span class="image-caption">chatra手机端</span></p>
<h3 id="个性化设置"><a href="#个性化设置" class="headerlink" title="个性化设置"></a>个性化设置</h3><p>到这里，基本的配置就ok了，然而我之前还给主题加了一些 <a href="https://jmyblog.top/BlogUpdateNote/?highlight=%E5%8D%87%E7%BA%A7#%E4%B8%AA%E6%80%A7%E5%8C%96%E8%AE%BE%E7%BD%AE">个性化设置</a> ，但这次不打算添加太多了，只留下一些必要的就可以，返璞归真。</p>
<mark class="label success">博客宠物</mark>

<p>首先就是我们博客右下角萌萌的小黑啦，依然是按照 <a href="https://jmyblog.top/BlogUpdateNote/?highlight=%E5%8D%87%E7%BA%A7#%E5%8D%9A%E5%AE%A2%E5%AE%A0%E7%89%A9">之前的文章</a> ，在路径 /themes/next/layout/_layout.njk 尾部加上 <strong>live2d()</strong> 的标签就行。</p>
<mark class="label success">博客运行时间</mark>

<p>在博客底部加上运行时间真的很有仪式感，跳动的时间感觉博客是“活着的”，还是按照 <a href="https://jmyblog.top/BlogUpdateNote/?highlight=%E5%8D%87%E7%BA%A7#%E7%BD%91%E7%AB%99%E5%BA%95%E9%83%A8%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4">之前的文章</a> 设置。</p>
<mark class="label success">校正livere评论的refer值</mark>

<p>之前由于livere评论的refer值不对，导致评论数据缺失，后来找回来并写了 <a href="https://jmyblog.top/comments-comeback/">一篇文章</a> 讲述解决办法，所以还是按照这个解决办法，在路径 next/source/js/third-party/comments/livere.js 改动之后才能看到所有的评论数据:</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">refer: 'jmyblog.top' + location.pathname<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="升级后对比"><a href="#升级后对比" class="headerlink" title="升级后对比"></a>升级后对比</h2><p>新版Next主题内置了更多插件，只需要打开开关就能用，确实挺香的。这次升级我也把之前的Next_Gemini卡片式布局，切换到了现在的Next_Mist布局，博客展示更加返璞归真了，对比感觉还是现在的效果比较适合展示博客：</p>
<p><img data-src="https://i.loli.net/2021/06/24/ibkeCQwLaV9xsXd.jpg" alt="之前是有点花里胡哨哈"><span class="image-caption">之前是有点花里胡哨哈</span></p>
<p><img data-src="https://i.loli.net/2021/06/24/cHQjPZJUMAq5fta.png" alt="现在沉稳多了"><span class="image-caption">现在沉稳多了</span></p>
<p>这段时间真折腾啊，又是升级博客服务，又是升级主题的，终于告一段落了，之后很长一段时间应该不会再有升级了。为了维护这个小破站，我真是操碎了心，接下来就是专注写作，多更新博客了。</p>
]]></content>
      <categories>
        <category>维护小破站</category>
      </categories>
      <tags>
        <tag>next-theme</tag>
        <tag>theme-next</tag>
      </tags>
  </entry>
  <entry>
    <title>关于QA角色</title>
    <url>/thoughts-about-qa-role/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/09/18/KteuPhzw7ngd5Rp.png">

<h2 id="楚门的世界"><a href="#楚门的世界" class="headerlink" title="楚门的世界"></a>楚门的世界</h2><p>前两天，有个同事离职了，照常发了离职邮件。虽然不认识，但他邮件里描述的离职原因，却让我印象深刻。</p>
<p>大意是说，有天在下班的公交车上，突然想到自己的高考志愿是随意填的，专业是调剂的，工作是随大流找的，所以希望在60岁前，能找到一个领域或一个事物，是自己感兴趣的，那就不算是个失败者。<br>于是辞职。<br>邮件最后以《楚门的世界》经典独白「早安午安晚安」结尾，看完这封邮件，我感触颇深。</p>
<p>是啊，我也一样，大学、专业、工作都不是因为喜欢才选的，也没有什么感兴趣的事情，一切按部就班，只是为了谋生。就像一个自己人生的旁观者，和楚门一样，被无形禁锢着。</p>
<h2 id="做QA的这几年"><a href="#做QA的这几年" class="headerlink" title="做QA的这几年"></a>做QA的这几年</h2><p>大学、专业已经是过去式，无法改变。而工作，我的确开始迷惑了。</p>
<p>做QA三年，这个职业，一开始，虽然并不是因为喜欢或者感兴趣才做，但对于它在客观意义上的存在价值，还是认同的。我认同是需要这么一些人，专门利用测试方法论或工具，去「维护」软件质量。</p>
<p>后来，我逐渐发现，开发和测试是分不开的，不会开发的QA，在很多细节上插不上话，很难从代码角度给出建议，有时候还要向开发请教怎么测试，处境尴尬。所以，只通过纸上谈兵的方法论，和现学现卖的自动化测试工具来干活，已经不够看了。</p>
<p>而且近几年，开发人员对测试的关注也在不断提升，通过一些敏捷实践，比如TDD，或者一些代码检测工具，很多问题在早期就被识别和修复，纯粹的测试已经很难发现问题，不得不说，这是行业的进步。<br>自动化测试也逐渐为开发人员所重视，对比QA，他们可以更快的搭建自动化框架，写出更简练、稳定性更好的自动化测试代码。</p>
<p>至此，QA的处境就就更尴尬了。</p>
<h2 id="QA的行业现状"><a href="#QA的行业现状" class="headerlink" title="QA的行业现状"></a>QA的行业现状</h2><p>既然无法在测试阶段发现问题，自动化测试也没开发做得好，为了证明自身存在的价值，只能不断扩大影响范围，所以才会有「测试左移」、「测试右移」这种概念和方法论出现，让测试去搞需求、去写代码、去做数据分析，总之，什么都可以干。</p>
<p>这就是现在测试行业/QA角色的现状，通过拜读前公司大佬熊节的 <a href="https://mp.weixin.qq.com/s/4Ft7PXeygsrn-USjRxP9pQ">一篇文章</a> ，里面关于软件开发实际上就是个建模过程的描述，我深以为然，而下面的描述更让我深思：</p>
<div class="note primary"><p>编程的目标是建立与需求描述的模型一致的代码模型，所以写一堆代码不管对错丢给别人去测试这种行为，是编程的工作没有做完。<br>这就是现实。<br>人肉回归测试员的存在，仅仅是因为有很多程序员没有做好自己的本职工作，在人力资源便宜的时代，硬拉人来擦屁股，这是一种逆时代潮流的职业。<br>时代潮流的方向，一定是人力资源越来越贵，一定是自动化程度越来越高，所以人肉回归测试员的命运一定是被淘汰。</p>
</div>

<p>虽然说的是「人肉回归测试员」，但我觉得，整个测试行业都是这样。<br>测试本就是编程工作的一部分，是程序员的活，但很多公司为了赶进度，导致程序员只能赶工把代码写完，没时间搞测试，本末倒置。</p>
<p>说白了，测试这个职业的出现，只是因为国内的软件行业，并没有重视测试在编程过程中的重要性而导致的，而现在，随着行业的进步，测试已经被逐渐重视起来了。</p>
<p>所以我看到，很多项目已经不需要专职的QA了，而是直接由开发来做测试，其实这才是正确的做法，可能也是未来的行业方向，但这样一来，QA们该何去何从呢？</p>
<h2 id="寻求答案"><a href="#寻求答案" class="headerlink" title="寻求答案"></a>寻求答案</h2><p>为了找到这个问题的答案，我参考了很多大佬的文章，比如：</p>
<ul>
<li><a href="http://qualityfocus.club/career-development">也谈打工人的发展困境</a></li>
<li><a href="http://qualityfocus.club/qa4ever">像用户一样测试：QA永存</a></li>
<li><a href="http://qualityfocus.club/qa-value">测试人员价值的终极体现</a></li>
<li><a href="https://www.bylinzi.com/2021/08/10/how-to-improve-qa-performance/">AIMA：如何通过质量指标提高QA的绩效（译）</a></li>
<li><a href="https://www.bylinzi.com/2021/01/17/why-qa-change-role/">QA为什么转换角色</a></li>
<li><a href="https://www.bylinzi.com/2020/03/13/software-tester-career-path/">软件测试人员的职业发展之路</a></li>
<li><a href="https://www.bylinzi.com/2019/11/25/bqconf-software-tester-how-to-grow/">BQConf演讲：软件测试人员该何去何从？</a></li>
<li><a href="https://www.bylinzi.com/2019/09/30/software-tester-how-to-grow/">软件测试人员该何去何从？</a></li>
<li><a href="https://www.bylinzi.com/2019/06/05/software-testers-challenge-n-chance/">软件测试人员的挑战与机遇</a></li>
<li>……</li>
</ul>
<p>但还是没有解答我的困惑，这些文章依然在讲方法论、布道，并没有直面测试行业本身，还是在说测试要左移、右移，要去分析需求，要写代码，要从全程把控质量。。。<br>并给出了测试人员的职业方向，也是我曾以为的职业方向：</p>
<img data-src="https://i.loli.net/2021/09/22/pF7tW9ON4xCS8Um.png">

<h2 id="下一步？"><a href="#下一步？" class="headerlink" title="下一步？"></a>下一步？</h2><p>没有答案，下一步该怎么办呢？</p>
<p>现在来看，QA角色的存在价值我已经不认同了，我现在认同的是熊节大佬在 <a href="https://mp.weixin.qq.com/s?__biz=MzU1MTkyNDU4MA==&amp;mid=2247484049&amp;idx=1&amp;sn=990dd055ca733da6ba6be04f36fcde4b&amp;chksm=fb88a49accff2d8c066b1c9e7b1fa8d02e52803fb8139df44cb0e74f240d3f06e9e018079638&amp;scene=178&amp;cur_album_id=1494586231572267009#rd">另一篇文章</a> 中讲到的：</p>
<div class="note info"><p>要写出好软件，很简单，你的人得编程，得会编程，得知道怎么写好代码。</p>
<p>想让不会编程的人把软件做出来，想让不知道怎么写好代码的人把软件做好，这个梦，我们这个行业已经做了三十年了。</p>
<p>软件质量要好，bug要少，很简单，两个词：测试驱动开发，持续集成。</p>
<p>核心就是一件事：<strong>写代码的人，要把代码写好，写高质量的、有单元测试覆盖的代码。</strong> 除此之外，一切想让不知道怎么写好代码的人把软件做好的梦想，都只是梦想。</p>
</div>

<p>总结：要做好软件质量，只能让写代码的人把代码写好。<br>而我，不是那个写代码的人，也不知道怎么把代码写好，又是以什么立场去保证软件质量呢？<br>这显然是不合理的。</p>
<p>所以，为了自己的饭碗，QA们得先开始写代码，做好测试自动化，然后学习怎么写好测试代码，脚踏实地的从「人肉回归测试员」过渡成「测试开发」。如果以后，已经不需要专职的测试来保证质量，那么想继续待在这个行业，除了转角色，没有别的办法，毕竟技术岗位，talk is cheap.</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>职业</tag>
      </tags>
  </entry>
  <entry>
    <title>工作三年后</title>
    <url>/three-years-after-graduation/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/07/31/FoOkzjwaQncAq3l.png">

<h2 id="2018：传说中的试用期"><a href="#2018：传说中的试用期" class="headerlink" title="2018：传说中的试用期"></a>2018：传说中的试用期</h2><p>三年前的今天「2018.7.24」，我入职了，正式成为了打工人，也开始了6个月的试用期。<br>入职第二天，我就去印度浦那参加了为期五周的 <a href="https://jmyblog.top/TWUJourney/">TWU培训</a> ，收获颇丰；培训结束之后，又无缝衔接去了一个国外的项目，TWU练的散装英语正好派上了用场。<br>领取了新的MacBook Pro电脑，18年有touch bar那款，当时的价格大概1.8w左右，给员工配新款Mac，公司真的很良心了。<br>按照公司试用期的安排，我有了一个buddy，她可以帮助我度过试用期。我的buddy也是毕业之后来公司的，刚入职时是开发，后来又做测试，是一个代码能力强的QA。<br>在她的帮助下，我逐渐融入了项目的节奏和公司文化，也开始了一系列学习，比如英语打卡、测试知识之类，总之这一年的关键字就是「学习」，然后试用期就这样无惊无险的过去了，也没加过班，一切都很顺利，我觉得自己找到了「钱多事少离家近」的工作。</p>
<h2 id="2019：开心搬砖，快乐生活"><a href="#2019：开心搬砖，快乐生活" class="headerlink" title="2019：开心搬砖，快乐生活"></a>2019：开心搬砖，快乐生活</h2><p>这一年，是三年中最开心的一年了。<br>因为试用期结束，工作也稳定下来了，每天干的活都差不多，逐渐明白了「搬砖」是什么意思。再后来，除了搬砖，还能腾出很多时间思考和学习。<br>由于一直在一个项目组，和周围的同事们以及客户都很熟悉，每天上班唠嗑也很欢乐，有时甚至一想到第二天要上班，还很期待，一年中项目里有人走，也有人进来，但我的快乐一直不变。<br>除此之外，公司经常会办一些节日活动，比如3.7女生节的微景观DIY，第二天还放了半天假；还有万圣节做南瓜灯、中秋节做月饼，平时的人文关怀也不少。</p>
<p><img data-src="https://i.loli.net/2021/08/01/t859kegJHNB6b7o.jpg" alt="公司的节日活动"><span class="image-caption">公司的节日活动</span></p>
<p>这一年我搬了两次家，第一次搬到了一个朝北的房子(住进去之前我一直以为这房子是朝东的<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>)，装修很不错，没什么可以自己折腾的空间，而且朝北让人住着很压抑，所以住了一个月又搬了。搬到了同小区另一个朝南的房子，装修一般，但正合我意，一番折腾之后终于把房子改造成了自己喜欢的风格，而且从此后我终于分得请南北了<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p>
<p><img data-src="https://i.loli.net/2021/08/01/B4PdgGpbyAROq3t.jpg" alt="第一次搬家(左)第二次搬家(右)"><span class="image-caption">第一次搬家(左)第二次搬家(右)</span><br>后来还安排了投影仪和烤箱，看电影、研究厨艺也是一种享受。</p>
<p><img data-src="https://i.loli.net/2021/08/01/t2367xjFVWkTLrR.jpg" alt="投影仪真香"><span class="image-caption">投影仪真香</span><br><img data-src="https://i.loli.net/2021/08/01/OmK46iCosyIgezG.jpg" alt="各种烤"><span class="image-caption">各种烤</span><br>住处离公司大概5公里，但没有直达的公交，于是买了一个电动滑板车🛴，每天骑着滑板去上班，单程15-20分钟就能到公司，不能骑车的天气就打车，然后就很少坐公交了。</p>
<p><img data-src="https://i.loli.net/2021/08/01/XNd4KMO5ZcWsalL.jpg" alt="我的滑板车"><span class="image-caption">我的滑板车</span><br>自从我用滑板出行后，发现通勤路上的滑板车越来越多了，公司里也有人买了，有次澳洲的客户来西安出差，还被我成功安利，回去后也买了一辆<span class="emoji" alias="laughing" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span><br>一年中也有和同事一起去 <a href="https://jmyblog.top/5-1-travel/">青海</a>、<a href="https://jmyblog.top/6-6-travel/">色达</a> 旅行，和朋友去 <a href="https://jmyblog.top/HuaShanTravel/">爬山</a> 等 ，经常出去玩，这一年就这样快乐的结束了。</p>
<h2 id="2020：疫情下的打工人，活着"><a href="#2020：疫情下的打工人，活着" class="headerlink" title="2020：疫情下的打工人，活着"></a>2020：疫情下的打工人，活着</h2><p>2020，对大多数人来讲都是艰难的一年吧，我也不例外。<br>因为新冠疫情，过年后不能回公司上班，但后来又说要在家办公，我也没带电脑，幸亏有个同事帮我把电脑寄到了家，然后就开始在家办公，和家人一起待了1个多月，闲暇时互相切磋麻将技艺。毕业后能有这么多和家人相聚的时间真的难得，以后估计也很少有这样的机会了，所以我们都很珍惜。</p>
<p>2月底，我终于回到了西安，继续在家办公，期间一直潜心钻研厨艺，吃着美食、用投影仪看电影追剧，宅在家的日子倒也十分自在。<br>4月初，毕业后的第一个项目在疫情的影响下提前结束了，但下个项目还没有着落，所以被强制休假到月底，才去公司上班。然后开始了一个多月自我学习和培训的日子，也算充实。</p>
<p>6月初，我终于有了项目，此时国内的疫情已经基本控制住了，但国外却越愈发严重起来，这也是我第一个项目提前结束的原因，所以新项目自然是国内项目。<br>早听说过国内项目加班多节奏快，而我在公司近两年的时间里，都在国外项目，从来没加过班。经历过的国内软件项目，还是毕业前 <a href="https://jmyblog.top/%E6%9C%AA%E6%9D%A5%E6%98%AF%E6%98%9F%E8%BE%B0%E5%A4%A7%E6%B5%B7-Part2/">实习</a> 的时候，而那时的体验并不好，所以刚开始不太想去，但此时形势很严峻，我没有别的选择，只能硬着头皮上了。</p>
<p>刚开始的一个项目，虽有些不适，但也还能撑得住，有个同事听说我工作两年没加过班表示非常震惊，他是不久前来公司的，可能之前在别的公司经常加班吧，对比下来，我还真是挺「幸运」的。<br>同时，公司里也有一些微妙的变化，有人离职了，也有人「被」离职。人也越来越多了，办公室重新装修，原先的好多休闲区和休息区被拆掉，全部换成了工位，有的地方连会议室都摆上了工位，让人倍感压抑。</p>
<p>后来，这个项目终于结束了，但还是没有适合的国外项目可以去，所以又去了另一个国内项目，节奏更加紧张，这次我 <a href="https://jmyblog.top/Silent-protest/">没撑住</a> ，心态直接崩了，然后默默的下了项目。<br>此时已是11月底，剩下的一个月，是一段五味杂陈、胡思乱想的日子，2020就这样结束了。</p>
<h2 id="2021：优雅的躺平"><a href="#2021：优雅的躺平" class="headerlink" title="2021：优雅的躺平"></a>2021：优雅的躺平</h2><p>2021，我的本命年，目前没有什么奇怪的事情发生。<br>前四个月我是 <a href="https://jmyblog.top/my-1-3-part-of-2021/">这样度过</a> 的，总之就是拨云见日的一段时光，到今天，我已经在新项目上待了三个月，整体来说挺不错，因为熟人很多，也学了不少东西，不出意外今年会在这个项目上一直做下去，这样倒也不错，至于明年之后会如何，见招拆招吧。</p>
<p>到今天，我已经工作整整三年了。<br>三年以前，我想开心的工作，现在，我只想优雅地躺平<span class="emoji" alias="relieved" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">😌</span>，我是一个习惯被安排的人，习惯于被指点江山，被激扬文字，玩游戏喜欢玩辅助，所以工作也选择了辅助角色。<br>在公司我一直无争无为，默默搬砖，除了跟在一个项目工作过的人彼此认识之外，也没有什么大的影响力，可能我忽悠不了别人，也很难被人忽悠吧。搁娱乐圈，这就叫做「搬砖三年，归来仍是素人。」</p>
<p>记得刚入职的时候，有同事向我感慨「我要是21岁，就可劲儿造」，但我却一直心如止水，「造」不起来。后来，又有很多同事说我太佛系，不像个年轻人。<br>其实我一直都尽力搬砖，遵纪守法，不逃税不漏税，好好活着，不给别人找麻烦，作为社会人，我觉得已经很合格了，我是一个没有太多欲望的人，这就是我对自己的期望，如果这样就叫做「佛系」和「躺平」的话，那就是吧。</p>
<p>工作后感觉时间过的更快了，好像昨天才拿到公司的offer，转眼就已经三年了，这三年我一直一个人住，所以也练就了不错的 <a href="https://jmyblog.top/myCookingWay/">厨艺</a> ，偶尔请朋友和同事来家里小聚，生活倒也平淡自在。有人老想回到过去，但我还是喜欢现在的生活，因为过去太迷茫，对未来有太多恐惧，还是现在选择更多一些，更自由。<br>按照公司的制度，我又可以更换新的办公电脑了，这次应该是16寸的MacBook Pro，之前的电脑也打算按照员工优惠回购，收拾心情，重新出发。</p>
<h2 id="我眼里的车和房"><a href="#我眼里的车和房" class="headerlink" title="我眼里的车和房"></a>我眼里的车和房</h2><p>打工三年，我的月薪从税前四位数变成了税后五位数，这三年我每个月都攒钱，一直想买个二手的小房子，期望是用公积金就可以还贷款，这样不用降低生活质量。</p>
<p>五月份我开始实地看房，但一直找不到合适的，房价真的虚高，我的期望根本达不到，以我能拿出手的首付，只能用得上商贷，想用公积金贷款，只能掏更多的首付，凭我一人之力，目前根本做不到。<br>至于买新房，更难，虽然我有购房资格，但抛开价格不谈，现在买房必然摇号，我并不是刚需，所以希望渺茫。更别说现在无良开发商这么多，少有不维权的楼盘，所以买房这场游戏，我只能暂时被劝退。<br>最近，西安正在进行二手房价格调控，政府出台了指导价，虽不能指望对目前涨到最高点的房价有太多约束，但总归市场还是有一些震荡，买卖双方还在观望，且先看着吧。</p>
<p>至于买车？倒也不是不能买，但买了车，停哪呢，公司的车位已经排到了2023年，而且在西安开车太难了，除了限号，就是堵车，更别提车到手就贬值，还得买保险保养什么的，主要我一个人，买车的需求实在不强烈。<br>还是骑上我心爱的小滑板吧，它永远不会堵车。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>工作</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>公司上市了</title>
    <url>/tw-nasdaq-listed/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/09/18/KhCfumNJxLsgXH8.jpg">

<div class="note primary"><p>美国时间9月15日上午，thoughtworks在纽约纳斯达克股票交易所上市了。</p>
<p>今天早上，朋友圈也是一派锣鼓喧天、鞭炮齐鸣。除了作为公司员工，感觉与有荣焉之外，当然也为自己可以拿到一些「股权激励」而开心。</p>
<p>因此上市之后，我立马把公司的股票加成自选，每天看着股价起伏，计算着自己的「身价」，虽说还有两年才可以完全拿到所有的股票，但大家都期盼着股价暴涨，毕竟这是我们这些「新生代农民工」离「财富自由」最近的一次了。</p>
<p>按照惯例，今天开始还有几周的「静默期」，不能过度谈论这件事，也不能对公司的股票估值和未来发展业绩作评论，所以目前我只能默默欣慰于这笔「意外之财」。</p>
<p>为了上市，公司近年来做了不少的努力，比如换了logo：</p>
<p><img data-src="https://i.loli.net/2021/09/22/jnJpbLr57h8eVM4.png" alt="logo(左旧右新)"><span class="image-caption">logo(左旧右新)</span></p>
<p>又比如疯狂的招聘和扩招(至少中国区是这样)，重新装修办公室，增加工位，也完善了绩效考核的方式，至于上市之后还会有啥别的「花样」，拭目以待吧，但愿这些改变真的能让公司变得更好。</p>
<p>从现在起，我也是上市公司的员工了，不过心情并没有太大的起伏，只希望公司不要在股票套现之前炒掉我就好<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，也希望能在上市以后的公司待的开心。</p>
<p>啊，怎么感觉写成了朋友圈文案的样子，害，Whatever，谨以此博文来记录发生在我平淡人生中的，这一件大事。</p>
</div>

<hr>
<p>更新，上市之后的公司果然开始作妖了，具体就不说了，总之就是要让大家卷起来，而且是强制性的卷。</p>
<p>作为信奉「躺平」主义的新青年，不知道还能否撑到股票套现的时候，而且据说即使套现还要扣45%的税，所以对这笔意外之财的期待值也大大降低了，「财富自由」果然是个假命题，新一代农民工还是逃不过被剥削的命运。</p>
<p>且行且珍惜吧，发现了一个Github开源项目： <a href="https://github.com/phodal/tangping">躺平</a> ，深以为然，推荐给大家，共勉。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>人生</tag>
      </tags>
  </entry>
  <entry>
    <title>UiAutomator初体验(中)</title>
    <url>/ui-automator-test-2/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/08/07/gVpdC1hMQHsrT64.png">

<div class="note info"><p>事实上，如何上手编写最基本的UiAutomator测试，<a href="https://developer.android.com/training/testing/ui-testing/uiautomator-testing">官网</a> 上已经给出了设置步骤和简单的代码示例，只是没有从零开始介绍怎么创建一个完整的测试而已，所以我们可以基于官网文档，写一个可以在模拟器上运行的测试。</p>
</div>

<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>回到上篇博客创建好的测试项目，在app模块的build.gradle文件中，加上UiAutomator库的依赖：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">dependencies {
    ...
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>
<p>添加之后Android Studio可能不会立刻下载依赖，所以为了确保可以使用uiautomator，需要在下图手动Apply一下：</p>
<p><img data-src="https://i.loli.net/2021/08/06/ljXOiHw7F5KQZIu.png" alt="下载依赖"><span class="image-caption">下载依赖</span></p>
<h2 id="定位元素"><a href="#定位元素" class="headerlink" title="定位元素"></a>定位元素</h2><p>UI测试的第一步当然是定位元素，uiautomatorviewer工具可以做到这一点，它位于 <mark class="label primary">android-sdk/tools/bin/</mark> 目录，android-sdk就是下图中的sdk路径：</p>
<p><img data-src="https://i.loli.net/2021/05/20/2eIfnzWbQY4VsNP.png" alt="sdk location"><span class="image-caption">sdk location</span><br>打开终端，定位到上述目录中，然后运行uiautomatorviewer：</p>
<p><img data-src="https://i.loli.net/2021/08/06/1lOsYUNK7haAxnV.png" alt="运行uiautomatorviewer"><span class="image-caption">运行uiautomatorviewer</span><br>如果上篇博客的环境都准备好了，就能打开uiautomatorviewer窗口，如果有已启动的设备，这里我打开了一个 <a href="https://jmyblog.top/AppUI-AutoTest-1/#%E5%90%AF%E5%8A%A8Android-Emulator">安卓模拟器</a> ，点击窗口左上角第二个按钮，就能获取设备当前页面的screenshot，右侧是页面元素信息，通过这些信息，我们就可以定位元素了。<br>UiAutomator提供了findObject()方法定位UiObject元素，以定位上图页面底部Login按钮为例：</p>
<div class="tabs" id="定位元素写法"><ul class="nav-tabs"><li class="tab active"><a href="#定位元素写法-1">定位元素写法 1</a></li><li class="tab"><a href="#定位元素写法-2">定位元素写法 2</a></li></ul><div class="tab-content"><div class="tab-pane active" id="定位元素写法-1"><p>Kotlin：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">val loginButton: UiObject = device.findObject(
        UiSelector().text("Login").className("android.widget.TextView")
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><div class="tab-pane" id="定位元素写法-2"><p>Java：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">UiObject loginButton = device.findObject(new UiSelector()
        .text("Login")
        .className("android.widget.TextView"));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></div></div>

<h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><p>接下来我们就可以编写代码测试App了，我还是用了 <a href="https://jmyblog.top/AppUI-AutoTest-1/">之前文章</a> 里的测试App，可以在 <a href="https://github.com/webdriverio/native-demo-app/releases">这里</a> 下载，然后把它安装到模拟器里。<br>我们来编写最简单的两个Case，登录和注册。</p>
<p><img data-src="https://i.loli.net/2021/08/06/6wSmbHJQcOIKTgz.png" alt="登录和注册页面"><span class="image-caption">登录和注册页面</span></p>
<div class="note info"><p>首先是登录，要实现登录操作，我们要切换到登录页面，之后输入邮箱和密码，再点击登录即可。<br>然后是注册，需要先切换到登录页面，再切换到注册tab页，之后输入邮箱、密码、确认密码字段，最后点击注册即可。</p>
</div>
<p>这里我只贴出一个步骤，是去打开app的登录页面，就使用上面的元素定义，其它步骤都可以参考这个完成：</p>
<p><img data-src="https://i.loli.net/2021/08/06/9UVPvcLlJqCKRzD.png" alt="打开登录页面测试步骤"><span class="image-caption">打开登录页面测试步骤</span><br>其中，launchApp方法依然是 <a href="https://developer.android.com/training/testing/ui-testing/uiautomator-testing#accessing-ui-components">官网提供</a> 的，先定义了一个device对象，通过该对象连接设备，然后再利用PackageName打开对应的App，最后我们定位元素并点击进入登录页面。<br>设备当前打开App的PackageName可以通过以下命令得到：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">adb shell dumpsys window | grep -E 'mCurrentFocus'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>这就是我们使用Ui Automator编写的第一个可以运行的测试。</p>
<h2 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h2><p>有三种方式可以运行Ui Automator测试，第一种是直接在编辑器里点击运行图标：</p>
<p><img data-src="https://i.loli.net/2021/08/06/LualXZYnq1R49Bv.png" alt="两个地方都可以点"><span class="image-caption">两个地方都可以点</span><br>第二种方式是通过adb shell在命令行运行：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">adb shell am instrument -w -m -e debug false -e class 'com.example.androidtest.ExampleInstrumentedTest#openLoginPage' com.example.androidtest.test/androidx.test.runner.AndroidJUnitRunner<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>第三种方式也是在命令行运行，上篇博客提到，因为Ui Automator测试位于androidTest文件夹，是一种插桩测试，所以可以利用gradle直接运行，和mvn test执行测试的道理差不多：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">./gradlew connectedAndroidTest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>后两种运行方式，官网上也给出了 <a href="https://developer.android.com/studio/test/command-line">详细介绍</a> ，并且提供了各个参数的含义。<br>值得一提的是，用第三种方式运行测试还会生成两个测试结果文件，一个是html格式，在 <mark class="label info">path_to_your_project/module_name/build/reports/androidTests/connected/</mark> 目录中：</p>
<p><img data-src="https://i.loli.net/2021/08/06/S7AfZ3yGMFXTRYo.png" alt="测试报告"><span class="image-caption">测试报告</span><br>另一个是xml格式，在 <mark class="label info">path_to_your_project/module_name/build/outputs/androidTest-results/connected/</mark> 目录中。</p>
<h2 id="PageObject"><a href="#PageObject" class="headerlink" title="PageObject"></a>PageObject</h2><p>尽管我们已经写好了测试，但把所有的步骤都放在一个文件中显然不是good practice，所以我们可以按照Page Object模式将代码进行优化，把before方法、页面元素、操作步骤和测试分开，完成后的代码结构如下：</p>
<p><img data-src="https://i.loli.net/2021/08/07/piOLVbxPScuAw5t.png" alt="PageObject"><span class="image-caption">PageObject</span><br>其中，selectors包里是各个页面的元素，pages包则用来存放各个页面的操作方法，公用的方法比如launchApp都放在BasePage里，真正的测试用例则统一放在tests包里，我已将 <a href="https://github.com/Summyj/UiAutomatorDemo">代码库</a> 上传到了github，不足之处还请大家批评指正。<br>以下是用三种方式执行测试的视频，直接点击编辑器图标运行大概12秒，用adb运行16秒，gradle运行也不过25秒：</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNTE5MDYyMjk2OA==" frameborder="0" 'allowfullscreen'=""></iframe>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>uiautomatorviewer</tag>
      </tags>
  </entry>
  <entry>
    <title>转载：我在ThoughtWorks的头三年</title>
    <url>/threes-years-in-tw/</url>
    <content><![CDATA[<img data-src="https://cdn.jsdelivr.net/gh/Summyj/blogImageCDN/images/threes-years-in-tw/1.png">

<div class="note info"><p>前段时间，博主 <a href="https://jmyblog.top/thoughts-about-qa-role/">深刻思考</a> 了QA角色，暗叹饭碗不稳之余，也设想了下一步的实践。突然发现之前看过的这篇文章与我的设想不谋而合，所以忍不住转载之，好时时自省。<br>作者是 <a href="https://github.com/JulyShi">七姑娘</a> ，同公司大佬，之前有收藏过她的博客来着，可是访问不了了，这里是 <a href="https://mp.weixin.qq.com/s/5SyFjxymvevAvX67TSjjsg">原文链接</a> 。</p>
</div>

<hr>
<p>几天前，同事小Y发来微信。</p>
<pre><code>“嗨，你参加过AWS考试吗？你说我要不要先考一下AWS从业者证书？” 小Y问道。

“你对AWS证书了解吗？” 我说。

“不是很了解。” 小Y回答。

“建议你先做做功课再做决定哈，了解清楚在考这个证书的过程中你能学到什么？证书有什么作用？
你为什么在当下选择考它而不是别的？”
“不过，你为什么忽然想要考AWS证书呢？” 我问道。

“我看到XX 和XX都在考，所以想一起考。” 小Y答。
</code></pre>
<p>小Y是2019年加入公司的毕业生QA，和大多数新人一样好学上进，眼里充满对知识的渴望和对大神的敬仰，但缺乏目标、东奔西撞。这不禁让我想到了自己。</p>
<p>2016年底，我加入ThoughtWorks，仿佛一脚跨进了知识爆炸的时代。面对琳琅满目的学习素材、开放的网络、分享型的组织文化、一张张打满鸡血的脸庞，我浑身充满干劲，但同时饱尝着能力进阶的压力和焦虑。于是，学会“如何提升自己”就成了我这几年研究的重要课题。</p>
<div class="note info"><p>第一年</p>
</div>

<p>作为一名QA加入公司，我要足够专业！这是我的立身之本。</p>
<p>我相信，能够给人带来机会的是自己的“长板”，但限制自己发展的往往是“短板”。所以，我首先纵观全局，把QA需要具备的技能都理清楚了，然后不断寻找自己当前“最短”的一块板来提升。我将这个过程称为 <strong>“短板学习法”</strong> 。</p>
<p>这样做的好处是：能力发展会比较均衡、不偏科；其次，一旦有了全局意识，即使从最细小的事情开始，大方向也始终保持一致，有序而不乱。</p>
<p>我用“精益价值树”给自己画了一个愿景，并细分出成为一名专业QA的必备技能。</p>
<img data-src="https://i.loli.net/2021/11/01/zlRE7i6fNqTStu8.png">

<p>树的“投注”层就是我为了达成目标所需要提升的能力。要识别“短板”，首先要对每一项“投注”进行打分：</p>
<ul>
<li>0 - 表示你不具备这种技能</li>
<li>1 - 表示你能在别人指导下完成</li>
<li>2 - 表示你能独立完成</li>
<li>3 - 表示你能指导他人完成</li>
<li>4 - 表示你是这方面的专家，能去创造新的方法</li>
</ul>
<p>其中，得分最小的项就是我一定要提升的“短板”。假如有好几项得分相等且最低，我就会选择当前最容易实践的那一项，制定详细的学习举措。</p>
<p>“举措”非常重要，这决定了我最终能不能将提升计划落地。“举措”就是我要采取的具体行动，我习惯将理论与实际相结合。制定“举措”一定要考虑时间的投入。经过实践我发现，尽量不要在同一时间同时做3个以上的举措，时间的最小单位设定在2-3天最适宜。下图是我在提升自己API自动化测试时的举措，实践证明，这个“短板式学习法”很奏效。</p>
<img data-src="https://i.loli.net/2021/11/01/jOt5oyPxYiAS2LR.png">

<div class="note info"><p>第二年</p>
</div>

<p>工作的第二年，我陆续遇到一些思维的瓶颈。</p>
<ul>
<li>我们发现了很多Bug，但开发进度非常紧张，Bug如何才能更好地排进迭代（估算与计划）</li>
<li>与团队探讨问题时，我的想法是正确的，可却无法说服别人（沟通）</li>
<li>每天睁开眼睛，眼前都是堆积如山的工作，但我却无法让团队成员分担（团队协作与培养他人）</li>
<li>在项目上临时客串了几个月BA，一起出差到客户现场挖掘需求。客户有一堆想要做的东西，而时间和成本都有限，大家讨论地非常激烈，而我如鲠在喉。太少面对客户的机会，让我觉得客户仿佛有‘尖牙利爪’，不知如何应对（自信、领域知识、MVP、痛点挖掘、愿景分析、引导技术、谈判技术）</li>
</ul>
<img data-src="https://i.loli.net/2021/11/01/FZ4PrcHmUh7TCGi.png">

<p>为了打破这些思维的困境，我从公司内部找到好多资料来学习。</p>
<ul>
<li>参加公司BA系列培训，阅读BA基础必读书籍《用户故事与敏捷方法》、《用户故事地图》、《实例化需求》等。重新回顾自己客串BA时的全过程，反复推敲不足与待改进点</li>
<li>听了公司在“meia美啊”平台上公开的PM系列课程(搜索”ThoughtWorks”)，并挑选一些关键课程撰写个人感悟</li>
<li>参加公司的Tech Lead培训，学习角色认知、冲突管理、风险管理、影响力等等。并梳理自己工作中的典型案例，通过博客的方式，来记录自己的灵感和想法，如《你引导过一个窘迫的会议吗？》</li>
</ul>
<p>在学习的过程中，我意识到自己的学习动机来自于偶尔听到、看到或思考的一些课题，都是些零零散散的点，不够系统。因此，我需要按照一定的方式进行归类，构造出一个新的体系来。我将这个学习过程称为 <strong>“散点式学习法”</strong> 。</p>
<img data-src="https://i.loli.net/2021/11/01/y85EOiPuCrRBJqc.png">

<p>我通过社区培训、数据、文章、思考、与大师交流等形式获得知识，然后将这些散点按照产品、需求、领域知识、通用技能4个维度进行归类。在散点图中，我用不同的颜色标记当前对知识的掌握程度，用距离中心的位置表示学习的优先级。</p>
<p>如此一来，每当遇到一个思维瓶颈，我就将它作为一个新的课题来研究。通过散点式学习法，我碎片化地积累了很多知识。</p>
<div class="note info"><p>第三年</p>
</div>

<p>工作的第三年，除了继续以QA的角色做交付项目之外，我还做了很多事情。</p>
<ul>
<li>我参与了一些售前的工作，开始了解到一个交付项目是怎么来的、标书是什么东西、打标是怎么回事、Proposal该怎么写</li>
<li>我参与到一些咨询的工作，也终于明白为什么做咨询的人看起来睿智、自信又侃侃而谈</li>
<li>我参与到招聘，一起来设计招聘需求；参与面试，寻找适合我们的人才；我组织面试官培训，让大家都来掌握面试的技巧</li>
<li>我学习管理自己的团队，让大家有归属感、有成长、有贡献</li>
</ul>
<p>在这些工作中，我不断提升自己的文案功底、优秀的视觉化能力、精准地分析问题能力、敏锐的洞察力、精确的表达能力、良好的归纳能力、卓越的沟通技巧。</p>
<p>学到的知识越多，就越需要归纳总结。不然就很容易变成“这也会，那也会；但这也不熟，那也不精”。</p>
<img data-src="https://i.loli.net/2021/11/01/gqt9oHl6h2wZmSR.png">

<p>我将自己的技能归纳为三层：</p>
<ul>
<li>最里面是“核心技能”层：核心技能是我当前的立身之本。我作为一名QA，专业QA需要的技能及优秀素质就是我需要持续深耕的。我要严格要求自己，切不可3分钟热度</li>
<li>中间是“拓展技能”层：拓展技能层是我在角色周边获取的技能，它能帮助我突破瓶颈，站在更广阔的视野去思考；也能帮助我寻找更多的发展途径</li>
<li>最外层是“战略技能”层：这里的技能不受角色限制，不管你是一名QA，还是未来有一天你会成为一位像马爸爸一样的人，你都需要具备这些技能。随着职位越高，做的事情越复杂，你对“战略技能”的掌握就要更深入。“战略技能”让我们充满无限可能</li>
</ul>
<p>这是我在ThoughtWorks的头三年关于个人提升的理解，未来的三年，又将会是怎样的呢？</p>
<hr>
<p>写在最后：</p>
<p>电影《一代宗师》里宫老爷子说，习武之人有三个阶段：见自己，见天地，见众生。</p>
<ul>
<li>见自己，就是认识自己、了解自己，知道自己擅长学习什么武功</li>
<li>见天地，就是见识各门各派武学高手，知道自己所处的位置，这样才能日益精进</li>
<li>见众生，就是“普度众生”，让更多人学习这门武学，这样才能将其传承下去</li>
</ul>
<p>其实这不仅仅是武术传承，个人技能提升又何尝不是如此。你品、你细品……</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>职业规划</tag>
      </tags>
  </entry>
  <entry>
    <title>UiAutomator初体验(下)</title>
    <url>/ui-automator-test-3/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/08/07/XE59SbdlRZBJ7iW.png">

<div class="note info"><p>上篇博客我们用UiAutomator编写了一个可以用命令行运行的测试，那它就肯定可以集成到CI上，没有完成的同学也不用担心，可以先fork <a href="https://github.com/Summyj/UiAutomatorDemo">我的代码库</a> 和 <a href="https://github.com/bitrise-io/sample-apps-android-sdk22">模拟的Android开发代码库</a> 到你的github账户，然后注册一个 <a href="https://www.bitrise.io/">Bitrise</a> 账号即可。</p>
</div>

<h2 id="创建Android应用"><a href="#创建Android应用" class="headerlink" title="创建Android应用"></a>创建Android应用</h2><p>这里直接复用 <a href="https://jmyblog.top/AppUI-AutoTest-3/#%E5%88%9B%E5%BB%BAAndroid%E5%BA%94%E7%94%A8">之前博客</a> 相同部分的内容，按照步骤做就可以了。</p>
<h2 id="添加UiAutomator-workflow"><a href="#添加UiAutomator-workflow" class="headerlink" title="添加UiAutomator workflow"></a>添加UiAutomator workflow</h2><p>依次点击页面右侧App -&gt; Workflow ，进入Workflow编辑页面，点击 “+ Workflow” 新增一个名为UiAutomator的 workflow：</p>
<p><img data-src="https://i.loli.net/2021/05/26/UEAFWjvYlk1NMpg.png" alt="新建workflow(忽略这里的名字哈)"><span class="image-caption">新建workflow(忽略这里的名字哈)</span><br>然后自动进入该workflow的编辑页面，我们将在此workflow下载测试代码库并执行测试，页面左侧为该workflow的执行步骤和内容，Bitrise可能会默认预置一些步骤，点击左侧 + 号可以打开新增步骤页面，搜索你想要的步骤然后点击，它就会被添加到workflow里：</p>
<p><img data-src="https://i.loli.net/2021/05/24/N6P28sGVBMnU3T9.png" alt="添加执行步骤(忽略这里的名字哈)"><span class="image-caption">添加执行步骤(忽略这里的名字哈)</span><br>接下来请依次添加以下步骤。</p>
<h3 id="Activate-SSH-key-Git-Clone"><a href="#Activate-SSH-key-Git-Clone" class="headerlink" title="Activate SSH key&amp; Git Clone"></a>Activate SSH key&amp; Git Clone</h3><p>这两步通常为每个workflow最开始的两个步骤，不需要做任何改动，保持默认的配置就好，意思是说用SSH的方式下载主代码库，这里是指上面fork的模拟的Android开发代码库：</p>
<p><img data-src="https://i.loli.net/2021/08/07/bqzS9O2DV1BgE6h.png" alt="下载主代码库"><span class="image-caption">下载主代码库</span></p>
<h3 id="克隆测试代码库"><a href="#克隆测试代码库" class="headerlink" title="克隆测试代码库"></a>克隆测试代码库</h3><p>第三步是下载测试代码库，搜索并添加一个Script步骤，直接git clone即可，repo地址请换成自己的哦，Bitrise会把测试代码库下载到$BITRISE_SOURCE_DIR，也就是/bitrise/src/这个目录下：</p>
<p><img data-src="https://i.loli.net/2021/08/07/VG2rC7TZIXcsRMA.png" alt="下载测试代码库"><span class="image-caption">下载测试代码库</span></p>
<h3 id="添加安卓模拟器"><a href="#添加安卓模拟器" class="headerlink" title="添加安卓模拟器"></a>添加安卓模拟器</h3><p>然后是创建并启动模拟器，和在本地运行测试一样，运行之前得确保模拟器开启，这里我将默认的API Level改成了29，因为比较常用：</p>
<p><img data-src="https://i.loli.net/2021/08/07/JwTigPXExe2um97.png" alt="创建模拟器"><span class="image-caption">创建模拟器</span></p>
<h3 id="等待模拟器启动"><a href="#等待模拟器启动" class="headerlink" title="等待模拟器启动"></a>等待模拟器启动</h3><p>接着等待模拟器启动，默认是等待5分钟，这里我增加到了10分钟：</p>
<p><img data-src="https://i.loli.net/2021/08/07/5QtKkLRU28N4jnY.png" alt="等待模拟器启动"><span class="image-caption">等待模拟器启动</span></p>
<h3 id="安装测试App"><a href="#安装测试App" class="headerlink" title="安装测试App"></a>安装测试App</h3><p>接下来就是在模拟器里安装App了，我把测试App也保存到了代码库里，这里使用adb install命令来安装指定位置下的apk文件：</p>
<p><img data-src="https://i.loli.net/2021/08/07/JzEcfoVBwQGT4Yb.png" alt="安装Apk"><span class="image-caption">安装Apk</span></p>
<h3 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h3><p>终于到了关键的一步了，执行测试，上篇博客中提到可以用两种命令执行测试，一个是gradle，一个是adb，因为用gradle执行可以生成一个测试报告，为了方便接下来的步骤，这里选择用gardle：</p>
<p><img data-src="https://i.loli.net/2021/08/07/CYS2gtmpMWDaqw1.png" alt="执行测试"><span class="image-caption">执行测试</span></p>
<h3 id="导出测试报告-部署到Bitrise"><a href="#导出测试报告-部署到Bitrise" class="headerlink" title="导出测试报告&amp;部署到Bitrise"></a>导出测试报告&amp;部署到Bitrise</h3><p>之后搜索添加test report和deploy步骤，就可以在每次运行后看到测试报告了，上篇博客同样提到gradle执行测试后，会生成html和xml两种格式的测试报告，由于Bitrise只能解析xml格式的测试报告，所以改路径为下图xml文件所在位置，接着添加depoly步骤后才能运行之后看到测试报告，不需要做任何改动，保持默认的配置就好：</p>
<p><img data-src="https://i.loli.net/2021/08/07/DhFivjswpXt5m8n.png" alt="导出测试报告"><span class="image-caption">导出测试报告</span></p>
<h3 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h3><p>有时候为了安全考虑，代码里不能明文存储像账号密码之类的测试数据，所以这里我将账号密码保存成Bitrise的环境变量：</p>
<p><img data-src="https://i.loli.net/2021/08/07/mq2bJtDaAT9QGlu.png" alt="Bitrise添加环境变量"><span class="image-caption">Bitrise添加环境变量</span><br>接着在代码里用getenv()方法获取环境变量即可，本地运行的话再赋个值就可以了：</p>
<p><img data-src="https://i.loli.net/2021/08/07/Zqv796Dt3docrXP.png" alt="获取环境变量"><span class="image-caption">获取环境变量</span></p>
<h2 id="运行workflow"><a href="#运行workflow" class="headerlink" title="运行workflow"></a>运行workflow</h2><h3 id="运行过程"><a href="#运行过程" class="headerlink" title="运行过程"></a>运行过程</h3><p>万事皆备，就可以运行workflow了，点击右上角保存按钮，之后回到应用页面，选择开始build，选择UiAutomator workflow，然后开始Build：</p>
<p><img data-src="https://i.loli.net/2021/05/26/Tb4AgVXcCSvloQs.png" alt="首次运行workflow((这里是之前文章里的图))"><span class="image-caption">首次运行workflow((这里是之前文章里的图))</span><br>以后再运行，可以像上边一样设置Build，更方便的是进入上个build的详情页，直接点击rebuild就可以再次运行了：</p>
<p><img data-src="https://i.loli.net/2021/05/26/twh71nYu2szfMGI.png" alt="Rebuild(这里是之前文章里的图)"><span class="image-caption">Rebuild(这里是之前文章里的图)</span><br>也可以选择“Rebuild with remote access”，Bitrise给安卓应用提供了远程机器，在此机器上会运行我们的workflow：<br><img data-src="https://i.loli.net/2021/05/26/wfXjKMclDrLt1Jm.png" alt="Rebuild with remote access(这里是之前文章里的图)"><span class="image-caption">Rebuild with remote access(这里是之前文章里的图)</span><br>可以按照Bitrise提供的地址和密码连接该机器(每次运行地址和密码都会变)。</p>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>如果上面的步骤都设置正确，应该是可以运行成功的，失败的话大概率应该是上边配置不对，自行解决哦：</p>
<p><img data-src="https://i.loli.net/2021/08/07/uIFs2vK5nBQTROf.png" alt="运行结果"><span class="image-caption">运行结果</span><br><img data-src="https://i.loli.net/2021/08/07/UwucB8XYFqzDGLk.jpg" alt="测试报告"><span class="image-caption">测试报告</span><br>一共10分钟，测试跑了3分半左右，但真正执行测试的时间应该只有几十秒，其他都是在下载依赖：</p>
<p><img data-src="https://i.loli.net/2021/08/07/WxzDIfAoq1N7bTU.png" alt="测试日志"><span class="image-caption">测试日志</span><br>然后发现模拟器安装测试APP这一步花的时间很长，通常得5分钟左右：</p>
<p><img data-src="https://i.loli.net/2021/08/07/1dZblQcaHUkRDuI.png" alt="安装apk日志"><span class="image-caption">安装apk日志</span><br>有时时间更长甚至会失败，没找到解决办法，但失败的情况比较少，重跑就行，所以先不管了：</p>
<p><img data-src="https://i.loli.net/2021/08/07/XmsRVoIEP8lzq4a.png" alt="安装失败"><span class="image-caption">安装失败</span></p>
<h3 id="尝试用adb运行测试"><a href="#尝试用adb运行测试" class="headerlink" title="尝试用adb运行测试"></a>尝试用adb运行测试</h3><p>试过不导出测试报告，用adb在CI执行测试，但会报一个互斥锁的错误，感觉在CI上太难连到模拟器了，上边在模拟器安装apk的步骤也很费劲，所以最好不用adb命令吧。</p>
<p><img data-src="https://i.loli.net/2021/08/07/MTudktDJ41ZcO6G.png" alt="adb运行"><span class="image-caption">adb运行</span></p>
<h2 id="UiAutomator-vs-Appium"><a href="#UiAutomator-vs-Appium" class="headerlink" title="UiAutomator vs Appium"></a>UiAutomator vs Appium</h2><p>UiAutomator初体验到这里就结束了，因为之前我也写过用Appium进行移动端UI自动化测试的系列文章，所以感受到了很多不同，具体在以下几个方面。</p>
<h3 id="上手方面"><a href="#上手方面" class="headerlink" title="上手方面"></a>上手方面</h3><p>这是Appium的 <a href="https://jmyblog.top/AppUI-AutoTest/#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87">环境准备</a> ，这是UiAutomator的 <a href="https://jmyblog.top/ui-automator-test/#%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87">环境准备</a> ，UiAutomator是更快更简洁的，依赖更少；这是Appium创建的 <a href="https://jmyblog.top/AppUI-AutoTest/#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE">测试项目</a> ，这是UiAutomator创建的 <a href="https://jmyblog.top/ui-automator-test/#%E5%88%9B%E5%BB%BA%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE">测试项目</a> ，还是UiAutomator更快更方便。</p>
<p>这是Appium用来定位元素的 <a href="https://jmyblog.top/AppUI-AutoTest-1/#Appium-Desktop">Appium Desktop</a> ，这是UiAutomator用来定位元素的 <a href="https://jmyblog.top/ui-automator-test-2/#%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0">uiautomatorviewer</a> ，还是UiAutomator更方便，不用设置Desired Capabilities，但界面其实没人家好看。</p>
<p>这是利用Appium <a href="https://jmyblog.top/AppUI-AutoTest-1/#%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81">写的代码</a> ，这是用UiAutomator <a href="https://jmyblog.top/ui-automator-test-2/#%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81">写的代码</a> ，这里写的是同样的测试用例，其实是差不多的，只是语言不同而已。不过对于Webview，Appium还需要切换context，UiAutomator则可以直接操作Webview，不用手动切换context，这会大大减少测试运行的时间和出错率。</p>
<p>Appium适用于iOS和Android两个平台，UiAutomator是只针对Android的，其实Appium在Android平台底层用的也是UiAutomator作为自动化引擎，从Desired Capabilities的配置就可以发现：</p>
<p><img data-src="https://i.loli.net/2021/08/07/y9QTpiPKDWul81b.png" alt="android capabilities"><span class="image-caption">android capabilities</span><br>所以UiAutomator相当于是安卓原生的一个自动化测试框架，iOS也有自己原生的UI测试框架XCUITest，它也是Appium在iOS平台底层引用的自动化引擎：</p>
<p><img data-src="https://i.loli.net/2021/08/07/9GQvkLTlxMgU8Zt.png" alt="ios capabilities"><span class="image-caption">ios capabilities</span></p>
<h3 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h3><p>再来看看运行时间，还是贴出两个框架的运行视频，这里写的同样的测试用例，先来看UiAutomator用三种方式运行测试的视频，最长的时间是用gradle运行，大概25秒，最短只需要12秒：</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNTE5MDYyMjk2OA==" frameborder="0" 'allowfullscreen'=""></iframe>

<p>再来看Appium运行视频，是用npm命令跑，大概23秒，看起来和UiAutomator差不多，但更复杂的场景还是UiAutomator更快的。</p>
<iframe height="498" width="510" src="https://player.youku.com/embed/XNTE1ODA3NzE4MA==" frameborder="0" 'allowfullscreen'=""></iframe>

<h3 id="CI配置"><a href="#CI配置" class="headerlink" title="CI配置"></a>CI配置</h3><p>这是Appium的 <a href="https://jmyblog.top/AppUI-AutoTest-3/#%E6%B7%BB%E5%8A%A0e2e-workflow">CI配置过程</a> ，这是UiAutomator的 <a href="https://jmyblog.top/ui-automator-test-3/#%E6%B7%BB%E5%8A%A0UiAutomator-workflow">CI配置过程</a> ，看着虽然也差不多，但亲测其实Appium步骤更多，因为要切换Webview，后续还要加一步下载chrome webdriver，而UiAutomator则不用。</p>
<h3 id="个人体验"><a href="#个人体验" class="headerlink" title="个人体验"></a>个人体验</h3><div class="note info"><p>两个框架各有优劣，可以根据实际需求选择，我自己体验下来还是Ui Automator更方便一些，不过两个框架我都是初次使用，目前除了webview之外我也没遇到别的复杂场景，或许有的方面Appium会更胜一筹，继续学习吧，碰到之后我也会写博客分享的。</p>
</div>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Bitrise</tag>
      </tags>
  </entry>
  <entry>
    <title>UiAutomator初体验(上)</title>
    <url>/ui-automator-test/</url>
    <content><![CDATA[<img data-src="https://i.loli.net/2021/07/31/hT5tpAjqk2xZN8L.png">

<blockquote>
<p>前段时间博主写了 <a href="https://jmyblog.top/AppUI-AutoTest/">系列文章</a> 来介绍移动端的UI自动化，主要工具是Appium。之后发现Appium还是存在一些问题，比如定位不到元素、运行时间长等等。<br>后来又针对Android平台spike了其它的工具，比如Espresso、UiAutomator，它们都是安卓官网推荐的测试工具，参考了网上诸多文章，如 <a href="https://medium.com/@phamngocson.l13cla/espresso-vs-ui-automator-66af8232259d">Espresso vs Ui Automator</a>。<br>结论是Espresso拥有更多高级的方法，但它对代码能力的要求比较高，所以对于一般QA来说难以使用，而UiAutomator更容易上手，所以我选择了UiAutomator，本来想用一篇博客介绍的，但篇幅太长，所以分了三篇博客分享。</p>
</blockquote>
<h2 id="UiAutomator介绍"><a href="#UiAutomator介绍" class="headerlink" title="UiAutomator介绍"></a>UiAutomator介绍</h2><p>UiAutomator是什么呢？参考 <a href="https://developer.android.com/training/testing/ui-automator">官网介绍</a> ：</p>
<div class="note info"><p>UI Automator 测试框架提供了一组 API，用于构建在用户应用和系统应用上执行交互的界面测试。通过 UI Automator API，您可以执行在测试设备中打开“设置”菜单或应用启动器等操作。UI Automator 测试框架非常适合编写黑盒式自动化测试，此类测试的测试代码不依赖于目标应用的内部实现细节。</p>
</div>
<p>hummm…官方介绍总是给人一种似懂非懂的感觉，不过问题不大，接下来我们通过实践来深入了解UiAutomator <span class="emoji" alias="wink" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">😉</span></p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>1.下载 <a href="https://developer.android.com/studio">Android Studio</a>，下载后打开以下设置确保sdk location正确：</p>
<p><img data-src="https://i.loli.net/2021/05/20/2eIfnzWbQY4VsNP.png" alt="sdk location"><span class="image-caption">sdk location</span><br>2.下载 <a href="https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u292-b10/OpenJDK8U-jdk_x64_mac_hotspot_8u292b10.pkg">JDK 8</a> ，这里版本一定要是8，否则打不开uiautomatorviewer工具。<br>3.下载 <a href="https://download.eclipse.org/eclipse/downloads/drops4/R-4.20-202106111600/">swt</a> ，滑到页面底部找到这里，按照对应平台下载即可：</p>
<p><img data-src="https://i.loli.net/2021/08/04/k28chb6SsBjpIwH.png" alt="下载swt"><span class="image-caption">下载swt</span><br>这个也是为了打开uiautomatorviewer工具，因为uiautomatorviewer自带的swt包有一些问题，所以得自己下载一个，这个感觉是uiautomatorviewer的一个bug。<br>下载之后解压，然后把里面的swt.jar重命名为swt2.jar：</p>
<p><img data-src="https://i.loli.net/2021/08/04/WPT7VcmHapot1J5.png" alt="swt2.jar"><span class="image-caption">swt2.jar</span><br>进入上文的sdk location目录，然后再依次打开<mark class="label primary">tools/lib/x86</mark> 目录，可以看到uiautomatorviewer自带的swt包，然后复制刚才的swt2.jar到这里(我也不知道为啥不干脆替换掉原有的swt包)，下面的x86_64目录也要做同一操作：</p>
<p><img data-src="https://i.loli.net/2021/08/04/r2IeHSdCPiasYbn.png" alt="添加swt2.jar"><span class="image-caption">添加swt2.jar</span><br>4.所有依赖都已经下载完啦，然后我们来设置环境变量，打开你本地的 .bash_profile 或者 .zshrc 文件，没有就新建一个，之后输入下边的设置，直接粘贴改动即可：</p>
<pre class="line-numbers language-command" data-language="command"><code class="language-command">export JAVA_HOME=/Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
export ANDROID_HOME=path/to/your/Android sdk (eg:/Users/usr/Library/Android/sdk)
export PATH=~/bin:$PATH:/usr/local/bin:$ANDROID_HOME/platform-tools/:$JAVA_HOME/bin
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/platform-tools
AAPT_HOME=/path/to/your Android sdk build-tools (eg:/Users/usr/Library/Android/sdk/build-tools/28.0，这里的28.0是我本地的版本，你需要打开对应目录查看自己的版本然后修改。)
export AAPT_HOME
export PATH=$PATH:$AAPT_HOME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>保存后执行 <strong>source .bash_profile</strong> 或者 <strong>source .zshrc</strong> 使配置生效，然后执行 <strong>java -version</strong>，确保java版本正确。</p>
<h2 id="创建测试项目"><a href="#创建测试项目" class="headerlink" title="创建测试项目"></a>创建测试项目</h2><p>打开Android Studio创建新项目，因为我们是要写测试，而不是开发App，所以选择No Activity后继续，这里我把项目名和包名改成了自定义的，你也可以改成别的；项目语言有Java和Kotlin，其实两者非常相像，语法略有不同，这里我选了Kotlin，你也可以用Java，影响不大：</p>
<p><img data-src="https://i.loli.net/2021/08/04/1Hz826lcKeNWPwV.png" alt="创建项目"><span class="image-caption">创建项目</span><br>之后Android Studio会开始用Gradle构建你的项目，右下角可以看到进度，构建完成后，在页面左上角下拉框中切换到Project视图，可以看到项目结构：</p>
<p><img data-src="https://i.loli.net/2021/08/04/dgVfhKHEDsjRt95.png" alt="项目结构"><span class="image-caption">项目结构</span></p>
<h2 id="熟悉项目结构"><a href="#熟悉项目结构" class="headerlink" title="熟悉项目结构"></a>熟悉项目结构</h2><p>这是一个最基本的安卓项目代码结构，根目录和app模块各有一个build.gradle文件，我们重点关注 <strong>app</strong> 模块，src里有三个目录，main目录里一般存放App的activity文件，这里没有是因为我们前边选择了No Activity，不过这个与测试无瓜。<br>其他两个目录 <strong>androidTest</strong> 和 <strong>test</strong> 分别用来存放app的插桩测试(Instrumented tests)和单元测试，单元测试我们都知道，那什么是插桩测试呢？<br>同样引用 <a href="https://developer.android.com/studio/test#test_types_and_location">官网介绍</a>：</p>
<div class="note info"><p>插桩测试，位于 module-name/src/androidTest/java/ 目录，这些测试在硬件设备或模拟器上运行。这些测试有权使用 Instrumentation API，可让您获取某些信息（例如您要测试的应用的 Context），并且可让您通过测试代码来控制受测应用。在编写集成和功能界面测试来自动执行用户交互时，或者当您的测试具有模拟对象无法满足的 Android 依赖项时，可以使用这些测试。</p>
</div>
<p>很明显，我们要写的就是这种测试，所以无论是UiAutomator测试，还是上文提到的Espresso测试，都应该写在各模块文件夹里的AndroidTest目录中。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>自动化测试</tag>
        <tag>Android</tag>
        <tag>UiAutomator</tag>
      </tags>
  </entry>
  <entry>
    <title>关于闰年，你不知道的那些事</title>
    <url>/%E5%85%B3%E4%BA%8E%E9%97%B0%E5%B9%B4%EF%BC%8C%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<p>“四年一闰，百年不闰，四百年再闰”。你知道为什么吗？</p>
<span id="more"></span>

<p>判断某一年是否是闰年几乎是所有编程语言的基础练习题之一，而我们必然也熟知其规则：</p>
<ul>
<li>整除但4不能整除100</li>
<li>整除100又能整除400</li>
</ul>
<blockquote>
<p>这就是俗语中的“四年一闰，百年不闰，四百年再润”，我们当然可以根据这个规则编写程序判断闰年，但你知道为什么这样规定闰年的算法么？</p>
</blockquote>
<hr>
<p>事实上，闰年是为了弥补因人为历法规定，造成的年度天数与地球实际公转周期的时间差而设立的。所以闰年有366天。</p>
<p>那么具体是怎么弥补的呢？</p>
<blockquote>
<p>我们知道，平年一年只有365天，而实际上地球绕太阳的公转周期为365天5小时48分46秒。即一回归年。所以公历的每一年都比回归年短0.2422天，四年累计起来，共短0.9688天。</p>
</blockquote>
<p>大概就是一天，所以为了弥补这一天的时间差。给2月加上1天，就有了闰年。这样一来，每四年里就有一个闰年，3个平年。这就是<strong>四年一闰</strong>。</p>
<p>那么<strong>百年不闰，四百年再闰</strong>又是怎么回事呢？</p>
<blockquote>
<p>是这样的，刚才说四年累计起来的时间差只有0.9688天，这比我们给闰年增加的一天还少0.0312天，所以每四年就会多出0.0312天。这样400年后，就会比实际天数多出3.12天。所以我们必须在这400年中少设3个闰年。这样公历年的平均长度与回归年就近似了。</p>
</blockquote>
<p>那这3个闰年怎么少呢？</p>
<p>很简单，给百年除以400即可，比如2000-2400这400年：</p>
<ul>
<li>2000/400=5</li>
<li>2100/400=5.25</li>
<li>2200/400=5.5</li>
<li>2300/400=5.75</li>
<li>2400/400=6</li>
</ul>
<p>可以发现，正好有3个不能整除的整百年。所以规定年份是整百数的必须是400的倍数才是闰年。这就是百年不闰，四百年才闰的规定。</p>
<p>你明白了吗？</p>
<hr>
<p>当然，根据规则，我们就可以编写代码判断了：</p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int main()
{
	int year;
	cin &gt;&gt; year;

	if (year % 4 == 0)
	{
		if (year % 100 != 0)//1. 能整除4，不能整除100
		{
			cout &lt;&lt; "是闰年\n" &lt;&lt; endl;
		}
		else if ((year % 100==0) &amp;&amp; (year % 400==0))//2. 能整除100， 又能整除400
		{
			cout &lt;&lt; "是闰年\n" &lt;&lt; endl;
		}
		else//其它情况不是闰年
		{
			cout &lt;&lt; "不是闰年\n" &lt;&lt; endl;
		}
	}
	else//不能整除4就不是闰年
	{
		cout &lt;&lt; "不是闰年\n" &lt;&lt; endl;
	}
	system("pause");
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>闰年</tag>
      </tags>
  </entry>
  <entry>
    <title>博客好久没更了</title>
    <url>/why-am-not-writing-more-blogs/</url>
    <content><![CDATA[<img data-src="https://s2.loli.net/2023/10/13/zoi9pTMLjJqhF6G.png">

<div class="note info"><p>打开博客，上一篇还是2月末发表的碎碎念，已经快8个月没有更新了，博主是不是死了(啊呸)</p>
<p>倒也不是没什么可写，这段时间看过几本书还没写书评，和强哥出去旅行过几次可以写写游记，嗯，还买了一套房也想写一下心路历程。</p>
<p>所以为什么没有更新？因为想写的欲望在降低，时间也变少了。</p>
<p>回想以前写的文章，都是记录自己的个人生活，一个人为了打发辰光，也很有一种想被人看到的愿望，就算再懒癌晚期，也有时间来写一写。</p>
<p>现在有了对象，也有了家人的陪伴，平时遇到有趣的人和事都有人倾诉，不需要再通过写博客的方式来表达。而且一个人的时间变少了，只够治疗自己的懒癌，在家躺尸。</p>
<p>生活逐渐归于平淡，日常小事也都记录在日记里，没有必要在博客里重复提起。有时候我在想，那些已婚人士还会写日记吗？这种事情好像不好当着第二个人的面来做吧，我想象不到，感觉也很奇怪。</p>
<p>我和强哥讨论过这件事，关于两个人在一起不能只追求吃喝玩乐的低级趣味，需要做一些让彼此都有获得感的事情，比如一起健身做身材管理(不是你们想的那样！)，同看一本书分享观点，也要有个人空间做自己喜欢的事情或者自我提升(毕竟人只有独处的时候才会真正成为自己)，这样才算是共同成长。</p>
<p>其实追求高级趣味本来也比较难，需要克服人类懒惰的天性，一个人的时候尤是，两个人就可以互相督促，但也很难，而且我感受到两个人一起沉溺在低级趣味时带来的罪恶感要比一个人更加强烈，让我觉得非常恐慌。</p>
<p>对我来说，写博客就有一种消除恐慌感的作用。虽然日记也能记录，但只有自己看，博客多少是在大众视线(虽然现在的个人博客也大多是孤芳自赏)，就不能乱写了事，因此在写的时候也会多加一些思考，对自己更有裨益，有一种自己在输出内容的感觉，也会激励自己多学习输入新的东西。</p>
<p>说白了，日记就是在提醒自己没有白活着(一个人的时候尤是)，博客是在给别人展示自己没有白活着(人生突然 <a href="https://jmyblog.top/books-thinking/">不智慧</a> 了)，所以断更是不可能断更的，最多瞎写写这样子。</p>
</div>

<blockquote>
<p>11.19: 已经更新了几篇瞎写的博客，不过日期有点掩耳盗铃🙈</p>
</blockquote>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>瞎写写</tag>
      </tags>
  </entry>
  <entry>
    <title>敏捷开发与测试</title>
    <url>/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E4%B8%8E%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>啥是敏捷，敏捷是啥？</p>
<span id="more"></span>

<h1 id="与“敏捷开发”的初次接触"><a href="#与“敏捷开发”的初次接触" class="headerlink" title="与“敏捷开发”的初次接触"></a>与“敏捷开发”的初次接触</h1><p>开始接触到“敏捷”这个概念，是在公司实习的时候，因为所在项目组实行的是敏捷开发。后来又读了几本关于敏捷测试的书籍（软件测试的艺术第三版—Chapter9），有了更深入的理解。所以本文主要是博主的实习经历总结和读书笔记。</p>
<hr>
<blockquote>
<p>接下来我将从3个方面：What?（什么是敏捷开发）&amp;Why（为什么要实行敏捷开发）&amp;How（如何实施）来谈谈我对敏捷软件开发模式的理解。</p>
</blockquote>
<h1 id="What"><a href="#What" class="headerlink" title="What?"></a>What?</h1><h2 id="敏捷开发"><a href="#敏捷开发" class="headerlink" title="敏捷开发"></a>敏捷开发</h2><p>简单来说，敏捷开发是一个<strong>以用户为中心、客户需求为导向</strong>的开发过程。强调客户合作、响应需求变化。是一种<strong>迭代式、增量式</strong>的开发模式。主要有以下特点：</p>
<ul>
<li>依赖客户参与</li>
<li>测试驱动开发（TDD）</li>
<li>开发周期短</li>
</ul>
<h2 id="敏捷测试"><a href="#敏捷测试" class="headerlink" title="敏捷测试"></a>敏捷测试</h2><p>对应敏捷开发模式，敏捷测试要求每个人都参与到测试过程中，所以需要团队人员之间进行大量的沟通与协作。</p>
<ul>
<li>客户：定义用例和程序属性参与验收测试</li>
<li>开发和测试：共同打造可以进行功能自动化的测试配件</li>
</ul>
<p>与传统测试过程相比，敏捷测试主要有以下特征：</p>
<ul>
<li>测试并不是一个独立的阶段，而是和开发过程紧密联系并<strong>驱动开发</strong>（TDD）。</li>
<li>开发者先创建<strong>单元测试</strong>用例（失败验证测试），然后实现软件单元代码。</li>
<li>敏捷测试依赖于<strong>自动化测试</strong>。</li>
<li>测试者要通过持续的测试反馈推动项目前行，并<strong>帮助开发者修复bug</strong>。</li>
</ul>
<hr>
<h1 id="Why"><a href="#Why" class="headerlink" title="Why?"></a>Why?</h1><blockquote>
<p>与传统软件开发模式相比，敏捷开发把客户的参与作为关键环节。这样引入了灵活性，提高客户满意度。</p>
</blockquote>
<p>如今的客户总是需要能立即发布的高质量应用产品，使得传统开发模式不能适应这种激烈的市场竞争环境。所以大多数企业更青睐像敏捷开发一般，轻量化、快速的开发方法。</p>
<hr>
<h1 id="How"><a href="#How" class="headerlink" title="How?"></a>How?</h1><p>事实上，敏捷开发方法有很多种，比如：功能驱动开发（FDD）、开放统一过程等等。但最流行的是**极限编程（XP）<strong>开发方法和</strong>Scrum（进度跟踪）**项目管理方法。</p>
<blockquote>
<p><strong>XP</strong>是一种迭代式、增量式的开发模式，非常强调单元测试和验收测试，是现在最著名的敏捷方法。<br><strong>Scrum</strong>是一种迭代式、增量式的项目管理方法，适用于所有的敏捷方法，用来度量开发速度和进度。两者相辅相成，形成了现今最流行的敏捷开发模式。</p>
</blockquote>
<h2 id="XP编程"><a href="#XP编程" class="headerlink" title="XP编程"></a>XP编程</h2><p>面向对象的编程语言如Java/C#，都含有全功能的API，所以可以利用其迅速实现大型复杂应用。但正因如此，应用程序的质量经常得不到保证。</p>
<blockquote>
<p>XP编程的目的就是<strong>短时间</strong>开发<strong>高质量</strong>的应用程序。所以，XP方法将主要精力集中在测试上，在产品设计阶段之后，必须首先生成单元测试用例，然后才编写代码通过测试。</p>
</blockquote>
<p>XP开发模型用12个核心实践来驱动该过程：</p>
<ul>
<li>NO.1：需求分析（开发、客户、产品均参与）</li>
<li>NO.2：小规模、递增发布（增加实在/可增值的新功能，频繁发布新版本）</li>
<li>NO.3：系统隐喻（编程小组确认开发规则）</li>
<li>NO.4：简要设计（实现简要设计，通过单元测试，不需重复设计，只要不停实现）</li>
<li>NO.5：连续测试（编写模块之前先生成单元测试用例，模块在通过单元测试后才算完成，程序在通过所有单元测试和验收测试后才算结束）</li>
<li>NO.6：重构（清理调整代码库，任何重构之后需重新进行所有单元测试）</li>
<li>NO.7：结对编程（两位程序员在同一台机器协同开发代码库，便于对代码实时检查，提高缺陷发生纠正率）</li>
<li>NO.8：代码的集体所有权（所有代码归全体程序员所有，不存在某一个程序员只开发某一个代码库）</li>
<li>NO.9：持续集成（变更后的代码在通过单元测试之后将其集成到代码库中）</li>
<li>NO.10：每周工作40小时（不允许加班，如果每周都全力工作了40个小时，就不需要加班，在版本发布的前一周例外）</li>
<li>NO.11：客户在现场（编程小组可以随时与客户沟通）</li>
<li>NO.12：按标准编码（所有的代码需要满足编程小组设计的系统隐喻）</li>
</ul>
<h2 id="XP测试"><a href="#XP测试" class="headerlink" title="XP测试"></a>XP测试</h2><blockquote>
<p>为满足XP方法的流程和思想，XP测试强调连续测试。主要由两种类型的测试组成：<strong>单元测试</strong>和<strong>验收测试</strong>。</p>
</blockquote>
<h3 id="XP单元测试"><a href="#XP单元测试" class="headerlink" title="XP单元测试"></a>XP单元测试</h3><p>单元测试是XP测试采用的主要测试方法，具有两条规则：</p>
<p>1.所有的代码模块在编码开始前必须设计好单元测试用例（最主要的优点在于可以更好理解程序需求，排除混淆）</p>
<p>2.产品发布之前所有的代码模块必须通过单元测试</p>
<p>为了迎合项目进度，单元测试通常要用自动化测试套件来减轻单元测试负担，测试套件可以生成测试报告并对程序中出现的缺陷进行分类，帮助修复bug。</p>
<h3 id="XP验收测试"><a href="#XP验收测试" class="headerlink" title="XP验收测试"></a>XP验收测试</h3><blockquote>
<p>验收测试是判断应用程序是否满足功能性和易用性及其他需求，在设计阶段，开发人员和客户设计验收测试，由客户执行。</p>
</blockquote>
<p>验收测试需注意以下几点：</p>
<ul>
<li>同单元测试一样，验收测试也可是自动化的。测试内容为计算/数据等，可用自动化测试；当测试内容为界面布局和颜色等，测试应该是非自动化的。</li>
<li>与单元测试相同，验收测试过程中发现多个bug时，应对其进行优先级排序，每次bug修正后都要重新执行验收测试。所以验收测试也算是一种回归测试。</li>
</ul>
<h2 id="一个完整XP项目的运作流程"><a href="#一个完整XP项目的运作流程" class="headerlink" title="一个完整XP项目的运作流程"></a>一个完整XP项目的运作流程</h2><p>下表给出了一个完整XP项目应进行的流程：</p>
<table>
<thead>
<tr>
<th>步骤</th>
<th>内容</th>
</tr>
</thead>
<tbody><tr>
<td>Step1</td>
<td>程序员与客户进行产品需求分析会议，决定产品使用场景</td>
</tr>
<tr>
<td>Step2</td>
<td>编程小组进行内部会议，将需求分解为独立的任务，并估计每个任务所需要的时间（StoryPoint）</td>
</tr>
<tr>
<td>Step3</td>
<td>程序员向客户提交任务清单，并要求客户对任务清单进行优先级排序</td>
</tr>
<tr>
<td>Step4</td>
<td>编程小组根据程序员具备的能力，将任务分配给对应结对程序员</td>
</tr>
<tr>
<td>Step5</td>
<td>每对程序员按照程序需求和规格说明，编写相应任务的单元测试用例</td>
</tr>
<tr>
<td>Step6</td>
<td>每对程序员编写完成通过其单元测试用例的任务代码，期间不断对代码进行修改和重测，并对代码库进行整合和集成</td>
</tr>
<tr>
<td>Step7</td>
<td>编程小组发布应用程序的一个预览版本，由客户进行验收测试，并通过修改缺陷不断进行回归测试</td>
</tr>
<tr>
<td>Step8</td>
<td>程序员在验收测试成功的基础上发布产品版本</td>
</tr>
</tbody></table>
<p>其他工作：程序员根据最新经验更新对客户需求的时间估计方式。</p>
<h2 id="敏捷开发学习网站"><a href="#敏捷开发学习网站" class="headerlink" title="敏捷开发学习网站"></a>敏捷开发学习网站</h2><p><a href="http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1">Scrum中文网</a><br><a href="https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Simplified.pdf#zoom=100">Scrum指南</a></p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>敏捷测试</tag>
        <tag>极限编程</tag>
      </tags>
  </entry>
  <entry>
    <title>未来是星辰大海_Part2</title>
    <url>/%E6%9C%AA%E6%9D%A5%E6%98%AF%E6%98%9F%E8%BE%B0%E5%A4%A7%E6%B5%B7-Part2/</url>
    <content><![CDATA[<p>记录一下博主小半年的心路历程。</p>
<span id="more"></span>

<h2 id="Part1-尘埃落定-2017-10-2017-11"><a href="#Part1-尘埃落定-2017-10-2017-11" class="headerlink" title="Part1 尘埃落定(2017.10-2017.11)"></a>Part1 尘埃落定(2017.10-2017.11)</h2><p>自从去年9月份拿到第一个offer后，就直接签了，后来也没有再找过。当时的想法是找到一个还不错的就行，毕竟事少离家近嘛。于是安排好自己毕业前的计划，开始了在宿舍颓废的生活，期间将自己的游戏账号打到了钻石，吃饭靠舍友投喂。。</p>
<p>两个月后，按照计划，我怀着紧张中带着一丝小激动的心情出发去公司实习。</p>
<h2 id="Part2-心态有点崩-2017-12-2018-02"><a href="#Part2-心态有点崩-2017-12-2018-02" class="headerlink" title="Part2 心态有点崩(2017.12-2018.02)"></a>Part2 心态有点崩(2017.12-2018.02)</h2><p>emmm…刚开始实习的时候，也没啥感觉。毕竟需要学习的东西有很多，每天下来也能收获不少东西。</p>
<p>但是时间长了，问题就开始出现了。</p>
<p>无脑病态的加班、毫无技术难度可言的工作、传话筒一般的工作感受让我觉得有些幻灭。</p>
<p>其实对于软件测试这个岗位呢，我也知道刚开始一般都是功能（黑盒）测试，比较基础。我也是愿意从基础打起的。但我想学习更多的测试技术，利用一些工具来提高工作效率。这样能提高自己以后的竞争力和学习能力。但这些，在我两个多月的实习工作中，没有感受到。</p>
<p>此外，繁琐的管理制度和考核流程也在考验我的耐性。这样的工作环境无法达到我“还不错”的标准，如果长期这样下去，我可能连Hello World都不会写了。无脑病态的加班更是占用了我的个人时间，基本上失去了利用空闲时间提升自己的可能性。</p>
<p>总的来说，这绝对不是我要的生活，我需要重新开始找工作（论早点实习的重要性）。</p>
<h2 id="Part3-重新开始-2018-03"><a href="#Part3-重新开始-2018-03" class="headerlink" title="Part3 重新开始(2018.03)"></a>Part3 重新开始(2018.03)</h2><p>过年那会，我就开始寻找目标。经过实习之后，我更加明确自己想要什么，完善了自己的简历。所以很快就确定了目标。</p>
<p>开学之后，我参加了宣讲会。提问环节HR说测试这个岗位在我所在的城市只招5个人。这意味着我要跟好多985/211的学生甚至研究生竞争，作为一个普通一本的本科生，在学历上，我可以说是毫无胜算。</p>
<p>不过我还是想尽力一试，毕竟这是我还有应届生光环的最后一次找工作机会。而且他们公司的工作理念很吸引我，岗位需求描述也和我很贴合，我确实很想成为他们的一员。</p>
<ul>
<li>笔试</li>
</ul>
<p>宣讲之后的几天，他们公司提供了线上笔试题（全英文），我有4天时间去完成。处理完学校的杂事（学校真是一个让人又爱又恨的地方），我在图书馆泡了两天做完了笔试题（答案也是全英文），半张纸的题目我写了10张纸的答案。</p>
<p>之后开始了几天的等待期，等待的过程是煎熬的。就在我怀疑自己要挂了的时候（是不是嫌弃我答案太长了/上传答案的时候我没有改文件名等等猜测），HR给我打了电话，让我去参加面试。感觉整个世界都晴朗了。</p>
<ul>
<li>面试</li>
</ul>
<p>在经过了精心的打扮（两天没洗头），一路畅通无阻（坐反了公交车到终点站才发现，最后叫了辆滴滴），心情舒畅（电梯里跟他们公司的外国小哥哥用英语尬聊了一分钟）之后，我到达了面试地点。没有我想象中的人山人海，因为那天只面试3个人。</p>
<p>由于我非常缺乏面试经验（秋招只面试了一家拿到offer就签了，这是人生中第二次面试），所以对我而言面试的过程是漫长的，还是紧张的（两个面试官，一男一女）。坐在大会议室的我有一种任人宰割的感觉。。，在面试官的调节下（面试官很友好的），我渐渐没了紧张的感觉。在后边的面试中，做到了知无不言，言无不尽。还跟面试官聊起了人生和理想。整体感觉挺High的。就这样，原本只给我40分钟的面试时间，愣是聊了一个多小时。最后由于别人要在会议室开会，我们还是结束了面试。</p>
<ul>
<li>offer</li>
</ul>
<p>在经过1天的等待后，HR给我发了口头offer，之后几天再去公司签了正式offer。</p>
<p>没错，这家公司就是传说中的TW(ThoughtWorks)。</p>
<h2 id="Part4-最后的规划-2018-04-2018-06"><a href="#Part4-最后的规划-2018-04-2018-06" class="headerlink" title="Part4 最后的规划(2018.04-2018.06)"></a>Part4 最后的规划(2018.04-2018.06)</h2><p>今天已经4月9号了，离毕业论文答辩还有两个月的时间。这两个月我需要闭关修炼，完成3件大事：</p>
<ul>
<li>做毕设</li>
<li>完成TW毕业生入职前的线上培训学习并完成所有任务卡（所以后边也会发表一些技术相关的学习总结博客）</li>
<li>拿到驾照</li>
</ul>
<p>emmm…有点理想主义，毕竟只有两个月，不过时间是挤出来的嘛，祝我好运。</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>人生规划</tag>
      </tags>
  </entry>
  <entry>
    <title>未来是星辰大海</title>
    <url>/%E6%9C%AA%E6%9D%A5%E6%98%AF%E6%98%9F%E8%BE%B0%E5%A4%A7%E6%B5%B7/</url>
    <content><![CDATA[<p>今天去签了三方，所以，我的大学生活也许真的要结束了。</p>
<span id="more"></span>
<h1 id="大学三年"><a href="#大学三年" class="headerlink" title="大学三年"></a>大学三年</h1><p>以前常听别人说，大学其实只有短短三年。开始我是不信的，现在却不得不信了。</p>
<h2 id="大四安排"><a href="#大四安排" class="headerlink" title="大四安排"></a>大四安排</h2><p>大四刚开始，金九银十。秋招开始了：</p>
<ul>
<li>大佬：一个offer接一个offer，择优录取</li>
<li>我：找了一个offer，得，还不错，签了吧</li>
</ul>
<p>没错，作为第一次面试就拿到了offer，还签了三方的我。确实是一个很容易满足的人，当然，这跟实力也有关系，我等渣滓不敢跟大佬比。。。</p>
<p>其实offer拿到有段时间了，到今天才去签。（中间那段时间把段位从黄金升到了铂金，再也没人说我是黄金狗了），当然，还干了点别的事情。</p>
<p>唉，本来想深沉一下，咋越写越欢脱。。。</p>
<p>后边的安排可能就是先把照学到手，不过最近改革了，估计很难成为老司机的一员了。然后去实习，春节前刚好结束（说不定还能参加下公司年会）。</p>
<p>学期末确定下毕设题目，然后开整。解决完了去旅个游，毕竟大学生优惠什么的不能浪费。。。</p>
<p>然后毕业照走一波，之后再去公司报到，咱也是社会人了。</p>
<h2 id="三年回首"><a href="#三年回首" class="headerlink" title="三年回首"></a>三年回首</h2><p>这个只能在心里默默吐槽了，不过怎么说呢，有句话是成长的过程就是越来越觉得以前的自己是个xx的过程。</p>
<p>嗯，我想了一想，说的还真对。</p>
<h2 id="那些让我后悔的事"><a href="#那些让我后悔的事" class="headerlink" title="那些让我后悔的事"></a>那些让我后悔的事</h2><blockquote>
<p>说实话，还真没啥。</p>
</blockquote>
<p>说自己没好好学习吧，那是我懒我认了。不过咱好歹还拿过奖学金不是~</p>
<p>说自己没挂过科把，谁说的，挂过一门。。。（说起来既拿过奖学金，又挂过科的，估计我也是独一份）</p>
<p>说没谈过恋爱吧，有那个时间我还不如去睡觉，省事省心还自由不是~</p>
<p>其实吧，哪有那么多后悔的事情。</p>
<p>人嘛，该干嘛的时候就得干嘛，每个时间段都有自己该做的事情。做完了你才有资格搞其它有的没的。结果是你自己没做，后来又说后悔，你说这不是耍流氓这是啥？</p>
<p>或许你觉得当时没有做好，但人的身心发展都是分阶段的，几年之后再回想之前做的事情，肯定觉得不对味呀。人要是一直钻这个牛角尖，那就没啥意思了。</p>
<h1 id="对未来的一点小小畅想"><a href="#对未来的一点小小畅想" class="headerlink" title="对未来的一点小小畅想"></a>对未来的一点小小畅想</h1><p>梦想还是要有的，万一实现了呢。</p>
<h2 id="想要坚持的"><a href="#想要坚持的" class="headerlink" title="想要坚持的"></a>想要坚持的</h2><ul>
<li>健身（身体最重要）</li>
<li>读书（腹有诗书气自华（老脸一红））</li>
<li>学习（行业特殊，为了不被淘汰掉，坚持学习真的很重要）</li>
<li>坚持给父母的全民K歌账号打call（真的超爱唱歌）</li>
</ul>
<p>除了最后一条，我还真不敢保证每天都做，毕竟谁都不是圣人。但是要尽量坚持下去。</p>
<h2 id="想要实现的"><a href="#想要实现的" class="headerlink" title="想要实现的"></a>想要实现的</h2><p>等我有钱了，要啥啥没有？┑(￣Д ￣)┍</p>
<h2 id="其它有的没的"><a href="#其它有的没的" class="headerlink" title="其它有的没的"></a>其它有的没的</h2><p>都在心里。</p>
<blockquote>
<p>好了，也该收收心了。看这个日子，上次发文都在一月前了。之后得给自己博客上点干货了。</p>
</blockquote>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>人生</tag>
        <tag>未来</tag>
      </tags>
  </entry>
  <entry>
    <title>测试矩阵</title>
    <url>/%E6%B5%8B%E8%AF%95%E7%9F%A9%E9%98%B5/</url>
    <content><![CDATA[<p>谈谈对各种测试方法做二维定位后形成的测试矩阵.</p>
<span id="more"></span>

<p>最近在ThoughtWorks的#TW洞见#栏目看到了<a href="http://insights.thoughtworks.cn/test-matrix/">测试矩阵</a>的概念和介绍，觉得很有意思。也让我在另一种层面上理解了各种测试方法。</p>
<h1 id="你晕了没"><a href="#你晕了没" class="headerlink" title="你晕了没"></a>你晕了没</h1><p>相信大家在初学测试的时候一定听过下列测试名词：单元测试、集成测试、性能测试、API测试、UI测试、压力测试、冒烟测试等等。诸如此类，不胜枚举。这么多的“测试”不知道你晕了没，反正博主开始是挺晕的。</p>
<p>此外，不同的人对这些测试的理解也不尽相同，比如“单元测试”，在Java中，有人说一个类就是一个单元，有人说一个方法就是一个单元，甚至有人说一个完整的API就是一个单元。一千个人眼里有一千种单元测试。。。</p>
<h1 id="测试矩阵"><a href="#测试矩阵" class="headerlink" title="测试矩阵"></a>测试矩阵</h1><blockquote>
<p>既然有这么多的测试方法，在实际的测试工作中，我们到底怎么测试呢。像上边说的，测试种类如此繁多，难于理解，所以在测试时也难以沟通。</p>
</blockquote>
<p>其实，我们可以从两个维度来理解这些测试方法，并将其应用到实际工作中。</p>
<p>其中，第一个维度就是测试实现的层次和粒度，说白了就是测哪。是方法，类，还是API？是应用、系统、还是整个平台？</p>
<p>而我们常说的性能测试，功能测试，安全测试等等，都可以归为第二个维度，即测试的目标，也就是测什么，咋测。</p>
<p>这两个维度结合起来就形成了下边的测试矩阵：</p>
<table>
<thead>
<tr>
<th align="left">测哪\咋测</th>
<th align="left">功能测试</th>
<th align="left">集成测试</th>
<th align="left">性能测试</th>
<th align="left">安全测试</th>
</tr>
</thead>
<tbody><tr>
<td align="left">端到端</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
</tr>
<tr>
<td align="left">API</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
</tr>
<tr>
<td align="left">类</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
</tr>
<tr>
<td align="left">方法</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
<td align="left">test</td>
</tr>
</tbody></table>
<p>有了这样的认识，以后进行测试工作时工作起来就方便多了。我们可以进行“方法级别的功能测试”、“API级别的性能测试”等等。这样，使测试内容变得更加清晰。</p>
<blockquote>
<p>事实上，，而常常忽略了第二个维度，即咋测。所以，根据测试矩阵进行测试，可以避免这种问题。在实际测试工作中，大多数情况下都进行的是功能测试。</p>
</blockquote>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
      </tags>
  </entry>
  <entry>
    <title>爱你就像爱生命</title>
    <url>/%E7%88%B1%E4%BD%A0%E5%B0%B1%E5%83%8F%E7%88%B1%E7%94%9F%E5%91%BD/</url>
    <content><![CDATA[<p>你要是愿意，我就永远爱你，你要是不愿意，我就永远相思。</p>
<span id="more"></span>

<p>王小波一直是我喜欢的作家之一，更令人惊讶的是，他竟然还是个程序员。</p>
<p>他的作品部部经典，引人深思。《爱你就像爱生命》是王小波写给妻子李银河的情书合集，非常动人，每看一遍都回味无穷。</p>
<hr>
<p>你要是喜欢了别人我会哭，但是还是喜欢你。</p>
<p>你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。</p>
<p>我是爱你的，看见就爱上了，我爱你爱到不自私的地步，就像一个人手里一只鸽子飞走了，他从心里祝福那只鸽子的飞翔。你也飞吧，我会难过，也会高兴，到底会怎么样我也不知道。</p>
<p>不管我本人多么平庸，我总觉得我对你的爱很美。</p>
<p>我现在已经养成了一种习惯，就是每天要对你说几句不想对别人说的话。</p>
<p>有时候你难过了，这个时候我更爱你，只要你不拒绝我我就拥抱你，我会告诉你这是因为什么，就是我不知道是为了什么。</p>
<p>我爱你，这是我的命运。</p>
<p>我决不为了仪式爱你，我是正经爱你呢。我一正经起来，就觉得自己不坏，生活也真不坏。真的，也许不坏？我觉得信心就在这里。</p>
<p><strong>但愿我和你，是一支唱不完的歌。</strong></p>
<p>我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为别人做好事，尤其是对你，我真想把我做出的一切好事全献给你了。</p>
<p>我们是两个在宇宙里游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关。我把我的整个灵魂给你，连同它的怪癖耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。</p>
<p>只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。</p>
<p>说吧，和我好吗？</p>
]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>王小波</tag>
      </tags>
  </entry>
  <entry>
    <title>十一旅行中的小插曲</title>
    <url>/%E8%AE%B0%E5%8D%81%E4%B8%80%E6%97%85%E8%A1%8C%E4%B8%AD%E7%9A%84%E5%B0%8F%E6%8F%92%E6%9B%B2/</url>
    <content><![CDATA[<p>我人生中的这一部分，叫做冒傻气。</p>
<span id="more"></span>

<h2 id="动卧-x1f684"><a href="#动卧-x1f684" class="headerlink" title="动卧 🚄"></a>动卧 <span class="emoji" alias="bullettrain_side" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f684.png?v8">🚄</span></h2><p>按计划1号早上出发去苏州，高铁票。</p>
<p>6点起床去赶9点半的高铁。但交通拥堵还是没赶上车<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span> 。。。无奈只能改签当晚的动车卧铺，小一千块的车费。</p>
<p>于是国庆第一天，在高铁站看《闯关东》度过<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>。<br><img data-src="https://i.loli.net/2019/10/12/3saEzBhb7NOS1Xi.jpg" width="250" height="300" alt="看闯关东"><span class="image-caption">看闯关东</span>(这样看图有助于治疗颈椎)</p>
<p>第一次坐卧铺，感觉挺新鲜。环境还不错。<br><img data-src="https://i.loli.net/2019/10/11/aZUYzu1rVdic5vG.jpg" width="250" height="300" alt="动卧"><span class="image-caption">动卧</span></p>
<p>刚开始只有我一个人，本来都快睡着了。后来上来了一对去南京的中年夫妇，然后。。。我就再也睡不着了。</p>
<p>记得是大妈先开始的，打呼声虽然有些大，但还能勉强眯会眼。睡在大妈上铺的大叔表示不服，亲自示范给我们啥叫震耳欲聋，振聋发聩<span class="emoji" alias="hear_no_evil" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f649.png?v8">🙉</span> 大妈不打呼了，因为她也被吵醒了，整个房间瞬间变成了大叔的主场。。。</p>
<p>睡在我上铺的兄弟也睡不着了，穿上外套出去了，我知道，他一定是想去静静。也或许他是想出去问问，能不能把之前另一个女生跟他交换的铺位换回来<span class="emoji" alias="satisfied" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8">😆</span></p>
<p>我觉得自己有义务提醒大叔控制下自己，于是起身敲大叔的床板，没醒。求救的眼神投向大妈，大妈顿时会意也起身，敲床板。大叔醒了。但显然大叔还没有完全清醒，嘟囔了两句家乡话。两人交谈了几句，大叔转身又睡了。</p>
<p>声音虽然小了下来，但我知道，这只是暴风雨前的宁静。睡在我上铺的兄弟回来了，不知他是否意识到房间里的声音小了很多<span class="emoji" alias="relieved" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8">😌</span>。</p>
<p>果然，不一会，打鼾声又开始了。不幸的是，我没有赶在这之前睡着。</p>
<p>南京站到了，大叔大妈终于下车了。但这时离苏州也只有不到一小时的车程，看来睡觉是不可能了。天将降大任于斯人也，必将苦其心志。苦就苦吧<span class="emoji" alias="confounded" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8">😖</span>。</p>
<p>5点20分，苏州到了，我也下车了。</p>
<h2 id="看电影-x1f3a5"><a href="#看电影-x1f3a5" class="headerlink" title="看电影 🎥"></a>看电影 <span class="emoji" alias="movie_camera" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3a5.png?v8">🎥</span></h2><p>既然是国庆，那咱也该应个景。其他电影不说，《我和我的祖国》得看吧，电影虽说得两个多小时，但也安排上了。<br>然后，我眼睛就瞎了<span class="emoji" alias="see_no_evil" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8">🙈</span> </p>
<p>最不忍直视的是’白昼流星’这一篇，接宇航员和老大爷死的这两幕，简直尬到了极点。还我的陈飞宇小哥哥!!!<br><img data-src="https://i.loli.net/2019/10/14/KmAZaWJP5qYk19z.jpg" width="250" height="300" alt="白昼流星"><span class="image-caption">白昼流星</span>(有多尬大家参考<a href="https://www.zhihu.com/question/348312976/answer/843634337">这篇回答</a>)</p>
<p>只能说电影想把剧情和祖国重大事件联系起来的初衷是好的，但联系不上，也不能强制联系啊。。。<br>槽点最少的一篇，当属’回归’篇了。朱一龙简直太帅了吧///<br><img data-src="https://i.loli.net/2019/10/14/5gD27LwOvRiGcl6.jpg" width="400" height="300" alt="回归"><span class="image-caption">回归</span></p>
<p>至于《中国机长》，据说戴着<a href="https://www.zhihu.com/question/346282105/answer/841583568">3D眼镜可以看出4D效果</a>，也是槽点满满啊。所以说假期电影，不能盲目从众，爱护眼睛，从我做起。</p>
<h2 id="拙政园-x1f33f"><a href="#拙政园-x1f33f" class="headerlink" title="拙政园 🌿"></a>拙政园 <span class="emoji" alias="herb" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f33f.png?v8">🌿</span></h2><p>到了苏州，拙政园是必定要去的，原计划到苏州的第二天去，但我低估了国庆节的客流量，只能预定第三天的票了。</p>
<p>于是，第三天早上十点半，和家人一起兴致勃勃的到了拙政园景区，还没到门口，我们就傻眼了。这哪是看景，这分明是看人嘛 <span class="emoji" alias="weary" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8">😩</span> 门口早就拍好了二百米的长队。但我有点疑惑，因为拙政园的门票，在网上是按入园时间段订票的，我预订了10点半到11点半的票。这才刚刚10点半，没道理有这么多人。跟保安小哥沟通后，我们得到了答案。</p>
<p>原来，网上所谓的‘入园时间’不过是个摆设。按照常理，如果预定的是9点半到10点半的入园票，那么10点半以后才来，票应该是作废的。然而并不是，只要预订了今天的票，今天内任何时间段都可以入园，大家都想早点去，在里面多呆点时间，当然会有这么多人了。我心里有点气愤，质问保安小哥那为什么要按时间段预定票？小哥只说他们只负责维持秩序，订票规则他也不清楚<span class="emoji" alias="flushed" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f633.png?v8">😳</span></p>
<p>尽管心里好气，但已经到了，总不能又折回去，所以只好从队伍的最后边开始排队。后面有人打电话投诉，火气很大。嗯，我很佛系了<span class="emoji" alias="expressionless" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8">😑</span></p>
<p>排队这件事，精髓不在于排在你前边的人变少，而在于排在你后边的人越来越多，这样心里就会有一种莫名的满足感。半小时后，终于排到了最前面，下一波就可以进去了。后面一个插队进来的北京大叔，说山东人素质不好，还插队，只能在心里默默鄙视一下，五十步笑百步，彼此彼此罢了。</p>
<p>终于入园了，然而此刻我已经完全没了游玩的心情，只想走马观花看一遍林子，然后就离开。然而现实连这个机会都不肯给我。入园之后，我才明白‘看人’这个词的含义。尽管园子已经足够大，但游玩的的人更多，进去之后完全没有下脚的地方。整个园林像极了一座围城，里面的人想出去，外边的人想进来。过了一会，竟然下起雨来，找了个满是人的亭子避了会雨，想着这么大的林子，古时候住在里面的人该多有钱。</p>
<p>转悠了一会，想去看看园林博物馆，于是跟着路标出去，越走越觉得不对劲。转悠出去才发现再也进不去了，博物馆呢？！完全没看着，我们就这样被忽悠出去了<span class="emoji" alias="neutral_face" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">😐</span> 这时候，天又下起了大雨，没有伞的我们就像一群逃兵一样，匆忙打了车逃离了这个[围城]，围城外，旅游大巴还在源源不断的向城里开去。</p>
<p>放一张[走马观花]的时候，拍的一张园林照。听解说员介绍(偷听别人的解说员说)，右侧的亭子是按照[神龙见首不见尾]的意境设计的：</p><center><img data-src="https://i.loli.net/2019/10/14/Wyamv3ucXGQ5ITA.jpg" width="550" height="400" alt="园林"><span class="image-caption">园林</span></center><p></p>
<h2 id="商务座-x1f4ba"><a href="#商务座-x1f4ba" class="headerlink" title="商务座 💺"></a>商务座 <span class="emoji" alias="seat" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4ba.png?v8">💺</span></h2><p>由于第一天折腾改签的时候，手滑把回程的高铁票给退了(我真是个天才<span class="emoji" alias="neutral_face" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">😐</span>)。所以只能订从上海回去的机票，从苏州去上海，还要买高铁票。</p>
<p>开始是没有订商务座的，买的二等座。反正也就坐20多分钟，不讲究。但为啥后来又成了商务座呢？</p>
<p>没错，我又没赶上高铁<span class="emoji" alias="broken_heart" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f494.png?v8">💔</span> hummm, 或许苏州这个地方跟我的体质相冲。</p>
<p>事情是这样的，吸取了第一天的教训，这次时间很充裕。买了[苏州北站]去[上海虹桥]的高铁，但我却在苏州站取了票，进站的时候刷不进去了，问了旁边的服务人员，她瞟了我一眼，翻着白眼，视线看着前方说[这里是苏州火车站，高铁站是苏州北站]。我才明白搞错了<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span>。。。来不及细细品味她鄙夷的表情。我又转地铁去北站，但时间已经来不及了。到了苏州北站，检了票进去(过期的票)。万幸一个半小时后，又有一趟高铁，但只有商务座了。没有任何迟疑买了票。本来想体验下商务接待区，但服务人员已经下班了，所以又坐在高铁站看《闯关东》。。。</p>
<p>嗯，我也觉得我当时可能智商不在线。</p>
<p>第一次坐商务座，服务很到位。送了瓶水，还送了盒月饼。座位也是电动调节的，很宽敞，没有拍照<span class="emoji" alias="see_no_evil" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8">🙈</span></p>
<h2 id="找酒店-x1f3e8"><a href="#找酒店-x1f3e8" class="headerlink" title="找酒店 🏨"></a>找酒店 <span class="emoji" alias="hotel" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3e8.png?v8">🏨</span></h2><p>历经万难出了高铁站，因为早在机场旁边预订了汉庭，所以叫了辆滴滴开过去(3公里30块你敢信？）。本来以为今日份的suffer已经结束了，万万没想到老天爷又给我安排了一劫<span class="emoji" alias="worried" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61f.png?v8">😟</span></p>
<p>下车后，拿着行李箱，有点懵。因为四周并没有汉庭的牌子，往后边走了一会。发现了一家汉庭，心想肯定就是这家了，拉着行李箱我就过去了。到了前台，出示预订信息，接待的小姐姐对我说，我预订的不是这家，是另一家。我有点方<span class="emoji" alias="no_mouth" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f636.png?v8">😶</span>，这不是百度地图导航的吗？但还是拖着行李箱走了。</p>
<p>打了预订酒店电话，我描述了一下自己的位置，接电话的小哥说让我看见桥，往前走。5分钟后，果然又看见了一家汉庭。</p>
<p>进去之后，人还蛮多的，等了好久。到了柜台，我又出示了预订信息，前台小姐姐对我说，我预订的依然不是这家，是另一家。我真的快哭了<span class="emoji" alias="sob" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span>。再次打电话过去，小哥也对我有点无语。叹了口气，说我走了相反的方向，让我顺着立交桥往下走，桥下就是。</p>
<p>挂了电话，我又拉着行李箱往回走。大晚上的，四下无人，强悍如我也不禁心里发虚。一边拿着手机假装打电话一边往桥下走。在桥下又看到了一家汉庭。进店之后，刚才打电话的小哥好像也认出了我，说没错，就是这家店。我终于找到了酒店<span class="emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span><span class="emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span><span class="emoji" alias="tada" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f389.png?v8">🎉</span></p>
<p>Checkin之后让小哥看下班车预订信息，之前已经预定好了最早的一班，想再次确认。小哥一脸狐疑的看着我，估计心里在想，像我这样脑子断线的人，应该不会想到要提前预订班车吧。当我指着预定表里说，[这行就是我]，小哥才相信。</p>
<p>后来我就明白了，不到1千米的距离，有三家汉庭。然后百度地图给我定位到了酒店停车场，就走错了。也是自己一时着急没看清楚。</p>
<h2 id="坐班车-x1f68c"><a href="#坐班车-x1f68c" class="headerlink" title="坐班车 🚌"></a>坐班车 <span class="emoji" alias="bus" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f68c.png?v8">🚌</span></h2><p>晚上睡了5个小时，然后就起来了，没误班车我也觉着是个奇迹<span class="emoji" alias="joy" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span>，估计是智商归位了吧。</p>
<p>在前台等了几分钟，车就来了。找了个比较舒服的坐，等着出发。然后，又一出小闹剧开始了。</p>
<p>在车上坐了会儿我就觉着不对，因为人有点多。按理说大家都是预订的，应该人数刚好才对。很显然，有些人没有预订也上车了。开始大家相安无事，没有拆穿。几分钟后，师傅上车了，发现人数不对，就说[没有预订的人下车坐下一班吧，这样超载的话车也开不了]。话毕，车内没人说话，也没人动作。气氛变得有些微妙。</p>
<p>僵持了几分钟，还是没人下车。但车上的人坐不住了，前边有个小哥说自己七点的航班，再不走就来不及了，希望大家互相理解，自觉下车。嗯，很合情合理。然而话毕，依旧没人动作。我也纳闷究竟什么人，脸皮能这么厚。环顾车内，发现一对中年夫妇，脸上表情不太自然。</p>
<p>车上发牢骚的人越来越多。有说自己赶不上航班的，有说为什么不能自觉下车的，好像每个人都有预订一样，互相指责，千姿百态。我心里也有点着急。师傅说[实在不行就拿预定表对信息，但这样被揪出来，大家面子上也不好看。]，然而还是没人下车。没办法，大家说那就拿表对吧。<br>	<br>师傅拿表过来了，那对中年夫妇终于坐不住了，嘴里辩驳了几句，下了车。随后，又有一些人下了车。大家都用鄙夷的眼神看着那些下车的人，好像这样能把他们看穿。车开了，透过车窗，我看到刚刚下车的那对夫妇就好像什么也没发生一样，有说有笑<span class="emoji" alias="neutral_face" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8">😐</span></p>
<h2 id="结语-x1f33b"><a href="#结语-x1f33b" class="headerlink" title="结语 🌻"></a>结语 <span class="emoji" alias="sunflower" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f33b.png?v8">🌻</span></h2><p>每个人在旅行的过程中，都会有或好或坏的经历。重要的是保持积极向上的心态，乐观看待一切Love&amp;Peace <span class="emoji" alias="heart" style="" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/2764.png?v8">❤</span></p>
<center><img data-src="https://i.loli.net/2019/10/15/c8bBHQYPEr6ZThd.jpg" width="300" height="300" alt="Love&amp;Peace"><span class="image-caption">Love&amp;Peace</span></center>]]></content>
      <categories>
        <category>心灵奇旅</category>
      </categories>
      <tags>
        <tag>旅行</tag>
        <tag>苏州</tag>
      </tags>
  </entry>
  <entry>
    <title>递归求解1到100求和</title>
    <url>/%E9%80%92%E5%BD%92%E6%B1%82%E8%A7%A31%E5%88%B0100%E6%B1%82%E5%92%8C/</url>
    <content><![CDATA[<p>递归求解1到100的和是一个常见面试题。</p>
<span id="more"></span>

<p><strong>思想：</strong></p>
<p>思考一下，从1加到100可以分解成：</p>
<ul>
<li>1+（2加到100的和）</li>
<li>1+2+（3加到100的和）</li>
<li>1+2+3+（4加到100的和）</li>
<li>……</li>
</ul>
<p>怎么样，这样是不是有点递归的味道了？递归的出口就是1。</p>
<p>所以，可以编写如下代码：</p>
<p><strong>代码：</strong></p>
<pre class="line-numbers language-C++" data-language="C++"><code class="language-C++">int count(int n)
{
	if (n &gt; 1)
	{
		return n + count(n - 1);
	}
	else
	return 1;
}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<p>这样，不仅可以求1到100的和，还可以求任意区间数字的和。只要改变递归出口和上限即可。</p>
]]></content>
      <categories>
        <category>搬砖那些事儿</category>
      </categories>
      <tags>
        <tag>递归</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>/baidu_verify_code-z0T5qSqoQf.html</url>
    <content><![CDATA[b3836d9f660efb9032a1db917b3972ae]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/about/index.html</url>
    <content><![CDATA[<blockquote><p>那一天我二十一岁，在我一生的黄金时代。我有好多奢望，我想爱，想吃，还想在一瞬间变成天上半明半暗的云。</p>
<footer><strong>王小波</strong><cite><a href="https://book.douban.com/subject/1089243/">黄金时代</a></cite></footer></blockquote>

<img data-src="https://i.loli.net/2021/08/03/93kctmnIgVCifEb.jpg" width="200" height="200">

<blockquote class="blockquote-center">
<p>97年生人<br>一个不想努力的老阿姨<br>音乐 - <del>健身</del> - 美食 - 追剧<br>巨蟹座 &amp; 天生宅 &amp; 懒癌晚期 &amp; 重度拖延</p>

</blockquote>

<div class="note info"><p>本站用 <a href="https://hexo.io/">Hexo</a> 框架搭建，并部署在 <a href="https://pages.github.com/">GithubPages</a> 和 <a href="https://jmyblog-top-1306110219.cos-website.ap-beijing.myqcloud.com/">腾讯云Serverless</a> 上，以前写过 <a href="http://jmyblog.top/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more">一篇文章</a> 来介绍搭建过程，但现在已经不适用了，不过可以看个热闹。<br>博客搭建之前的文章记录在 <a href="https://blog.csdn.net/summy_j">CSDN</a> 中，都是一些技术博客，但是里面的内容我现在已经看不懂了，因为工作中大多都没有用到。<br>这里会更新我的一些工(ban)作(zhuan)总结和生活感悟，家人们也可以用博客右下角的匿名聊天弹窗和我联系。</p>
</div>
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
