{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/Staticfile","path":"Staticfile","modified":0,"renderable":0},{"_id":"source/README.MDOWN","path":"README.MDOWN","modified":0,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/googlea721c6aa1705ce17.html","path":"googlea721c6aa1705ce17.html","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/love.js","path":"js/src/love.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1557911356458},{"_id":"source/.DS_Store","hash":"545912c3c16e2823d5bdf8862276232d3cd35cc7","modified":1557972246704},{"_id":"source/README.MDOWN","hash":"92c950ec2f9d78403b046ec6a3f01cddec927526","modified":1557911356458},{"_id":"source/CNAME","hash":"06ecbbe758208fdd08a30ce43d257808a51c391f","modified":1557911356457},{"_id":"themes/next/.DS_Store","hash":"99f868cc0b6f43c8f8f8e19866c63e39635c2d2c","modified":1558515637632},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1550815384000},{"_id":"source/favicon.ico","hash":"81d74d6dd6bf8c0a5f626ef83b26b41d142fe651","modified":1558062351558},{"_id":"themes/next/README.en.md","hash":"fd7a00ae9026fb4f87dd7eed9ce049d0db447140","modified":1550815384000},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1550815384000},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1550815384000},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1550815384000},{"_id":"themes/next/_config.yml","hash":"59e0987a40488db398c8e81d962a9dab7f582b61","modified":1562233981773},{"_id":"themes/next/package.json","hash":"85a77bafb3d1e958b82e52528b7a95fcd59efda9","modified":1550815386000},{"_id":"source/_posts/20岁光阴不再来.md","hash":"48ccab948e70042b5d37ed7daa55b3de2456ffda","modified":1557994913923},{"_id":"source/_posts/FirstBlog.md","hash":"c1626aa331b72f855b973f93f30f55b416cf10d6","modified":1557994926587},{"_id":"source/_posts/Git学习笔记.md","hash":"fece515312432d0d212e57284c7782b17f823249","modified":1557994939931},{"_id":"source/_posts/java判断素数.md","hash":"e494520f8ec6823c2db1171bcf1694a257e4db93","modified":1557995198627},{"_id":"source/_posts/Hexo-GithubPages-CodingPages搭建自己的个人博客.md","hash":"f43ae3403279e00881590671117b219d66caa2df","modified":1570774427700},{"_id":"source/_posts/java类中的代码块执行顺序.md","hash":"57fb806b0fec2f69078f4d77e14b288373218f58","modified":1557995195067},{"_id":"source/_posts/关于闰年，你不知道的那些事.md","hash":"3dd6e017d1551e924b53aa0ef0d5c0c60a5f8aa6","modified":1561087295658},{"_id":"source/_posts/敏捷开发与测试.md","hash":"6bbb2d3952132317a72e23e6d1902b56719884d9","modified":1557995103172},{"_id":"source/_posts/未来是星辰大海.md","hash":"aaa2d973a06b91c70b2ccfbe59775d23bf7014fa","modified":1557995121772},{"_id":"source/_posts/未来是星辰大海-Part2.md","hash":"2de2b731379cb57d7907c329cea608506ed43d48","modified":1557995126316},{"_id":"source/_posts/测试矩阵.md","hash":"bcf95bdf8f1bd4eb8ae74a23a7df3b7d1f352da4","modified":1557995117820},{"_id":"source/_posts/爱你就像爱生命.md","hash":"c645b4bd2437b3732ca914578dbf7889f95deb41","modified":1557911356460},{"_id":"source/_posts/递归求解1到100求和.md","hash":"21e1f13aab41777f9223d66a24a0a2f57b99e7ce","modified":1557911356460},{"_id":"source/_posts/记十一旅行中的小插曲.md","hash":"b4f8441aca37087bd0be08871e10a82fc868f4c0","modified":1571037853921},{"_id":"source/categories/index.md","hash":"759004568b303e2ab056774abe5a46d2cdd9b743","modified":1557911356460},{"_id":"source/about/index.md","hash":"6cba62341ed2dec9c9467ac9cb23f8504eca9705","modified":1558342841862},{"_id":"source/tags/index.md","hash":"a0b78d012c1dfe89840a1803bb34dda2e26c2964","modified":1557911356461},{"_id":"themes/next/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1551085635131},{"_id":"themes/next/layout/_layout.swig","hash":"d3a70a66617dd6864d2fbc0a72767ef48f8bc17c","modified":1558420002267},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1550815386000},{"_id":"themes/next/layout/archive.swig","hash":"c2be7c95af6205c7501a261f2fc9702c57107f89","modified":1550815386000},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1550815386000},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1550815386000},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1550815386000},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1550815386000},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1550815386000},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1550815384000},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1550815384000},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1550815384000},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1550815384000},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1550815384000},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1550815384000},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1550815384000},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1550815384000},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1550815384000},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1550815384000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"673719c6b129f1501ee33dd80e07e0013b65b129","modified":1550815384000},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1550815386000},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1550815386000},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1550815384000},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1550815384000},{"_id":"themes/next/source/.DS_Store","hash":"b3d94a4dee37f8d970ed6efe5d5738bdfa3ffb70","modified":1558429104247},{"_id":"themes/next/source/googlea721c6aa1705ce17.html","hash":"2c949199749528a55ae63fa41547f8185aa12bcc","modified":1558429060818},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1550815388000},{"_id":"themes/next/layout/.DS_Store","hash":"73a5c048171366ce407fa34b6188db9689169d72","modified":1550818153069},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1550815388000},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1550815388000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815388000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1550815384000},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1550815384000},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"c35ad1c3fcb5046f409d7599253acfaa8f054180","modified":1550815384000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1550815384000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1550815384000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"5b1e91c2f6f88fbecd426cd0727e7b7854c6cc1d","modified":1550815384000},{"_id":"themes/next/layout/_macro/high.swig","hash":"a543f450f991aff13c0d6b2a72a778b3bca7a4fe","modified":1550815384000},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"23824d4a0a60435a3b04dad2b2d280b3d54932ac","modified":1550815384000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1550815384000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f836f8b6715be0cc1ba8da18f91bad3cc7140ca0","modified":1550815384000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4b0feb00ad04d19202daa471458c3702b5ce734d","modified":1558077651378},{"_id":"themes/next/layout/_partials/comments.swig","hash":"dcb659d84d7e2de189bb4b0cd60ce0bb7fff8174","modified":1550815384000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1550815384000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"441b0ec3a14a9a81173d2b7c13d58d5cd4585304","modified":1561537073411},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1550815384000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1550815384000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1550815386000},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1550815384000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1550815386000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1550815386000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1550815386000},{"_id":"themes/next/layout/_partials/head.swig","hash":"d3abba4540d28c34132e677da189ee602de01dbe","modified":1558431593722},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1550815386000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1550815384000},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1550815386000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1550815386000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1550815386000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1550815386000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1550815386000},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1550815386000},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1550815386000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1550815386000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1550815386000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1550815384000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1550815386000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1550815384000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1550815388000},{"_id":"themes/next/source/css/main.styl","hash":"0bf0dc29230d0de2057471aa01412475cb1da9c0","modified":1550815388000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1550815388000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1550815388000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1550815388000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1550815388000},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1550815388000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1550815388000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1550815388000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1550815388000},{"_id":"themes/next/source/images/favicon.ico","hash":"2f885061fd7bb560521ee0cab0e5e43fcbbb3493","modified":1550815388000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1550815388000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1550815388000},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1550815388000},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1550815388000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815384000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815384000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815386000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815386000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815386000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815388000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1550815388000},{"_id":"themes/next/source/images/avatar.jpg","hash":"9374c8681926829685338eeda25160a4df69c063","modified":1557972181101},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1550815384000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1550815384000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1550815384000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1550815384000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1550815384000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1550815384000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1550815384000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1550815384000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"483ef2613f2992b61464b6a148f23edd82ce2523","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"16cb23818909f57dac1a5ada66869971c33d7bd8","modified":1558077751040},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1550815386000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1550815386000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1550815384000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1550815386000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1550815386000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"be2aaeb8f05979e2ba501248480d5294256d61f2","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1550815386000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1550815386000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1550815386000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1550815386000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1550815386000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1550815384000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1550815384000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1550815386000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"bf009e85212749405c27d89b49f401911355ecc7","modified":1550815386000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1550815386000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1558420002270},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1550815384000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1550815386000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"2a4e844dec690365774c2f6e8984706fee39ea63","modified":1550815388000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1550815388000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1550815388000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a627633d3bb70b8501572b18037def478beb7017","modified":1550815388000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1550815388000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1550815388000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1550815388000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1550815388000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1550815388000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1550815388000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1550815388000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1550815388000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1550815388000},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1550815388000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1550815388000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"96c8b5fe1999de1b3a46730d9812787dfcd65884","modified":1550815388000},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1550815388000},{"_id":"themes/next/source/js/src/love.js","hash":"34af2a778441373f275fc3c59d0a36e16c9b55a7","modified":1550815388000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1550815388000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1550815388000},{"_id":"themes/next/source/js/src/motion.js","hash":"dda8c76fce91d7f140c06de2583ba806810f12c2","modified":1550815388000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1550815388000},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1550815388000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1550815388000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1550815388000},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1550815388000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1550815386000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1550815386000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"eec22651977ea25b5e65e8cb1b4906eef69ec588","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1550815386000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1550815388000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1550815388000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1550815388000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1550815388000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1550815388000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1550815388000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"785798dc1ef46bccf8a67a6010bcbb5269d81b9d","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"e954bf95842945b196bbb0de7b8098950a780129","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"f363a544aa800a2a5ed97c40887fe9743f67b03b","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4057f934b4aa54159e029b1d4b821ddb0a34d8ee","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"5f3510419161ec22ca88cce6a181ddad61de9e86","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"cec3914f4e4ecb2897d92f4d97ed55e636476d56","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1550815386000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1550815386000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1550815388000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1550815386000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1550815388000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1550815388000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1550815388000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1550815388000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1550815388000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1550815388000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1550815388000},{"_id":"public/baidusitemap.xml","hash":"edec0a3ac621fe747b8ecfcd1ec58535639b9e3c","modified":1571023113286},{"_id":"public/search.xml","hash":"266240f1055cb8d7432a08e4e8dfb47382bf0754","modified":1571023113286},{"_id":"public/sitemap.xml","hash":"ff9e0e8de03bc30310f8ac5ea26168925fdea963","modified":1571023113308},{"_id":"public/categories/index.html","hash":"0dca71ffaf28dfda0aa7a92ea8bd7089c07344b3","modified":1571023113383},{"_id":"public/about/index.html","hash":"f8c913975b1e600fb47e40790205b6638bf4c9e5","modified":1571023113383},{"_id":"public/tags/index.html","hash":"1f5977d75bc3f84493be527871cab6c53dfda270","modified":1571023113384},{"_id":"public/java判断素数/index.html","hash":"fb327c27356125b05b1babac16ac5aa5fb7e01eb","modified":1571023113384},{"_id":"public/未来是星辰大海-Part2/index.html","hash":"e67953e585f0c25c8878c4e3cf18620f69dffc61","modified":1571023113384},{"_id":"public/20岁光阴不再来/index.html","hash":"40e59bfb7188627df38111fc9cff358f82011a00","modified":1571023113384},{"_id":"public/测试矩阵/index.html","hash":"bc31ec7b0e2f358e8864f550d56bc9f60f565dd1","modified":1571023113384},{"_id":"public/敏捷开发与测试/index.html","hash":"6e10d842dbb7a57a43b5e4475750db31cc6afa58","modified":1571023113384},{"_id":"public/java类中的代码块执行顺序/index.html","hash":"52e3778af6ee9ad28695c4802eeef87e6fc0a733","modified":1571023113384},{"_id":"public/未来是星辰大海/index.html","hash":"74290036668d261636d58ad8989bebc5b044b327","modified":1571023113384},{"_id":"public/Git学习笔记/index.html","hash":"b1983bfbecc3a0a2c33a4b79050c07a23845124d","modified":1571023113385},{"_id":"public/递归求解1到100求和/index.html","hash":"b6b251500e72b9a71a5713e2cc2e15682999d52d","modified":1571023113385},{"_id":"public/关于闰年，你不知道的那些事/index.html","hash":"ab5921e05143243eaa3a08b0b0413a46f5a04627","modified":1571023113385},{"_id":"public/爱你就像爱生命/index.html","hash":"2068a3a4edf877c0df5e3f629ab1163408ce0fa9","modified":1571023113385},{"_id":"public/Hexo-GithubPages-CodingPages搭建自己的个人博客/index.html","hash":"bfc27ef0d1eafb04d3d3b83c1b0a2ed9a587bec1","modified":1571023113385},{"_id":"public/FirstBlog/index.html","hash":"e969f5563d87c7209e3301dde996a3108e9b7246","modified":1571023113385},{"_id":"public/archives/index.html","hash":"14cb4704fc9c7ec7635929d413f5c16e18268f70","modified":1571023113385},{"_id":"public/archives/page/2/index.html","hash":"e08ed2ccd0f3ab475bfed3c1d96e6cfe3fd96e26","modified":1571023113385},{"_id":"public/archives/2017/index.html","hash":"b6720d3d6e634b124deb23fb89c3484ce568ddaa","modified":1571023113385},{"_id":"public/archives/2017/08/index.html","hash":"94bf8f364baf9a1dd1ce3c616fbac5be39b659be","modified":1571023113385},{"_id":"public/archives/2017/09/index.html","hash":"f4926c357b1308bbdf9c38ff4c8bbe8fc99184e4","modified":1571023113385},{"_id":"public/archives/2017/10/index.html","hash":"4ed25658ae5d59048f79455c1b15290ad0c78a39","modified":1571023113385},{"_id":"public/archives/2017/11/index.html","hash":"47dacdc8167c5647ab17eb4934e41f0a75959743","modified":1571023113385},{"_id":"public/archives/2018/index.html","hash":"bd826506f2a756958f5132072929d6a6397c0d16","modified":1571023113385},{"_id":"public/archives/2018/03/index.html","hash":"bb2e0c68f267c5d4217348db66e6fc1b3a8235f3","modified":1571023113385},{"_id":"public/archives/2018/04/index.html","hash":"a8c4de5137c13f51edf381d108533942c2af85d6","modified":1571023113385},{"_id":"public/categories/生活随想/index.html","hash":"1b97f0e8febd316865f696f0596f180aef24ff0a","modified":1571023113385},{"_id":"public/categories/学习小记/index.html","hash":"902f119776aa574b71c733b705f385f8444c8978","modified":1571023113386},{"_id":"public/categories/java基础/index.html","hash":"08740fbb722e02bd90dc29b5976392b52182b662","modified":1571023113386},{"_id":"public/categories/C-C-基础/index.html","hash":"e5fdd53e459ef573a804932ef6be3cfb96f28ba7","modified":1571023113386},{"_id":"public/categories/软件测试/index.html","hash":"e57a5d61093f9ac9a5bcd22baf3154a23a9e546b","modified":1571023113386},{"_id":"public/categories/美文/index.html","hash":"c2d6f678b23d910fdbd1aa8a74c1f1fe82210c95","modified":1571023113386},{"_id":"public/categories/笔试面试题/index.html","hash":"fce18b17799eea57048b0a25d03dffc237e3aa00","modified":1571023113386},{"_id":"public/index.html","hash":"9db35043bb252fcbae39c6cfc12e63b8e7f14eea","modified":1571023113386},{"_id":"public/page/2/index.html","hash":"273c9e3d8c17ffd73f3d46b790684d82dbf3d3d4","modified":1571023113386},{"_id":"public/page/3/index.html","hash":"c164ede50110cb2b373702671d63a6c796b11306","modified":1571023113386},{"_id":"public/tags/TED/index.html","hash":"8e1657b5b02237b959f7963db08dd370aab79058","modified":1571023113386},{"_id":"public/tags/告别拖延/index.html","hash":"680c58a59c97fc68d2a6f967f060167b69388207","modified":1571023113386},{"_id":"public/tags/life/index.html","hash":"0366338bea8ea514f5a5629eda5a002a4fdd5a93","modified":1571023113386},{"_id":"public/tags/git/index.html","hash":"fd064f88de75a578f1c317d5ed13258e84a7b62c","modified":1571023113386},{"_id":"public/tags/学习笔记/index.html","hash":"357b5b496e2a089ba7f88413d176358051cb8d0c","modified":1571023113386},{"_id":"public/tags/判断素数/index.html","hash":"807d4033c749b619e280a05bd66191b8442fae19","modified":1571023113387},{"_id":"public/tags/javaEE/index.html","hash":"1b73033807e3be31165708031e7b9adb7dbc8ba3","modified":1571023113387},{"_id":"public/tags/闰年/index.html","hash":"551d30331bf87cfc891da182d41f285e443aca21","modified":1571023113387},{"_id":"public/tags/敏捷测试/index.html","hash":"34c48d7c5d1eac94f673bf0fbe1141a079b664e3","modified":1571023113387},{"_id":"public/tags/极限编程/index.html","hash":"e267632148646cefd8949d767f325a057b58cfd0","modified":1571023113387},{"_id":"public/tags/人生规划/index.html","hash":"a991d0e98ca32fbf025c7475975e5f81aa961e41","modified":1571023113387},{"_id":"public/tags/未来/index.html","hash":"19851d5fb177e776e7fb1132e1b23f5b9088e1c8","modified":1571023113387},{"_id":"public/tags/人生/index.html","hash":"8d4290191c0c974bccbe105b83da13ffa5d6ddfe","modified":1571023113388},{"_id":"public/tags/软件测试/index.html","hash":"84c3519ebb6143b7be3811a6817e656f8017947f","modified":1571023113388},{"_id":"public/tags/王小波/index.html","hash":"fd8496a4fa465b09b86487c6cad9e1f5ce34dd7b","modified":1571023113388},{"_id":"public/tags/递归/index.html","hash":"955d95473d78f7f3a0e1cac6021329b6b65c8dfe","modified":1571023113388},{"_id":"public/tags/Hexo/index.html","hash":"2db26f7cb70f91c2ce0b31e4fc2e3f6453f122c2","modified":1571023113388},{"_id":"public/tags/GithubPages/index.html","hash":"c85f19f3644f3552662fa9bdca5390e020268b42","modified":1571023113388},{"_id":"public/tags/CodingPages/index.html","hash":"292d939e1b1a42cf6e7bf5c7e53463d21f3ab6dc","modified":1571023113388},{"_id":"public/记十一旅行中的小插曲/index.html","hash":"0cd602b4f11abad79bed36af83d97ddd5a27246d","modified":1571023113388},{"_id":"public/archives/2019/index.html","hash":"0045da83db7be585aec057a55d883e3add8876a5","modified":1571023113385},{"_id":"public/archives/2019/10/index.html","hash":"5ed792e59e802fd4c9dd9aa7f86b31a1cfa13e79","modified":1571023113388},{"_id":"public/tags/苏州-旅行/index.html","hash":"94547486ecea168ec85eb39e76438dfe8e29df31","modified":1570870286496},{"_id":"public/Staticfile","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1570774625956},{"_id":"public/CNAME","hash":"06ecbbe758208fdd08a30ce43d257808a51c391f","modified":1570774625960},{"_id":"public/README.MDOWN","hash":"92c950ec2f9d78403b046ec6a3f01cddec927526","modified":1570774625960},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1570774625960},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1570774625960},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1570774625960},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1570774625960},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1570774625961},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1570774625961},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1570774625961},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1570774625961},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1570774625961},{"_id":"public/images/favicon.ico","hash":"2f885061fd7bb560521ee0cab0e5e43fcbbb3493","modified":1570774625961},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1570774625961},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1570774625961},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1570774625961},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1570774625961},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1570774625961},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1570774625961},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1570774625961},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1570774625961},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1570774625961},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1570774625961},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1570774625961},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1570774625962},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1570774625962},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1570774625962},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1570774625962},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1570774625962},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1570774625962},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1570774625962},{"_id":"public/assets/algolia/algoliasearchLite.min.js","hash":"af69fc94cec58922f022baf6f7c0e67ef037deaa","modified":1570774625962},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1570774625962},{"_id":"public/favicon.ico","hash":"81d74d6dd6bf8c0a5f626ef83b26b41d142fe651","modified":1570774626926},{"_id":"public/images/avatar.jpg","hash":"9374c8681926829685338eeda25160a4df69c063","modified":1570774626929},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1570774626930},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1570774626930},{"_id":"public/assets/algolia/algoliasearch.min.js","hash":"1796b96f93fd8342a5d7ddd8165de36fe1308e28","modified":1570774626930},{"_id":"public/assets/algolia/algoliasearchLite.js","hash":"9b5885fd67c76f91f5c1ec14c694e61c7b083528","modified":1570774626930},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1570774626936},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1570774626936},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1570774626937},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1570774626937},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1570774626937},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1570774626937},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1570774626937},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1570774626937},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1570774626937},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1570774626937},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1570774626937},{"_id":"public/js/src/bootstrap.js","hash":"6117f97b4984b8e33f21c726132da64ba678e4ed","modified":1570774626937},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1570774626938},{"_id":"public/js/src/love.js","hash":"34af2a778441373f275fc3c59d0a36e16c9b55a7","modified":1570774626938},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1570774626938},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1570774626938},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1570774626938},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1570774626938},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1570774626938},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1570774626938},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1570774626938},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1570774626938},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1570774626938},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1570774626938},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1570774626938},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1570774626938},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1570774626938},{"_id":"public/googlea721c6aa1705ce17.html","hash":"2c949199749528a55ae63fa41547f8185aa12bcc","modified":1570774626938},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1570774626938},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1570774626938},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1570774626938},{"_id":"public/css/main.css","hash":"e2ae1e75c018e41dc2f72d59d75e2d86528a7e6d","modified":1570774626938},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1570774626938},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1570774626939},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1570774626939},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1570774626942},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1570774626942},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1570774626942},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1570774626943},{"_id":"public/js/src/motion.js","hash":"dc0365b2fb315a8b43d3ef19b59d3a82a366fcc1","modified":1570774626943},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1570774626943},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1570774626943},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1570774626943},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1570774626943},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1570774626943},{"_id":"public/assets/algolia/algoliasearch.js","hash":"760a27b8dfd066524d7e89c65125d5fb47d7043a","modified":1570774626943},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1570774626945},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1570774626947},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1570774626948},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1570774626950},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1570774626951},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1570774626951},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1570774626951},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1570774626951},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1570774626951},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1570774626951},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1570774626956},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1570774626960},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1570774626960},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1570774626963},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1570774626967},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1570774626967},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1570774626967},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1570774626989},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1570774626998},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1570774627000},{"_id":"public/tags/苏州/index.html","hash":"c53a519a02c4c7b30ddcc7d921624fcb51756667","modified":1571023113390},{"_id":"public/tags/旅行/index.html","hash":"e6b659d9e6cd70deed5b29cd8c997d10aba37264","modified":1571023113390}],"Category":[{"name":"生活随想","_id":"ck1lqnk910004f363405vldta"},{"name":"学习小记","_id":"ck1lqnk99000ef3638xkyub57"},{"name":"java基础","_id":"ck1lqnk9c000mf363crblafhq"},{"name":"C/C++基础","_id":"ck1lqnk9h000yf363zem0asd7"},{"name":"软件测试","_id":"ck1lqnk9j0018f36365mh4iug"},{"name":"美文","_id":"ck1lqnk9l001df363hzo9ox8n"},{"name":"笔试面试题","_id":"ck1lqnk9l001hf3638iridq8t"}],"Data":[],"Page":[{"title":"categories","date":"2017-08-04T03:08:51.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-08-04 11:08:51\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-05-15T09:09:16.460Z","path":"categories/index.html","layout":"page","_id":"ck1lqnk8y0001f363gjec8iro","content":"<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"date":"2017-08-03T13:35:26.000Z","comments":1,"_content":"\n<center>\n\t<img src=\"https://i.loli.net/2019/05/16/5cdccb2b72aa099014.jpg\" width = \"250\" height = \"250\" alt=\"avatar\">\n</center>\n\n\n\n# About Me #\n\n<blockquote class=\"blockquote-center\">\n- 97年小姐姐\n- ThoughtWorks.QA\n- 音乐 - 健身 - 美食 - 追剧\n- 巨蟹座 & 天生宅 & 懒癌晚期 & 重度拖延:joy:\n</blockquote>\n\n\n----------\n\n\n# About this site #\n\n\n\n本博客基于**Hexo**博客框架搭建，并部署在**GithubPages**和**CodingPages**上。如果你也想搭建，可以参考[我写的文章](http://jmyblog.top/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more)。\n\n博客主要更新一些技术文章，一些旅行游记，还有一些闲言碎语和生活感悟:laughing:\n\n# Join ThoughtWorks#\n\n>以下链接为社招专用，校招可关注#ThoughtWorks校园招聘#公众号获取信息，也可给博主留言内推哟～\n\n[软件测试--QA](https://grnh.se/c7524ec61)\n[前端开发--FED](https://grnh.se/eeb019851)\n\n\n\n\n","source":"about/index.md","raw":"---\ndate: 2017-08-03 21:35:26\ncomments: true\n---\n\n<center>\n\t<img src=\"https://i.loli.net/2019/05/16/5cdccb2b72aa099014.jpg\" width = \"250\" height = \"250\" alt=\"avatar\">\n</center>\n\n\n\n# About Me #\n\n<blockquote class=\"blockquote-center\">\n- 97年小姐姐\n- ThoughtWorks.QA\n- 音乐 - 健身 - 美食 - 追剧\n- 巨蟹座 & 天生宅 & 懒癌晚期 & 重度拖延:joy:\n</blockquote>\n\n\n----------\n\n\n# About this site #\n\n\n\n本博客基于**Hexo**博客框架搭建，并部署在**GithubPages**和**CodingPages**上。如果你也想搭建，可以参考[我写的文章](http://jmyblog.top/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more)。\n\n博客主要更新一些技术文章，一些旅行游记，还有一些闲言碎语和生活感悟:laughing:\n\n# Join ThoughtWorks#\n\n>以下链接为社招专用，校招可关注#ThoughtWorks校园招聘#公众号获取信息，也可给博主留言内推哟～\n\n[软件测试--QA](https://grnh.se/c7524ec61)\n[前端开发--FED](https://grnh.se/eeb019851)\n\n\n\n\n","updated":"2019-05-20T09:00:41.862Z","path":"about/index.html","title":"","layout":"page","_id":"ck1lqnk900003f363slga1m5m","content":"<center><br>    <img src=\"https://i.loli.net/2019/05/16/5cdccb2b72aa099014.jpg\" width=\"250\" height=\"250\" alt=\"avatar\"><br></center>\n\n\n\n<h1 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h1><blockquote class=\"blockquote-center\"><br>- 97年小姐姐<br>- ThoughtWorks.QA<br>- 音乐 - 健身 - 美食 - 追剧<br>- 巨蟹座 & 天生宅 & 懒癌晚期 & 重度拖延<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8\">😂</span><br></blockquote>\n\n\n<hr>\n<h1 id=\"About-this-site\"><a href=\"#About-this-site\" class=\"headerlink\" title=\"About this site\"></a>About this site</h1><p>本博客基于<strong>Hexo</strong>博客框架搭建，并部署在<strong>GithubPages</strong>和<strong>CodingPages</strong>上。如果你也想搭建，可以参考<a href=\"http://jmyblog.top/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more\">我写的文章</a>。</p>\n<p>博客主要更新一些技术文章，一些旅行游记，还有一些闲言碎语和生活感悟<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8\">😆</span></p>\n<h1 id=\"Join-ThoughtWorks\"><a href=\"#Join-ThoughtWorks\" class=\"headerlink\" title=\"Join ThoughtWorks\"></a>Join ThoughtWorks</h1><blockquote>\n<p>以下链接为社招专用，校招可关注#ThoughtWorks校园招聘#公众号获取信息，也可给博主留言内推哟～</p>\n</blockquote>\n<p><a href=\"https://grnh.se/c7524ec61\" target=\"_blank\" rel=\"noopener\">软件测试–QA</a><br><a href=\"https://grnh.se/eeb019851\" target=\"_blank\" rel=\"noopener\">前端开发–FED</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":317,"excerpt":"","more":"<center><br>    <img src=\"https://i.loli.net/2019/05/16/5cdccb2b72aa099014.jpg\" width=\"250\" height=\"250\" alt=\"avatar\"><br></center>\n\n\n\n<h1 id=\"About-Me\"><a href=\"#About-Me\" class=\"headerlink\" title=\"About Me\"></a>About Me</h1><blockquote class=\"blockquote-center\"><br>- 97年小姐姐<br>- ThoughtWorks.QA<br>- 音乐 - 健身 - 美食 - 追剧<br>- 巨蟹座 &amp; 天生宅 &amp; 懒癌晚期 &amp; 重度拖延:joy:<br></blockquote>\n\n\n<hr>\n<h1 id=\"About-this-site\"><a href=\"#About-this-site\" class=\"headerlink\" title=\"About this site\"></a>About this site</h1><p>本博客基于<strong>Hexo</strong>博客框架搭建，并部署在<strong>GithubPages</strong>和<strong>CodingPages</strong>上。如果你也想搭建，可以参考<a href=\"http://jmyblog.top/Hexo-GithubPages-CodingPages%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/#more\">我写的文章</a>。</p>\n<p>博客主要更新一些技术文章，一些旅行游记，还有一些闲言碎语和生活感悟:laughing:</p>\n<h1 id=\"Join-ThoughtWorks\"><a href=\"#Join-ThoughtWorks\" class=\"headerlink\" title=\"Join ThoughtWorks\"></a>Join ThoughtWorks</h1><blockquote>\n<p>以下链接为社招专用，校招可关注#ThoughtWorks校园招聘#公众号获取信息，也可给博主留言内推哟～</p>\n</blockquote>\n<p><a href=\"https://grnh.se/c7524ec61\" target=\"_blank\" rel=\"noopener\">软件测试–QA</a><br><a href=\"https://grnh.se/eeb019851\" target=\"_blank\" rel=\"noopener\">前端开发–FED</a></p>\n"},{"title":"tags","date":"2017-08-04T02:59:06.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-08-04 10:59:06\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-05-15T09:09:16.461Z","path":"tags/index.html","layout":"page","_id":"ck1lqnk930007f363z3yj6uta","content":"<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":0,"excerpt":"","more":""}],"Post":[{"title":"20岁光阴不再来","date":"2018-03-30T13:10:24.000Z","update":"2018-03-30T13:10:24.000Z","copyright":null,"top":null,"_content":"\n\n时间啊，你慢点走。\n\n<!-- more -->\n\n\n这个TED演讲是博主几年前看过的，留下了很深的印象。今天又重温了一遍，感触更深了。所以推荐给大家，TED名字叫做\"**20岁光阴不再来**\"，亲们也可以在网易公开课里看到。\n\n<object width=\"640\" height=\"360\"><param name=\"movie\" value=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\"></param><param name=\"allowScriptAccess\" value=\"always\"></param><param name=\"wmode\" value=\"transparent\"></param><embed src=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"360\" allowFullScreen=\"true\" wmode=\"transparent\" allowScriptAccess=\"always\"></embed></object>\n\n## 我的观后感 ##\n\n在这个TED中，演讲者给出了一些对20多岁年轻人的忠告和建议，可以概括为以下几点：\n\n**忠告**\n\n- 30岁不是新的20岁，所以不要挥霍你时间，而是应该用这些时间去做一些有意义的事。年长者总会对20岁的年轻人说“你们还年轻，未来会有的”，实际上这不是一种激励，而是麻痹了年轻人的奋斗激情，助长他们的拖延症。如果我们真的听从了这些年长者的话，30岁才开始建立事业、家庭，可那个时候你又凭什么做到这些呢？\n- 不要坐井观天，不要做无谓的探索，因为更多的时候你不是在探索未来，你只是想拖延。\n- 不要等到该结婚的年龄才随便找个人建立婚姻关系。就像演讲者说的：20岁时谈恋爱就像玩抢椅子，每个人都东奔西跑的玩乐，但是在30岁左右时音乐停止了。每个人都开始坐下，我不想只有我站着，所以我才想嫁给我的丈夫，因为他是我30岁时离我最近的椅子。\n\n**建议**\n\n- 对自己进行投资，投资的目标是成为你想成为的人。包括未来工作所需和生活精神需要。比如健身、读书、学习专业知识等等。\n- 学会利用身边的弱关系，扩大交际范围，而不是只跟与自己年岁、思维方式相差不多的人交往。比如演讲者提到了一个患者通过室友的表亲找到了心仪的工作。\n- 从现在开始选择自己的家人，你以后想跟谁生活在一起，想拥有什么样的婚姻。而不是等到30岁才思考这个问题。","source":"_posts/20岁光阴不再来.md","raw":"---\ntitle: 20岁光阴不再来\ndate: 2018-03-30 21:10:24\nupdate: 2018-03-30 21:10:24\ntags: [TED,告别拖延]\ncategories: 生活随想\ncopyright:\ntop:\n---\n\n\n时间啊，你慢点走。\n\n<!-- more -->\n\n\n这个TED演讲是博主几年前看过的，留下了很深的印象。今天又重温了一遍，感触更深了。所以推荐给大家，TED名字叫做\"**20岁光阴不再来**\"，亲们也可以在网易公开课里看到。\n\n<object width=\"640\" height=\"360\"><param name=\"movie\" value=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\"></param><param name=\"allowScriptAccess\" value=\"always\"></param><param name=\"wmode\" value=\"transparent\"></param><embed src=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"360\" allowFullScreen=\"true\" wmode=\"transparent\" allowScriptAccess=\"always\"></embed></object>\n\n## 我的观后感 ##\n\n在这个TED中，演讲者给出了一些对20多岁年轻人的忠告和建议，可以概括为以下几点：\n\n**忠告**\n\n- 30岁不是新的20岁，所以不要挥霍你时间，而是应该用这些时间去做一些有意义的事。年长者总会对20岁的年轻人说“你们还年轻，未来会有的”，实际上这不是一种激励，而是麻痹了年轻人的奋斗激情，助长他们的拖延症。如果我们真的听从了这些年长者的话，30岁才开始建立事业、家庭，可那个时候你又凭什么做到这些呢？\n- 不要坐井观天，不要做无谓的探索，因为更多的时候你不是在探索未来，你只是想拖延。\n- 不要等到该结婚的年龄才随便找个人建立婚姻关系。就像演讲者说的：20岁时谈恋爱就像玩抢椅子，每个人都东奔西跑的玩乐，但是在30岁左右时音乐停止了。每个人都开始坐下，我不想只有我站着，所以我才想嫁给我的丈夫，因为他是我30岁时离我最近的椅子。\n\n**建议**\n\n- 对自己进行投资，投资的目标是成为你想成为的人。包括未来工作所需和生活精神需要。比如健身、读书、学习专业知识等等。\n- 学会利用身边的弱关系，扩大交际范围，而不是只跟与自己年岁、思维方式相差不多的人交往。比如演讲者提到了一个患者通过室友的表亲找到了心仪的工作。\n- 从现在开始选择自己的家人，你以后想跟谁生活在一起，想拥有什么样的婚姻。而不是等到30岁才思考这个问题。","slug":"20岁光阴不再来","published":1,"updated":"2019-05-16T08:21:53.923Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk8u0000f3639c2d549l","content":"<p>时间啊，你慢点走。</p>\n<a id=\"more\"></a>\n<p>这个TED演讲是博主几年前看过的，留下了很深的印象。今天又重温了一遍，感触更深了。所以推荐给大家，TED名字叫做”<strong>20岁光阴不再来</strong>“，亲们也可以在网易公开课里看到。</p>\n<object width=\"640\" height=\"360\"><param name=\"movie\" value=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\"><param name=\"allowScriptAccess\" value=\"always\"><param name=\"wmode\" value=\"transparent\"><embed src=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"360\" allowfullscreen=\"true\" wmode=\"transparent\" allowscriptaccess=\"always\"></object>\n\n<h2 id=\"我的观后感\"><a href=\"#我的观后感\" class=\"headerlink\" title=\"我的观后感\"></a>我的观后感</h2><p>在这个TED中，演讲者给出了一些对20多岁年轻人的忠告和建议，可以概括为以下几点：</p>\n<p><strong>忠告</strong></p>\n<ul>\n<li>30岁不是新的20岁，所以不要挥霍你时间，而是应该用这些时间去做一些有意义的事。年长者总会对20岁的年轻人说“你们还年轻，未来会有的”，实际上这不是一种激励，而是麻痹了年轻人的奋斗激情，助长他们的拖延症。如果我们真的听从了这些年长者的话，30岁才开始建立事业、家庭，可那个时候你又凭什么做到这些呢？</li>\n<li>不要坐井观天，不要做无谓的探索，因为更多的时候你不是在探索未来，你只是想拖延。</li>\n<li>不要等到该结婚的年龄才随便找个人建立婚姻关系。就像演讲者说的：20岁时谈恋爱就像玩抢椅子，每个人都东奔西跑的玩乐，但是在30岁左右时音乐停止了。每个人都开始坐下，我不想只有我站着，所以我才想嫁给我的丈夫，因为他是我30岁时离我最近的椅子。</li>\n</ul>\n<p><strong>建议</strong></p>\n<ul>\n<li>对自己进行投资，投资的目标是成为你想成为的人。包括未来工作所需和生活精神需要。比如健身、读书、学习专业知识等等。</li>\n<li>学会利用身边的弱关系，扩大交际范围，而不是只跟与自己年岁、思维方式相差不多的人交往。比如演讲者提到了一个患者通过室友的表亲找到了心仪的工作。</li>\n<li>从现在开始选择自己的家人，你以后想跟谁生活在一起，想拥有什么样的婚姻。而不是等到30岁才思考这个问题。</li>\n</ul>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":643,"excerpt":"<p>时间啊，你慢点走。</p>","more":"<p>这个TED演讲是博主几年前看过的，留下了很深的印象。今天又重温了一遍，感触更深了。所以推荐给大家，TED名字叫做”<strong>20岁光阴不再来</strong>“，亲们也可以在网易公开课里看到。</p>\n<object width=\"640\" height=\"360\"><param name=\"movie\" value=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\"><param name=\"allowScriptAccess\" value=\"always\"><param name=\"wmode\" value=\"transparent\"><embed src=\"http://swf.ws.126.net/openplayer/v01/-0-2_M937IFCGB_M937IJLUA-vimg1_ws_126_net//image/snapshot_movie/2013/7/G/2/M937IJDG2-1423031805654.swf?isTEDPlay=1\" type=\"application/x-shockwave-flash\" width=\"640\" height=\"360\" allowfullscreen=\"true\" wmode=\"transparent\" allowscriptaccess=\"always\"></object>\n\n<h2 id=\"我的观后感\"><a href=\"#我的观后感\" class=\"headerlink\" title=\"我的观后感\"></a>我的观后感</h2><p>在这个TED中，演讲者给出了一些对20多岁年轻人的忠告和建议，可以概括为以下几点：</p>\n<p><strong>忠告</strong></p>\n<ul>\n<li>30岁不是新的20岁，所以不要挥霍你时间，而是应该用这些时间去做一些有意义的事。年长者总会对20岁的年轻人说“你们还年轻，未来会有的”，实际上这不是一种激励，而是麻痹了年轻人的奋斗激情，助长他们的拖延症。如果我们真的听从了这些年长者的话，30岁才开始建立事业、家庭，可那个时候你又凭什么做到这些呢？</li>\n<li>不要坐井观天，不要做无谓的探索，因为更多的时候你不是在探索未来，你只是想拖延。</li>\n<li>不要等到该结婚的年龄才随便找个人建立婚姻关系。就像演讲者说的：20岁时谈恋爱就像玩抢椅子，每个人都东奔西跑的玩乐，但是在30岁左右时音乐停止了。每个人都开始坐下，我不想只有我站着，所以我才想嫁给我的丈夫，因为他是我30岁时离我最近的椅子。</li>\n</ul>\n<p><strong>建议</strong></p>\n<ul>\n<li>对自己进行投资，投资的目标是成为你想成为的人。包括未来工作所需和生活精神需要。比如健身、读书、学习专业知识等等。</li>\n<li>学会利用身边的弱关系，扩大交际范围，而不是只跟与自己年岁、思维方式相差不多的人交往。比如演讲者提到了一个患者通过室友的表亲找到了心仪的工作。</li>\n<li>从现在开始选择自己的家人，你以后想跟谁生活在一起，想拥有什么样的婚姻。而不是等到30岁才思考这个问题。</li>\n</ul>"},{"title":"FirstBlog","date":"2017-08-03T12:40:56.000Z","comments":0,"_content":"\nFistPage in my blog.\n\n\n<!-- more -->\n\n\n![future](http://i.imgur.com/sU2JZ8Z.jpg)\n\n\nthe future is whitin reach.\n\n","source":"_posts/FirstBlog.md","raw":"---\ntitle: FirstBlog\ndate: 2017-08-03 20:40:56\ntags: life\ncategories: 生活随想\ncomments: false\n---\n\nFistPage in my blog.\n\n\n<!-- more -->\n\n\n![future](http://i.imgur.com/sU2JZ8Z.jpg)\n\n\nthe future is whitin reach.\n\n","slug":"FirstBlog","published":1,"updated":"2019-05-16T08:22:06.587Z","layout":"post","photos":[],"link":"","_id":"ck1lqnk8z0002f363jl4nhpgx","content":"<p>FistPage in my blog.</p>\n<a id=\"more\"></a>\n<p><img src=\"http://i.imgur.com/sU2JZ8Z.jpg\" alt=\"future\"></p>\n<p>the future is whitin reach.</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":51,"excerpt":"<p>FistPage in my blog.</p>","more":"<p><img src=\"http://i.imgur.com/sU2JZ8Z.jpg\" alt=\"future\"></p>\n<p>the future is whitin reach.</p>"},{"title":"Git学习笔记","date":"2017-09-11T10:05:07.000Z","update":"2017-09-11T10:05:07.000Z","copyright":true,"top":null,"_content":"\n\n对近几天的Git学习做一个小结。\n\n<!-- more -->\n\n学完了[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，对git的概念和基本操作有了更深的理解。对“版本控制”的概念也理解的更加深刻。\n\n\n----------\n\n# 几点感受 #\n\n以下是我学习了git之后的一些感受：\n\n\n- 成为了Linus Benedict Torvalds的一枚小迷妹（以前也是，现在妥妥的）。\n- 世上没有后悔药？不存在的，git的版本回退完美的实现了这一点。\n- 搞清楚了git和github的关系，后者只是拥有一个git远程仓库，可以通过git连接并实现相应操作。\n- Git服务器可以轻松搭建，除了github，还有coding/gitee等网站提供git服务。\n- 工作效率真的提升很快。。。\n\n\n----------\n\n\n# 干货 #\n\n下面对学习中涉及到的git命令做分类总结，都是最常用的。\n\n## git本地管理 ##\n\n>git最基本的一些操作\n\ngit init：将某目录变成git可以管理的仓库（添加.git目录）\n\ngit commit -m \"...\":一次性提交多个文件（add进来的文件）\n\ngit add xxx.md:可以多次添加多个不同文件\n\ngit status:可以时刻掌握仓库当前的状态\n\ngit diff:显示具体修改的内容（与提交进去的文件相比）\n\ngit log：显示从最近到最远的提交日志，加上--pretty=oneline参数可以将每次提交信息压缩成一行,最前边的数字加字母是指每次commit的commit-id,是16进制的表示形式\n\n.gitignore文件：包括git需要忽略提交的文件名，此文件也需要提交到git\n\n## 版本回退 ##\n\n>世界上是有后悔药的\n\ngit reset --hard HEAD^:回退到上个版本（上上个版本HEAD^^,上100个版本是HEAD~100。HEAD是指向当前版本的指针，因此可以通过调整HEAD来在历史版本间穿梭）\n\ngit reset --hard commmitid：在没有关闭上次回退时的命令窗口时，可以取消回退。commitid没必要写全，git可以自己去找\n\ngit reflog:可以显示每一次commit和回退的id号，如果命令窗口关闭，可以用此命令先找到commitid，然后用上个命令取消回退\n\ngit checkout -- file：撤销在工作区对file做的修改，包括撤销对file文件的删除\n\ngit reset HEAD file & git checkout -- file：对file的修改已被add到stage，用前者删除add到stage的修改，再用后者撤销工作区的修改\n\ngit reset --hard HEAD^ :已经将想撤销的修改添加到了版本库，但还未提交到远程库。用版本回退撤销修改\n\ngit rm file&git commit -m \"delete file\"：删除已添加到版本库的文件\n\ngit checkout:用版本库里的文件版本替换工作区的文件版本（一键还原）\n\n## 远程库连接 ##\n\n>连接远程库，进一步实现团队协作。\n\n\ngit remote:查看远程库信息，详细信息加上-v选项\n\ngit remote add origin git@github.com:Summyj/xxx.git：将本地git仓库与github远程库想关联,也可以是其它库，远程库默认名字是origin，也可以设为其它，比如github\n\ngit push -u origin xxx:把本地仓库指定分支·内容推送到远程，下次推送可以不用-u参数\n因为第一次推送master分支时如果加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，所以在以后的推送或者拉取时就可以简化命令。\n\ngit clone git@github.com:xxx/xxx.git:从远程仓库克隆到本地，后边是地址\n\ngit remotr rm origin:删除本地库关联的origin远程库\n\n## 分支创建管理 ##\n\n>实现更安全便捷的版本控制。\n\n\ngit checkout -b xxx:git check命令加上-b参数表示创建并切换到xxx分支，此命令相当于两条命令：\n- git branch xxx\n- git checkout xxx\n\ngit branch:查看当前分支（列出所有分支，当前分支前边会标有*号）\n\ngit merge xxx:将指定分支xxx合并到当前分支,首先要切换到当前分支（不一定是master分支）\n\ngit branch -d xxx:删除某分支（合并后再删除）\n\ngit branch -D xxx:强行删除某个没有被合并的分支\n\ngit log --graph --pretty=oneline --abbrev-commit：用分支图展示各分支合并情况（或者直接git log --graph，但这将会显示所有历史合并图）\n\ngit merge --no-ff -m \"...\" xxx:禁用git合并时默认的fast-forward模式，生成新的commit加入分支信息。-m后的内容就是合并信息\n\n\n## 工作现场存储 ##\n\n>版本控制的freestyle.\n\ngit stash:将当前工作现场储藏起来，等以后恢复现场后继续工作\n\ngit stash list:查看储藏的工作现场\n\ngit stash apply:回复储藏的工作现场\n\ngit stash apply stash@{x}有多个stash时恢复指定的stash\n\ngit stash drop:恢复现场并删除stash list的内容，如果有多个stash,默认恢复的是最新的stash.\n\n\n## 多人协作 ##\n\n>小伙伴们的友情\n\ngit checkout -b xxx origin/xxx:刚从远程库克隆到本地时只有master分支，用此命令创建和远程分支对应的分支\n\ngit pull:多人协作时，远程分支比本地分支更新导致推送失败，用此命令从远程库抓取该分支最新的提交并和本地分支进行合并，合并有冲突需要手动解决\n\ngit branch --set-upstream xxx origin/xxx:git pull失败时需要创建本地分支和远程分支的关联\n\n## 标签管理 ##\n\n>更方便进行版本控制，与commit id相比更好记。相当于版本库的一个快照。\n\n\nGit的标签虽然是版本库的快照，但其实它就是指向某个commit的指针。与HEAD指针相比，后者可以移动，但标签不能移动），所以，创建和删除标签都是瞬间完成的。\n\ngit tag xxx:打标签\n\ngit tag v0.3 646123:将commit id为646123的提交打上v0.3标签。这样可以解决忘记打标签的问题\n\ngit tag:查看所有标签（按字母排序，而并非时间）\n\ngit show tagname:查看标签信息（包括说明文字）\n\ngit tag -a v0.x -m \"...\" 615465:创建带有说明的标签，用-a指定标签名，-m指定说明文字\n\ngit tag -d xxx:删除指定标签（因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。）\n\ngit push origin tagname:推送标签到远程\n\ngit push origin --tags:一次性推送全部尚未推送到远程的本地标签\n\ngit tag -d tagname & git push origin :refs/tags/tagname:删除已推送到远程库的标签，先从本地删除，再从远程删除\n\n","source":"_posts/Git学习笔记.md","raw":"---\ntitle: Git学习笔记\ndate: 2017-09-11 18:05:07\nupdate: 2017-09-11 18:05:07\ntags: [git,学习笔记]\ncategories: 学习小记\ncopyright: true\ntop:\n---\n\n\n对近几天的Git学习做一个小结。\n\n<!-- more -->\n\n学完了[廖雪峰的git教程](https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)，对git的概念和基本操作有了更深的理解。对“版本控制”的概念也理解的更加深刻。\n\n\n----------\n\n# 几点感受 #\n\n以下是我学习了git之后的一些感受：\n\n\n- 成为了Linus Benedict Torvalds的一枚小迷妹（以前也是，现在妥妥的）。\n- 世上没有后悔药？不存在的，git的版本回退完美的实现了这一点。\n- 搞清楚了git和github的关系，后者只是拥有一个git远程仓库，可以通过git连接并实现相应操作。\n- Git服务器可以轻松搭建，除了github，还有coding/gitee等网站提供git服务。\n- 工作效率真的提升很快。。。\n\n\n----------\n\n\n# 干货 #\n\n下面对学习中涉及到的git命令做分类总结，都是最常用的。\n\n## git本地管理 ##\n\n>git最基本的一些操作\n\ngit init：将某目录变成git可以管理的仓库（添加.git目录）\n\ngit commit -m \"...\":一次性提交多个文件（add进来的文件）\n\ngit add xxx.md:可以多次添加多个不同文件\n\ngit status:可以时刻掌握仓库当前的状态\n\ngit diff:显示具体修改的内容（与提交进去的文件相比）\n\ngit log：显示从最近到最远的提交日志，加上--pretty=oneline参数可以将每次提交信息压缩成一行,最前边的数字加字母是指每次commit的commit-id,是16进制的表示形式\n\n.gitignore文件：包括git需要忽略提交的文件名，此文件也需要提交到git\n\n## 版本回退 ##\n\n>世界上是有后悔药的\n\ngit reset --hard HEAD^:回退到上个版本（上上个版本HEAD^^,上100个版本是HEAD~100。HEAD是指向当前版本的指针，因此可以通过调整HEAD来在历史版本间穿梭）\n\ngit reset --hard commmitid：在没有关闭上次回退时的命令窗口时，可以取消回退。commitid没必要写全，git可以自己去找\n\ngit reflog:可以显示每一次commit和回退的id号，如果命令窗口关闭，可以用此命令先找到commitid，然后用上个命令取消回退\n\ngit checkout -- file：撤销在工作区对file做的修改，包括撤销对file文件的删除\n\ngit reset HEAD file & git checkout -- file：对file的修改已被add到stage，用前者删除add到stage的修改，再用后者撤销工作区的修改\n\ngit reset --hard HEAD^ :已经将想撤销的修改添加到了版本库，但还未提交到远程库。用版本回退撤销修改\n\ngit rm file&git commit -m \"delete file\"：删除已添加到版本库的文件\n\ngit checkout:用版本库里的文件版本替换工作区的文件版本（一键还原）\n\n## 远程库连接 ##\n\n>连接远程库，进一步实现团队协作。\n\n\ngit remote:查看远程库信息，详细信息加上-v选项\n\ngit remote add origin git@github.com:Summyj/xxx.git：将本地git仓库与github远程库想关联,也可以是其它库，远程库默认名字是origin，也可以设为其它，比如github\n\ngit push -u origin xxx:把本地仓库指定分支·内容推送到远程，下次推送可以不用-u参数\n因为第一次推送master分支时如果加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，所以在以后的推送或者拉取时就可以简化命令。\n\ngit clone git@github.com:xxx/xxx.git:从远程仓库克隆到本地，后边是地址\n\ngit remotr rm origin:删除本地库关联的origin远程库\n\n## 分支创建管理 ##\n\n>实现更安全便捷的版本控制。\n\n\ngit checkout -b xxx:git check命令加上-b参数表示创建并切换到xxx分支，此命令相当于两条命令：\n- git branch xxx\n- git checkout xxx\n\ngit branch:查看当前分支（列出所有分支，当前分支前边会标有*号）\n\ngit merge xxx:将指定分支xxx合并到当前分支,首先要切换到当前分支（不一定是master分支）\n\ngit branch -d xxx:删除某分支（合并后再删除）\n\ngit branch -D xxx:强行删除某个没有被合并的分支\n\ngit log --graph --pretty=oneline --abbrev-commit：用分支图展示各分支合并情况（或者直接git log --graph，但这将会显示所有历史合并图）\n\ngit merge --no-ff -m \"...\" xxx:禁用git合并时默认的fast-forward模式，生成新的commit加入分支信息。-m后的内容就是合并信息\n\n\n## 工作现场存储 ##\n\n>版本控制的freestyle.\n\ngit stash:将当前工作现场储藏起来，等以后恢复现场后继续工作\n\ngit stash list:查看储藏的工作现场\n\ngit stash apply:回复储藏的工作现场\n\ngit stash apply stash@{x}有多个stash时恢复指定的stash\n\ngit stash drop:恢复现场并删除stash list的内容，如果有多个stash,默认恢复的是最新的stash.\n\n\n## 多人协作 ##\n\n>小伙伴们的友情\n\ngit checkout -b xxx origin/xxx:刚从远程库克隆到本地时只有master分支，用此命令创建和远程分支对应的分支\n\ngit pull:多人协作时，远程分支比本地分支更新导致推送失败，用此命令从远程库抓取该分支最新的提交并和本地分支进行合并，合并有冲突需要手动解决\n\ngit branch --set-upstream xxx origin/xxx:git pull失败时需要创建本地分支和远程分支的关联\n\n## 标签管理 ##\n\n>更方便进行版本控制，与commit id相比更好记。相当于版本库的一个快照。\n\n\nGit的标签虽然是版本库的快照，但其实它就是指向某个commit的指针。与HEAD指针相比，后者可以移动，但标签不能移动），所以，创建和删除标签都是瞬间完成的。\n\ngit tag xxx:打标签\n\ngit tag v0.3 646123:将commit id为646123的提交打上v0.3标签。这样可以解决忘记打标签的问题\n\ngit tag:查看所有标签（按字母排序，而并非时间）\n\ngit show tagname:查看标签信息（包括说明文字）\n\ngit tag -a v0.x -m \"...\" 615465:创建带有说明的标签，用-a指定标签名，-m指定说明文字\n\ngit tag -d xxx:删除指定标签（因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。）\n\ngit push origin tagname:推送标签到远程\n\ngit push origin --tags:一次性推送全部尚未推送到远程的本地标签\n\ngit tag -d tagname & git push origin :refs/tags/tagname:删除已推送到远程库的标签，先从本地删除，再从远程删除\n\n","slug":"Git学习笔记","published":1,"updated":"2019-05-16T08:22:19.931Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk920006f363gnqifkg3","content":"<p>对近几天的Git学习做一个小结。</p>\n<a id=\"more\"></a>\n<p>学完了<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，对git的概念和基本操作有了更深的理解。对“版本控制”的概念也理解的更加深刻。</p>\n<hr>\n<h1 id=\"几点感受\"><a href=\"#几点感受\" class=\"headerlink\" title=\"几点感受\"></a>几点感受</h1><p>以下是我学习了git之后的一些感受：</p>\n<ul>\n<li>成为了Linus Benedict Torvalds的一枚小迷妹（以前也是，现在妥妥的）。</li>\n<li>世上没有后悔药？不存在的，git的版本回退完美的实现了这一点。</li>\n<li>搞清楚了git和github的关系，后者只是拥有一个git远程仓库，可以通过git连接并实现相应操作。</li>\n<li>Git服务器可以轻松搭建，除了github，还有coding/gitee等网站提供git服务。</li>\n<li>工作效率真的提升很快。。。</li>\n</ul>\n<hr>\n<h1 id=\"干货\"><a href=\"#干货\" class=\"headerlink\" title=\"干货\"></a>干货</h1><p>下面对学习中涉及到的git命令做分类总结，都是最常用的。</p>\n<h2 id=\"git本地管理\"><a href=\"#git本地管理\" class=\"headerlink\" title=\"git本地管理\"></a>git本地管理</h2><blockquote>\n<p>git最基本的一些操作</p>\n</blockquote>\n<p>git init：将某目录变成git可以管理的仓库（添加.git目录）</p>\n<p>git commit -m “…”:一次性提交多个文件（add进来的文件）</p>\n<p>git add xxx.md:可以多次添加多个不同文件</p>\n<p>git status:可以时刻掌握仓库当前的状态</p>\n<p>git diff:显示具体修改的内容（与提交进去的文件相比）</p>\n<p>git log：显示从最近到最远的提交日志，加上–pretty=oneline参数可以将每次提交信息压缩成一行,最前边的数字加字母是指每次commit的commit-id,是16进制的表示形式</p>\n<p>.gitignore文件：包括git需要忽略提交的文件名，此文件也需要提交到git</p>\n<h2 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h2><blockquote>\n<p>世界上是有后悔药的</p>\n</blockquote>\n<p>git reset –hard HEAD^:回退到上个版本（上上个版本HEAD^^,上100个版本是HEAD~100。HEAD是指向当前版本的指针，因此可以通过调整HEAD来在历史版本间穿梭）</p>\n<p>git reset –hard commmitid：在没有关闭上次回退时的命令窗口时，可以取消回退。commitid没必要写全，git可以自己去找</p>\n<p>git reflog:可以显示每一次commit和回退的id号，如果命令窗口关闭，可以用此命令先找到commitid，然后用上个命令取消回退</p>\n<p>git checkout – file：撤销在工作区对file做的修改，包括撤销对file文件的删除</p>\n<p>git reset HEAD file & git checkout – file：对file的修改已被add到stage，用前者删除add到stage的修改，再用后者撤销工作区的修改</p>\n<p>git reset –hard HEAD^ :已经将想撤销的修改添加到了版本库，但还未提交到远程库。用版本回退撤销修改</p>\n<p>git rm file&git commit -m “delete file”：删除已添加到版本库的文件</p>\n<p>git checkout:用版本库里的文件版本替换工作区的文件版本（一键还原）</p>\n<h2 id=\"远程库连接\"><a href=\"#远程库连接\" class=\"headerlink\" title=\"远程库连接\"></a>远程库连接</h2><blockquote>\n<p>连接远程库，进一步实现团队协作。</p>\n</blockquote>\n<p>git remote:查看远程库信息，详细信息加上-v选项</p>\n<p>git remote add origin <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:Summyj/xxx.git：将本地git仓库与github远程库想关联,也可以是其它库，远程库默认名字是origin，也可以设为其它，比如github</p>\n<p>git push -u origin xxx:把本地仓库指定分支·内容推送到远程，下次推送可以不用-u参数<br>因为第一次推送master分支时如果加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，所以在以后的推送或者拉取时就可以简化命令。</p>\n<p>git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:xxx/xxx.git:从远程仓库克隆到本地，后边是地址</p>\n<p>git remotr rm origin:删除本地库关联的origin远程库</p>\n<h2 id=\"分支创建管理\"><a href=\"#分支创建管理\" class=\"headerlink\" title=\"分支创建管理\"></a>分支创建管理</h2><blockquote>\n<p>实现更安全便捷的版本控制。</p>\n</blockquote>\n<p>git checkout -b xxx:git check命令加上-b参数表示创建并切换到xxx分支，此命令相当于两条命令：</p>\n<ul>\n<li>git branch xxx</li>\n<li>git checkout xxx</li>\n</ul>\n<p>git branch:查看当前分支（列出所有分支，当前分支前边会标有*号）</p>\n<p>git merge xxx:将指定分支xxx合并到当前分支,首先要切换到当前分支（不一定是master分支）</p>\n<p>git branch -d xxx:删除某分支（合并后再删除）</p>\n<p>git branch -D xxx:强行删除某个没有被合并的分支</p>\n<p>git log –graph –pretty=oneline –abbrev-commit：用分支图展示各分支合并情况（或者直接git log –graph，但这将会显示所有历史合并图）</p>\n<p>git merge –no-ff -m “…” xxx:禁用git合并时默认的fast-forward模式，生成新的commit加入分支信息。-m后的内容就是合并信息</p>\n<h2 id=\"工作现场存储\"><a href=\"#工作现场存储\" class=\"headerlink\" title=\"工作现场存储\"></a>工作现场存储</h2><blockquote>\n<p>版本控制的freestyle.</p>\n</blockquote>\n<p>git stash:将当前工作现场储藏起来，等以后恢复现场后继续工作</p>\n<p>git stash list:查看储藏的工作现场</p>\n<p>git stash apply:回复储藏的工作现场</p>\n<p>git stash apply stash@{x}有多个stash时恢复指定的stash</p>\n<p>git stash drop:恢复现场并删除stash list的内容，如果有多个stash,默认恢复的是最新的stash.</p>\n<h2 id=\"多人协作\"><a href=\"#多人协作\" class=\"headerlink\" title=\"多人协作\"></a>多人协作</h2><blockquote>\n<p>小伙伴们的友情</p>\n</blockquote>\n<p>git checkout -b xxx origin/xxx:刚从远程库克隆到本地时只有master分支，用此命令创建和远程分支对应的分支</p>\n<p>git pull:多人协作时，远程分支比本地分支更新导致推送失败，用此命令从远程库抓取该分支最新的提交并和本地分支进行合并，合并有冲突需要手动解决</p>\n<p>git branch –set-upstream xxx origin/xxx:git pull失败时需要创建本地分支和远程分支的关联</p>\n<h2 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h2><blockquote>\n<p>更方便进行版本控制，与commit id相比更好记。相当于版本库的一个快照。</p>\n</blockquote>\n<p>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针。与HEAD指针相比，后者可以移动，但标签不能移动），所以，创建和删除标签都是瞬间完成的。</p>\n<p>git tag xxx:打标签</p>\n<p>git tag v0.3 646123:将commit id为646123的提交打上v0.3标签。这样可以解决忘记打标签的问题</p>\n<p>git tag:查看所有标签（按字母排序，而并非时间）</p>\n<p>git show tagname:查看标签信息（包括说明文字）</p>\n<p>git tag -a v0.x -m “…” 615465:创建带有说明的标签，用-a指定标签名，-m指定说明文字</p>\n<p>git tag -d xxx:删除指定标签（因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。）</p>\n<p>git push origin tagname:推送标签到远程</p>\n<p>git push origin –tags:一次性推送全部尚未推送到远程的本地标签</p>\n<p>git tag -d tagname & git push origin :refs/tags/tagname:删除已推送到远程库的标签，先从本地删除，再从远程删除</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":3081,"excerpt":"<p>对近几天的Git学习做一个小结。</p>","more":"<p>学完了<a href=\"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖雪峰的git教程</a>，对git的概念和基本操作有了更深的理解。对“版本控制”的概念也理解的更加深刻。</p>\n<hr>\n<h1 id=\"几点感受\"><a href=\"#几点感受\" class=\"headerlink\" title=\"几点感受\"></a>几点感受</h1><p>以下是我学习了git之后的一些感受：</p>\n<ul>\n<li>成为了Linus Benedict Torvalds的一枚小迷妹（以前也是，现在妥妥的）。</li>\n<li>世上没有后悔药？不存在的，git的版本回退完美的实现了这一点。</li>\n<li>搞清楚了git和github的关系，后者只是拥有一个git远程仓库，可以通过git连接并实现相应操作。</li>\n<li>Git服务器可以轻松搭建，除了github，还有coding/gitee等网站提供git服务。</li>\n<li>工作效率真的提升很快。。。</li>\n</ul>\n<hr>\n<h1 id=\"干货\"><a href=\"#干货\" class=\"headerlink\" title=\"干货\"></a>干货</h1><p>下面对学习中涉及到的git命令做分类总结，都是最常用的。</p>\n<h2 id=\"git本地管理\"><a href=\"#git本地管理\" class=\"headerlink\" title=\"git本地管理\"></a>git本地管理</h2><blockquote>\n<p>git最基本的一些操作</p>\n</blockquote>\n<p>git init：将某目录变成git可以管理的仓库（添加.git目录）</p>\n<p>git commit -m “…”:一次性提交多个文件（add进来的文件）</p>\n<p>git add xxx.md:可以多次添加多个不同文件</p>\n<p>git status:可以时刻掌握仓库当前的状态</p>\n<p>git diff:显示具体修改的内容（与提交进去的文件相比）</p>\n<p>git log：显示从最近到最远的提交日志，加上–pretty=oneline参数可以将每次提交信息压缩成一行,最前边的数字加字母是指每次commit的commit-id,是16进制的表示形式</p>\n<p>.gitignore文件：包括git需要忽略提交的文件名，此文件也需要提交到git</p>\n<h2 id=\"版本回退\"><a href=\"#版本回退\" class=\"headerlink\" title=\"版本回退\"></a>版本回退</h2><blockquote>\n<p>世界上是有后悔药的</p>\n</blockquote>\n<p>git reset –hard HEAD^:回退到上个版本（上上个版本HEAD^^,上100个版本是HEAD~100。HEAD是指向当前版本的指针，因此可以通过调整HEAD来在历史版本间穿梭）</p>\n<p>git reset –hard commmitid：在没有关闭上次回退时的命令窗口时，可以取消回退。commitid没必要写全，git可以自己去找</p>\n<p>git reflog:可以显示每一次commit和回退的id号，如果命令窗口关闭，可以用此命令先找到commitid，然后用上个命令取消回退</p>\n<p>git checkout – file：撤销在工作区对file做的修改，包括撤销对file文件的删除</p>\n<p>git reset HEAD file &amp; git checkout – file：对file的修改已被add到stage，用前者删除add到stage的修改，再用后者撤销工作区的修改</p>\n<p>git reset –hard HEAD^ :已经将想撤销的修改添加到了版本库，但还未提交到远程库。用版本回退撤销修改</p>\n<p>git rm file&amp;git commit -m “delete file”：删除已添加到版本库的文件</p>\n<p>git checkout:用版本库里的文件版本替换工作区的文件版本（一键还原）</p>\n<h2 id=\"远程库连接\"><a href=\"#远程库连接\" class=\"headerlink\" title=\"远程库连接\"></a>远程库连接</h2><blockquote>\n<p>连接远程库，进一步实现团队协作。</p>\n</blockquote>\n<p>git remote:查看远程库信息，详细信息加上-v选项</p>\n<p>git remote add origin <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:Summyj/xxx.git：将本地git仓库与github远程库想关联,也可以是其它库，远程库默认名字是origin，也可以设为其它，比如github</p>\n<p>git push -u origin xxx:把本地仓库指定分支·内容推送到远程，下次推送可以不用-u参数<br>因为第一次推送master分支时如果加上-u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，所以在以后的推送或者拉取时就可以简化命令。</p>\n<p>git clone <a href=\"mailto:git@github.com\" target=\"_blank\" rel=\"noopener\">git@github.com</a>:xxx/xxx.git:从远程仓库克隆到本地，后边是地址</p>\n<p>git remotr rm origin:删除本地库关联的origin远程库</p>\n<h2 id=\"分支创建管理\"><a href=\"#分支创建管理\" class=\"headerlink\" title=\"分支创建管理\"></a>分支创建管理</h2><blockquote>\n<p>实现更安全便捷的版本控制。</p>\n</blockquote>\n<p>git checkout -b xxx:git check命令加上-b参数表示创建并切换到xxx分支，此命令相当于两条命令：</p>\n<ul>\n<li>git branch xxx</li>\n<li>git checkout xxx</li>\n</ul>\n<p>git branch:查看当前分支（列出所有分支，当前分支前边会标有*号）</p>\n<p>git merge xxx:将指定分支xxx合并到当前分支,首先要切换到当前分支（不一定是master分支）</p>\n<p>git branch -d xxx:删除某分支（合并后再删除）</p>\n<p>git branch -D xxx:强行删除某个没有被合并的分支</p>\n<p>git log –graph –pretty=oneline –abbrev-commit：用分支图展示各分支合并情况（或者直接git log –graph，但这将会显示所有历史合并图）</p>\n<p>git merge –no-ff -m “…” xxx:禁用git合并时默认的fast-forward模式，生成新的commit加入分支信息。-m后的内容就是合并信息</p>\n<h2 id=\"工作现场存储\"><a href=\"#工作现场存储\" class=\"headerlink\" title=\"工作现场存储\"></a>工作现场存储</h2><blockquote>\n<p>版本控制的freestyle.</p>\n</blockquote>\n<p>git stash:将当前工作现场储藏起来，等以后恢复现场后继续工作</p>\n<p>git stash list:查看储藏的工作现场</p>\n<p>git stash apply:回复储藏的工作现场</p>\n<p>git stash apply stash@{x}有多个stash时恢复指定的stash</p>\n<p>git stash drop:恢复现场并删除stash list的内容，如果有多个stash,默认恢复的是最新的stash.</p>\n<h2 id=\"多人协作\"><a href=\"#多人协作\" class=\"headerlink\" title=\"多人协作\"></a>多人协作</h2><blockquote>\n<p>小伙伴们的友情</p>\n</blockquote>\n<p>git checkout -b xxx origin/xxx:刚从远程库克隆到本地时只有master分支，用此命令创建和远程分支对应的分支</p>\n<p>git pull:多人协作时，远程分支比本地分支更新导致推送失败，用此命令从远程库抓取该分支最新的提交并和本地分支进行合并，合并有冲突需要手动解决</p>\n<p>git branch –set-upstream xxx origin/xxx:git pull失败时需要创建本地分支和远程分支的关联</p>\n<h2 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h2><blockquote>\n<p>更方便进行版本控制，与commit id相比更好记。相当于版本库的一个快照。</p>\n</blockquote>\n<p>Git的标签虽然是版本库的快照，但其实它就是指向某个commit的指针。与HEAD指针相比，后者可以移动，但标签不能移动），所以，创建和删除标签都是瞬间完成的。</p>\n<p>git tag xxx:打标签</p>\n<p>git tag v0.3 646123:将commit id为646123的提交打上v0.3标签。这样可以解决忘记打标签的问题</p>\n<p>git tag:查看所有标签（按字母排序，而并非时间）</p>\n<p>git show tagname:查看标签信息（包括说明文字）</p>\n<p>git tag -a v0.x -m “…” 615465:创建带有说明的标签，用-a指定标签名，-m指定说明文字</p>\n<p>git tag -d xxx:删除指定标签（因为创建的标签都只存储在本地，不会自动推送到远程。所以，打错的标签可以在本地安全删除。）</p>\n<p>git push origin tagname:推送标签到远程</p>\n<p>git push origin –tags:一次性推送全部尚未推送到远程的本地标签</p>\n<p>git tag -d tagname &amp; git push origin :refs/tags/tagname:删除已推送到远程库的标签，先从本地删除，再从远程删除</p>"},{"title":"Java判断素数","date":"2018-04-23T06:21:42.000Z","update":"2018-04-23T06:21:42.000Z","copyright":true,"top":null,"_content":"\n嗯，就是来秀插件的。\n\n<!-- more -->\n\n<iframe height=498 width=666 src='http://player.youku.com/embed/XMzU1ODc3NDU2NA==' frameborder=0 'allowfullscreen'></iframe>","source":"_posts/java判断素数.md","raw":"---\ntitle: Java判断素数\ndate: 2018-04-23 14:21:42\nupdate: 2018-04-23 14:21:42\ntags: 判断素数\ncategories: java基础\ncopyright: true\ntop:\n---\n\n嗯，就是来秀插件的。\n\n<!-- more -->\n\n<iframe height=498 width=666 src='http://player.youku.com/embed/XMzU1ODc3NDU2NA==' frameborder=0 'allowfullscreen'></iframe>","slug":"java判断素数","published":1,"updated":"2019-05-16T08:26:38.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk940008f363t4lns67j","content":"<p>嗯，就是来秀插件的。</p>\n<a id=\"more\"></a>\n<iframe height=\"498\" width=\"666\" src=\"http://player.youku.com/embed/XMzU1ODc3NDU2NA==\" frameborder=\"0\" 'allowfullscreen'></iframe><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":12,"excerpt":"<p>嗯，就是来秀插件的。</p>","more":"<iframe height=\"498\" width=\"666\" src=\"http://player.youku.com/embed/XMzU1ODc3NDU2NA==\" frameborder=\"0\" 'allowfullscreen'></iframe>"},{"title":"Java类中的代码块执行顺序","date":"2017-11-06T13:10:25.000Z","update":"2017-11-06T13:10:25.000Z","copyright":true,"top":null,"_content":"\n\n代码实例分析java类中的代码块执行顺序.\n\n<!-- more -->\n\n# 一道笔试题 #\n\n下面是一道阿里的java校招笔试题：\n\n```java\n    class HelloA\n    {\n    \t//构造方法\n    \tpublic HelloA()\n    \t{\n    \t\tSystem.out.println(\"父类构造方法\");\n    \t}\n    \t\n    \t//非静态代码块\n    \t{\n    \t\tSystem.out.println(\"父类非静态代码块\");\n    \t}\n    \t\n    \t//静态代码块\n    \tstatic{\n    \t\tSystem.out.println(\"父类静态代码块\");\n    \t}\n    }\n    \n    class HelloB extends HelloA\n    {\n    \t//构造方法\n    \tpublic HelloB()\n    \t{\n    \t\tSystem.out.println(\"子类构造方法\");\n    \t}\n    \t//非静态代码块\n    \t{\n    \t\tSystem.out.println(\"子类非静态代码块\");\n    \t}\n    \t\n    \t//静态代码块\n    \tstatic{\n    \t\tSystem.out.println(\"子类静态代码块\");\n    \t}\n    \t\n    }\n    \n    public class Test\n    {\n    \tpublic static void main(String[] args) {\n    \t\tnew HelloB();\n    \t\tnew HelloB();\n    \t}\n    }\n```\n请写出上述代码的输出，看完本文你就会有答案。\n\n# 代码块分类及其执行顺序 #\n\n## 代码块分类 ##\n\n代码块，就是使用\"{}\"定义的一段代码，根据代码块定义的位置和关键字，可分为以下四种：\n\n- 普通代码块：定义在类的方法中的代码块。\n- 构造块：定义在类中的代码块（无修饰符）。\n- 静态代码块：使用static修饰的，在类中定义的代码块。\n- 同步代码块（与多线程有关，本文不涉及）\n\n## 执行顺序（无继承） ##\n\n看代码：\n\n```java\n    class Person\n    {\n    \t\n    \tpublic Person()\n    \t{\n    \t\tSystem.out.println(\"非主类构造方法\");\n    \t}\n    \t\n    \t{\n    \t\tSystem.out.println(\"非主类构造块,优于构造方法执行\");\n    \t}\n    \t\n    \tstatic {\n    \t\tSystem.out.println(\"非主类静态块，优于构造块执行，无论产生多少实例化对象，只执行一次。\");\n    \t}\n    \t\n    }\n    \n    public  class Hello\n    {\n    \tpublic Hello()\n    \t{\n    \t\tSystem.out.println(\"主类构造方法\");\n    \t}\n    \t\n    \tpublic static void main(String[] args) \n    \t{\n    \t\tSystem.out.println(\"----start----\");\n    \t\tnew Hello();\n    \t\tnew Person();\n    \t\tnew Person();\n    \t\tnew Hello();\n    \t\tSystem.out.println(\"-----end-----\");\n    \t}\n    \t\n    \t{\n    \t\tSystem.out.println(\"主类构造块\");\n    \t}\n    \t\n    \tstatic{\n    \t\tSystem.out.println(\"主类静态块，优于主方法执行\");\n    \t}\n    }\n```\n\n**执行结果：**\n\n![66](http://ou7wdump3.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.PNG)\n\n\n**结论：**\n\n![78](http://ou7wdump3.bkt.clouddn.com/%E5%9B%BE%E7%A4%BA.PNG)\n\n**其中：**\n\n- 主类静态块优于主方法执行。\n- 无论生成多少类对象，静态块只执行一次。\n- 主类和非主类的构造方法、构造块谁先执行取决于代码顺序，与主类/非主类无关。\n\n## 执行顺序（有继承） ##\n\n我们知道，在继承的情况下，子类在实例化时，首先调用父类的构造方法，然后再调用子类的构造方法。因此，结合上面的结论，我们就可以得出开始那道笔试题的结果。\n\n>为了方便观察，对代码改动如下：\n\n```java\n    public class Test\n    {\n    \tpublic static void main(String[] args) {\n    \t\tSystem.out.println(\"----start----\");\n    \t\tSystem.out.println(\"---first---\");\n    \t\tnew HelloB();//first\n    \t\tSystem.out.println(\"---second---\");\n    \t\tnew HelloB();//second\n    \t\tSystem.out.println(\"-----end-----\");\n    \t}\n    }\n```\n\n答案在这里：\n\n![77](http://ou7wdump3.bkt.clouddn.com/%E7%BB%A7%E6%89%BF%E5%90%8E%E7%BB%93%E6%9E%9C.PNG)","source":"_posts/java类中的代码块执行顺序.md","raw":"---\ntitle: Java类中的代码块执行顺序\ndate: 2017-11-06 21:10:25\nupdate: 2017-11-06 21:10:25\ntags: javaEE\ncategories: java基础\ncopyright: true\ntop:\n---\n\n\n代码实例分析java类中的代码块执行顺序.\n\n<!-- more -->\n\n# 一道笔试题 #\n\n下面是一道阿里的java校招笔试题：\n\n```java\n    class HelloA\n    {\n    \t//构造方法\n    \tpublic HelloA()\n    \t{\n    \t\tSystem.out.println(\"父类构造方法\");\n    \t}\n    \t\n    \t//非静态代码块\n    \t{\n    \t\tSystem.out.println(\"父类非静态代码块\");\n    \t}\n    \t\n    \t//静态代码块\n    \tstatic{\n    \t\tSystem.out.println(\"父类静态代码块\");\n    \t}\n    }\n    \n    class HelloB extends HelloA\n    {\n    \t//构造方法\n    \tpublic HelloB()\n    \t{\n    \t\tSystem.out.println(\"子类构造方法\");\n    \t}\n    \t//非静态代码块\n    \t{\n    \t\tSystem.out.println(\"子类非静态代码块\");\n    \t}\n    \t\n    \t//静态代码块\n    \tstatic{\n    \t\tSystem.out.println(\"子类静态代码块\");\n    \t}\n    \t\n    }\n    \n    public class Test\n    {\n    \tpublic static void main(String[] args) {\n    \t\tnew HelloB();\n    \t\tnew HelloB();\n    \t}\n    }\n```\n请写出上述代码的输出，看完本文你就会有答案。\n\n# 代码块分类及其执行顺序 #\n\n## 代码块分类 ##\n\n代码块，就是使用\"{}\"定义的一段代码，根据代码块定义的位置和关键字，可分为以下四种：\n\n- 普通代码块：定义在类的方法中的代码块。\n- 构造块：定义在类中的代码块（无修饰符）。\n- 静态代码块：使用static修饰的，在类中定义的代码块。\n- 同步代码块（与多线程有关，本文不涉及）\n\n## 执行顺序（无继承） ##\n\n看代码：\n\n```java\n    class Person\n    {\n    \t\n    \tpublic Person()\n    \t{\n    \t\tSystem.out.println(\"非主类构造方法\");\n    \t}\n    \t\n    \t{\n    \t\tSystem.out.println(\"非主类构造块,优于构造方法执行\");\n    \t}\n    \t\n    \tstatic {\n    \t\tSystem.out.println(\"非主类静态块，优于构造块执行，无论产生多少实例化对象，只执行一次。\");\n    \t}\n    \t\n    }\n    \n    public  class Hello\n    {\n    \tpublic Hello()\n    \t{\n    \t\tSystem.out.println(\"主类构造方法\");\n    \t}\n    \t\n    \tpublic static void main(String[] args) \n    \t{\n    \t\tSystem.out.println(\"----start----\");\n    \t\tnew Hello();\n    \t\tnew Person();\n    \t\tnew Person();\n    \t\tnew Hello();\n    \t\tSystem.out.println(\"-----end-----\");\n    \t}\n    \t\n    \t{\n    \t\tSystem.out.println(\"主类构造块\");\n    \t}\n    \t\n    \tstatic{\n    \t\tSystem.out.println(\"主类静态块，优于主方法执行\");\n    \t}\n    }\n```\n\n**执行结果：**\n\n![66](http://ou7wdump3.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.PNG)\n\n\n**结论：**\n\n![78](http://ou7wdump3.bkt.clouddn.com/%E5%9B%BE%E7%A4%BA.PNG)\n\n**其中：**\n\n- 主类静态块优于主方法执行。\n- 无论生成多少类对象，静态块只执行一次。\n- 主类和非主类的构造方法、构造块谁先执行取决于代码顺序，与主类/非主类无关。\n\n## 执行顺序（有继承） ##\n\n我们知道，在继承的情况下，子类在实例化时，首先调用父类的构造方法，然后再调用子类的构造方法。因此，结合上面的结论，我们就可以得出开始那道笔试题的结果。\n\n>为了方便观察，对代码改动如下：\n\n```java\n    public class Test\n    {\n    \tpublic static void main(String[] args) {\n    \t\tSystem.out.println(\"----start----\");\n    \t\tSystem.out.println(\"---first---\");\n    \t\tnew HelloB();//first\n    \t\tSystem.out.println(\"---second---\");\n    \t\tnew HelloB();//second\n    \t\tSystem.out.println(\"-----end-----\");\n    \t}\n    }\n```\n\n答案在这里：\n\n![77](http://ou7wdump3.bkt.clouddn.com/%E7%BB%A7%E6%89%BF%E5%90%8E%E7%BB%93%E6%9E%9C.PNG)","slug":"java类中的代码块执行顺序","published":1,"updated":"2019-05-16T08:26:35.067Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk950009f363oj5j4ar5","content":"<p>代码实例分析java类中的代码块执行顺序.</p>\n<a id=\"more\"></a>\n<h1 id=\"一道笔试题\"><a href=\"#一道笔试题\" class=\"headerlink\" title=\"一道笔试题\"></a>一道笔试题</h1><p>下面是一道阿里的java校招笔试题：</p>\n<figure class=\"highlight java\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t<span class=\"comment\">//构造方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HelloA</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类构造方法\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//非静态代码块</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类非静态代码块\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">\t<span class=\"keyword\">static</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类静态代码块\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloB</span> <span class=\"keyword\">extends</span> <span class=\"title\">HelloA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t<span class=\"comment\">//构造方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HelloB</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类构造方法\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"comment\">//非静态代码块</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类非静态代码块\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">\t<span class=\"keyword\">static</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类静态代码块\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>{</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>请写出上述代码的输出，看完本文你就会有答案。</p>\n<h1 id=\"代码块分类及其执行顺序\"><a href=\"#代码块分类及其执行顺序\" class=\"headerlink\" title=\"代码块分类及其执行顺序\"></a>代码块分类及其执行顺序</h1><h2 id=\"代码块分类\"><a href=\"#代码块分类\" class=\"headerlink\" title=\"代码块分类\"></a>代码块分类</h2><p>代码块，就是使用”{}”定义的一段代码，根据代码块定义的位置和关键字，可分为以下四种：</p>\n<ul>\n<li>普通代码块：定义在类的方法中的代码块。</li>\n<li>构造块：定义在类中的代码块（无修饰符）。</li>\n<li>静态代码块：使用static修饰的，在类中定义的代码块。</li>\n<li>同步代码块（与多线程有关，本文不涉及）</li>\n</ul>\n<h2 id=\"执行顺序（无继承）\"><a href=\"#执行顺序（无继承）\" class=\"headerlink\" title=\"执行顺序（无继承）\"></a>执行顺序（无继承）</h2><p>看代码：</p>\n<figure class=\"highlight java\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类构造方法\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类构造块,优于构造方法执行\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> {</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类静态块，优于构造块执行，无论产生多少实例化对象，只执行一次。\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Hello</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类构造方法\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"----start----\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"-----end-----\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类构造块\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类静态块，优于主方法执行\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p><strong>执行结果：</strong></p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.PNG\" alt=\"66\"></p>\n<p><strong>结论：</strong></p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E5%9B%BE%E7%A4%BA.PNG\" alt=\"78\"></p>\n<p><strong>其中：</strong></p>\n<ul>\n<li>主类静态块优于主方法执行。</li>\n<li>无论生成多少类对象，静态块只执行一次。</li>\n<li>主类和非主类的构造方法、构造块谁先执行取决于代码顺序，与主类/非主类无关。</li>\n</ul>\n<h2 id=\"执行顺序（有继承）\"><a href=\"#执行顺序（有继承）\" class=\"headerlink\" title=\"执行顺序（有继承）\"></a>执行顺序（有继承）</h2><p>我们知道，在继承的情况下，子类在实例化时，首先调用父类的构造方法，然后再调用子类的构造方法。因此，结合上面的结论，我们就可以得出开始那道笔试题的结果。</p>\n<blockquote>\n<p>为了方便观察，对代码改动如下：</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>{</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>{</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"----start----\"</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---first---\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();<span class=\"comment\">//first</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---second---\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();<span class=\"comment\">//second</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"-----end-----\"</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>答案在这里：</p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E7%BB%A7%E6%89%BF%E5%90%8E%E7%BB%93%E6%9E%9C.PNG\" alt=\"77\"></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":1870,"excerpt":"<p>代码实例分析java类中的代码块执行顺序.</p>","more":"<h1 id=\"一道笔试题\"><a href=\"#一道笔试题\" class=\"headerlink\" title=\"一道笔试题\"></a>一道笔试题</h1><p>下面是一道阿里的java校招笔试题：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//构造方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HelloA</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//非静态代码块</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类非静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">\t<span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"父类静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloB</span> <span class=\"keyword\">extends</span> <span class=\"title\">HelloA</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//构造方法</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HelloB</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//非静态代码块</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类非静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">\t<span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"子类静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>请写出上述代码的输出，看完本文你就会有答案。</p>\n<h1 id=\"代码块分类及其执行顺序\"><a href=\"#代码块分类及其执行顺序\" class=\"headerlink\" title=\"代码块分类及其执行顺序\"></a>代码块分类及其执行顺序</h1><h2 id=\"代码块分类\"><a href=\"#代码块分类\" class=\"headerlink\" title=\"代码块分类\"></a>代码块分类</h2><p>代码块，就是使用”{}”定义的一段代码，根据代码块定义的位置和关键字，可分为以下四种：</p>\n<ul>\n<li>普通代码块：定义在类的方法中的代码块。</li>\n<li>构造块：定义在类中的代码块（无修饰符）。</li>\n<li>静态代码块：使用static修饰的，在类中定义的代码块。</li>\n<li>同步代码块（与多线程有关，本文不涉及）</li>\n</ul>\n<h2 id=\"执行顺序（无继承）\"><a href=\"#执行顺序（无继承）\" class=\"headerlink\" title=\"执行顺序（无继承）\"></a>执行顺序（无继承）</h2><p>看代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类构造块,优于构造方法执行\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"非主类静态块，优于构造块执行，无论产生多少实例化对象，只执行一次。\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>  <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Hello</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Hello</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"----start----\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Person();</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> Hello();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"-----end-----\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类构造块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"主类静态块，优于主方法执行\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>执行结果：</strong></p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C.PNG\" alt=\"66\"></p>\n<p><strong>结论：</strong></p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E5%9B%BE%E7%A4%BA.PNG\" alt=\"78\"></p>\n<p><strong>其中：</strong></p>\n<ul>\n<li>主类静态块优于主方法执行。</li>\n<li>无论生成多少类对象，静态块只执行一次。</li>\n<li>主类和非主类的构造方法、构造块谁先执行取决于代码顺序，与主类/非主类无关。</li>\n</ul>\n<h2 id=\"执行顺序（有继承）\"><a href=\"#执行顺序（有继承）\" class=\"headerlink\" title=\"执行顺序（有继承）\"></a>执行顺序（有继承）</h2><p>我们知道，在继承的情况下，子类在实例化时，首先调用父类的构造方法，然后再调用子类的构造方法。因此，结合上面的结论，我们就可以得出开始那道笔试题的结果。</p>\n<blockquote>\n<p>为了方便观察，对代码改动如下：</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"----start----\"</span>);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---first---\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();<span class=\"comment\">//first</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---second---\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">new</span> HelloB();<span class=\"comment\">//second</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"-----end-----\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>答案在这里：</p>\n<p><img src=\"http://ou7wdump3.bkt.clouddn.com/%E7%BB%A7%E6%89%BF%E5%90%8E%E7%BB%93%E6%9E%9C.PNG\" alt=\"77\"></p>"},{"title":"关于闰年，你不知道的那些事","date":"2017-08-16T11:22:41.000Z","update":"2017-08-16T11:22:41.000Z","copyright":true,"top":null,"_content":"\n\n“四年一闰，百年不闰，四百年再闰”。你知道为什么吗？\n\n<!-- more -->\n\n\n\n判断某一年是否是闰年几乎是所有编程语言的基础练习题之一，而我们必然也熟知其规则：\n\n\n- 整除但4不能整除100\n- 整除100又能整除400\n\n>这就是俗语中的“四年一闰，百年不闰，四百年再润”，我们当然可以根据这个规则编写程序判断闰年，但你知道为什么这样规定闰年的算法么？\n\n\n----------\n事实上，闰年是为了弥补因人为历法规定，造成的年度天数与地球实际公转周期的时间差而设立的。所以闰年有366天。\n\n那么具体是怎么弥补的呢？\n\n>我们知道，平年一年只有365天，而实际上地球绕太阳的公转周期为365天5小时48分46秒。即一回归年。所以公历的每一年都比回归年短0.2422天，四年累计起来，共短0.9688天。\n\n大概就是一天，所以为了弥补这一天的时间差。给2月加上1天，就有了闰年。这样一来，每四年里就有一个闰年，3个平年。这就是**四年一闰**。\n\n那么**百年不闰，四百年再闰**又是怎么回事呢？\n\n>是这样的，刚才说四年累计起来的时间差只有0.9688天，这比我们给闰年增加的一天还少0.0312天，所以每四年就会多出0.0312天。这样400年后，就会比实际天数多出3.12天。所以我们必须在这400年中少设3个闰年。这样公历年的平均长度与回归年就近似了。\n\n那这3个闰年怎么少呢？\n\n很简单，给百年除以400即可，比如2000-2400这400年：\n\n\n\n- 2000/400=5\n- 2100/400=5.25\n- 2200/400=5.5\n- 2300/400=5.75\n- 2400/400=6\n\n可以发现，正好有3个不能整除的整百年。所以规定年份是整百数的必须是400的倍数才是闰年。这就是百年不闰，四百年才闰的规定。\n\n你明白了吗？\n\n\n----------\n\n当然，根据规则，我们就可以编写代码判断了：\n\n\n```C++  \nint main()\n{\n\tint year;\n\tcin >> year;\n\n\tif (year % 4 == 0)\n\t{\n\t\tif (year % 100 != 0)//1. 能整除4，不能整除100\n\t\t{\n\t\t\tcout << \"是闰年\\n\" << endl;\n\t\t}\n\t\telse if ((year % 100==0) && (year % 400==0))//2. 能整除100， 又能整除400\n\t\t{\n\t\t\tcout << \"是闰年\\n\" << endl;\n\t\t}\n\t\telse//其它情况不是闰年\n\t\t{\n\t\t\tcout << \"不是闰年\\n\" << endl;\n\t\t}\n\t}\n\telse//不能整除4就不是闰年\n\t{\n\t\tcout << \"不是闰年\\n\" << endl;\n\t}\n\tsystem(\"pause\");\n}\n```","source":"_posts/关于闰年，你不知道的那些事.md","raw":"---\ntitle: 关于闰年，你不知道的那些事\ndate: 2017-08-16 19:22:41\nupdate: 2017-08-16 19:22:41\ntags: 闰年\ncategories: C/C++基础\ncopyright: true\ntop:\n---\n\n\n“四年一闰，百年不闰，四百年再闰”。你知道为什么吗？\n\n<!-- more -->\n\n\n\n判断某一年是否是闰年几乎是所有编程语言的基础练习题之一，而我们必然也熟知其规则：\n\n\n- 整除但4不能整除100\n- 整除100又能整除400\n\n>这就是俗语中的“四年一闰，百年不闰，四百年再润”，我们当然可以根据这个规则编写程序判断闰年，但你知道为什么这样规定闰年的算法么？\n\n\n----------\n事实上，闰年是为了弥补因人为历法规定，造成的年度天数与地球实际公转周期的时间差而设立的。所以闰年有366天。\n\n那么具体是怎么弥补的呢？\n\n>我们知道，平年一年只有365天，而实际上地球绕太阳的公转周期为365天5小时48分46秒。即一回归年。所以公历的每一年都比回归年短0.2422天，四年累计起来，共短0.9688天。\n\n大概就是一天，所以为了弥补这一天的时间差。给2月加上1天，就有了闰年。这样一来，每四年里就有一个闰年，3个平年。这就是**四年一闰**。\n\n那么**百年不闰，四百年再闰**又是怎么回事呢？\n\n>是这样的，刚才说四年累计起来的时间差只有0.9688天，这比我们给闰年增加的一天还少0.0312天，所以每四年就会多出0.0312天。这样400年后，就会比实际天数多出3.12天。所以我们必须在这400年中少设3个闰年。这样公历年的平均长度与回归年就近似了。\n\n那这3个闰年怎么少呢？\n\n很简单，给百年除以400即可，比如2000-2400这400年：\n\n\n\n- 2000/400=5\n- 2100/400=5.25\n- 2200/400=5.5\n- 2300/400=5.75\n- 2400/400=6\n\n可以发现，正好有3个不能整除的整百年。所以规定年份是整百数的必须是400的倍数才是闰年。这就是百年不闰，四百年才闰的规定。\n\n你明白了吗？\n\n\n----------\n\n当然，根据规则，我们就可以编写代码判断了：\n\n\n```C++  \nint main()\n{\n\tint year;\n\tcin >> year;\n\n\tif (year % 4 == 0)\n\t{\n\t\tif (year % 100 != 0)//1. 能整除4，不能整除100\n\t\t{\n\t\t\tcout << \"是闰年\\n\" << endl;\n\t\t}\n\t\telse if ((year % 100==0) && (year % 400==0))//2. 能整除100， 又能整除400\n\t\t{\n\t\t\tcout << \"是闰年\\n\" << endl;\n\t\t}\n\t\telse//其它情况不是闰年\n\t\t{\n\t\t\tcout << \"不是闰年\\n\" << endl;\n\t\t}\n\t}\n\telse//不能整除4就不是闰年\n\t{\n\t\tcout << \"不是闰年\\n\" << endl;\n\t}\n\tsystem(\"pause\");\n}\n```","slug":"关于闰年，你不知道的那些事","published":1,"updated":"2019-06-21T03:21:35.658Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk97000cf363y79srtlr","content":"<p>“四年一闰，百年不闰，四百年再闰”。你知道为什么吗？</p>\n<a id=\"more\"></a>\n<p>判断某一年是否是闰年几乎是所有编程语言的基础练习题之一，而我们必然也熟知其规则：</p>\n<ul>\n<li>整除但4不能整除100</li>\n<li>整除100又能整除400</li>\n</ul>\n<blockquote>\n<p>这就是俗语中的“四年一闰，百年不闰，四百年再润”，我们当然可以根据这个规则编写程序判断闰年，但你知道为什么这样规定闰年的算法么？</p>\n</blockquote>\n<hr>\n<p>事实上，闰年是为了弥补因人为历法规定，造成的年度天数与地球实际公转周期的时间差而设立的。所以闰年有366天。</p>\n<p>那么具体是怎么弥补的呢？</p>\n<blockquote>\n<p>我们知道，平年一年只有365天，而实际上地球绕太阳的公转周期为365天5小时48分46秒。即一回归年。所以公历的每一年都比回归年短0.2422天，四年累计起来，共短0.9688天。</p>\n</blockquote>\n<p>大概就是一天，所以为了弥补这一天的时间差。给2月加上1天，就有了闰年。这样一来，每四年里就有一个闰年，3个平年。这就是<strong>四年一闰</strong>。</p>\n<p>那么<strong>百年不闰，四百年再闰</strong>又是怎么回事呢？</p>\n<blockquote>\n<p>是这样的，刚才说四年累计起来的时间差只有0.9688天，这比我们给闰年增加的一天还少0.0312天，所以每四年就会多出0.0312天。这样400年后，就会比实际天数多出3.12天。所以我们必须在这400年中少设3个闰年。这样公历年的平均长度与回归年就近似了。</p>\n</blockquote>\n<p>那这3个闰年怎么少呢？</p>\n<p>很简单，给百年除以400即可，比如2000-2400这400年：</p>\n<ul>\n<li>2000/400=5</li>\n<li>2100/400=5.25</li>\n<li>2200/400=5.5</li>\n<li>2300/400=5.75</li>\n<li>2400/400=6</li>\n</ul>\n<p>可以发现，正好有3个不能整除的整百年。所以规定年份是整百数的必须是400的倍数才是闰年。这就是百年不闰，四百年才闰的规定。</p>\n<p>你明白了吗？</p>\n<hr>\n<p>当然，根据规则，我们就可以编写代码判断了：</p>\n<figure class=\"highlight c++\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> year;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> >> year;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (year % <span class=\"number\">100</span> != <span class=\"number\">0</span>)<span class=\"comment\">//1. 能整除4，不能整除100</span></span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> << <span class=\"string\">\"是闰年\\n\"</span> << <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((year % <span class=\"number\">100</span>==<span class=\"number\">0</span>) && (year % <span class=\"number\">400</span>==<span class=\"number\">0</span>))<span class=\"comment\">//2. 能整除100， 又能整除400</span></span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> << <span class=\"string\">\"是闰年\\n\"</span> << <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span><span class=\"comment\">//其它情况不是闰年</span></span><br><span class=\"line\">\t\t{</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> << <span class=\"string\">\"不是闰年\\n\"</span> << <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t}</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">else</span><span class=\"comment\">//不能整除4就不是闰年</span></span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> << <span class=\"string\">\"不是闰年\\n\"</span> << <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\tsystem(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":1211,"excerpt":"<p>“四年一闰，百年不闰，四百年再闰”。你知道为什么吗？</p>","more":"<p>判断某一年是否是闰年几乎是所有编程语言的基础练习题之一，而我们必然也熟知其规则：</p>\n<ul>\n<li>整除但4不能整除100</li>\n<li>整除100又能整除400</li>\n</ul>\n<blockquote>\n<p>这就是俗语中的“四年一闰，百年不闰，四百年再润”，我们当然可以根据这个规则编写程序判断闰年，但你知道为什么这样规定闰年的算法么？</p>\n</blockquote>\n<hr>\n<p>事实上，闰年是为了弥补因人为历法规定，造成的年度天数与地球实际公转周期的时间差而设立的。所以闰年有366天。</p>\n<p>那么具体是怎么弥补的呢？</p>\n<blockquote>\n<p>我们知道，平年一年只有365天，而实际上地球绕太阳的公转周期为365天5小时48分46秒。即一回归年。所以公历的每一年都比回归年短0.2422天，四年累计起来，共短0.9688天。</p>\n</blockquote>\n<p>大概就是一天，所以为了弥补这一天的时间差。给2月加上1天，就有了闰年。这样一来，每四年里就有一个闰年，3个平年。这就是<strong>四年一闰</strong>。</p>\n<p>那么<strong>百年不闰，四百年再闰</strong>又是怎么回事呢？</p>\n<blockquote>\n<p>是这样的，刚才说四年累计起来的时间差只有0.9688天，这比我们给闰年增加的一天还少0.0312天，所以每四年就会多出0.0312天。这样400年后，就会比实际天数多出3.12天。所以我们必须在这400年中少设3个闰年。这样公历年的平均长度与回归年就近似了。</p>\n</blockquote>\n<p>那这3个闰年怎么少呢？</p>\n<p>很简单，给百年除以400即可，比如2000-2400这400年：</p>\n<ul>\n<li>2000/400=5</li>\n<li>2100/400=5.25</li>\n<li>2200/400=5.5</li>\n<li>2300/400=5.75</li>\n<li>2400/400=6</li>\n</ul>\n<p>可以发现，正好有3个不能整除的整百年。所以规定年份是整百数的必须是400的倍数才是闰年。这就是百年不闰，四百年才闰的规定。</p>\n<p>你明白了吗？</p>\n<hr>\n<p>当然，根据规则，我们就可以编写代码判断了：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> year;</span><br><span class=\"line\">\t<span class=\"built_in\">cin</span> &gt;&gt; year;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (year % <span class=\"number\">4</span> == <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (year % <span class=\"number\">100</span> != <span class=\"number\">0</span>)<span class=\"comment\">//1. 能整除4，不能整除100</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"是闰年\\n\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((year % <span class=\"number\">100</span>==<span class=\"number\">0</span>) &amp;&amp; (year % <span class=\"number\">400</span>==<span class=\"number\">0</span>))<span class=\"comment\">//2. 能整除100， 又能整除400</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"是闰年\\n\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span><span class=\"comment\">//其它情况不是闰年</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"不是闰年\\n\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span><span class=\"comment\">//不能整除4就不是闰年</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"不是闰年\\n\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsystem(<span class=\"string\">\"pause\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"敏捷开发与测试","date":"2018-03-12T08:14:48.000Z","update":"2018-03-12T08:14:48.000Z","copyright":true,"top":null,"_content":"\n啥是敏捷，敏捷是啥？\n\n<!-- more -->\n\n先来首Music:\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=400581295&auto=1&height=66\"></iframe>\n\n# 与“敏捷开发”的初次接触 #\n\n开始接触到“敏捷”这个概念，是在公司实习的时候，因为所在项目组实行的是敏捷开发。后来又读了几本关于敏捷测试的书籍（软件测试的艺术第三版—Chapter9），有了更深入的理解。所以本文主要是博主的实习经历总结和读书笔记。\n\n\n----------\n\n>接下来我将从3个方面：What?（什么是敏捷开发）&Why（为什么要实行敏捷开发）&How（如何实施）来谈谈我对敏捷软件开发模式的理解。\n\n# What? #\n\n## 敏捷开发 ##\n简单来说，敏捷开发是一个**以用户为中心、客户需求为导向**的开发过程。强调客户合作、响应需求变化。是一种**迭代式、增量式**的开发模式。主要有以下特点：\n\n- 依赖客户参与\n- 测试驱动开发（TDD）\n- 开发周期短\n\n## 敏捷测试 ##\n对应敏捷开发模式，敏捷测试要求每个人都参与到测试过程中，所以需要团队人员之间进行大量的沟通与协作。\n\n- 客户：定义用例和程序属性参与验收测试\n- 开发和测试：共同打造可以进行功能自动化的测试配件\n\n与传统测试过程相比，敏捷测试主要有以下特征：\n\n- 测试并不是一个独立的阶段，而是和开发过程紧密联系并**驱动开发**（TDD）。\n- 开发者先创建**单元测试**用例（失败验证测试），然后实现软件单元代码。\n- 敏捷测试依赖于**自动化测试**。\n- 测试者要通过持续的测试反馈推动项目前行，并**帮助开发者修复bug**。\n\n\n----------\n# Why? #\n\n>与传统软件开发模式相比，敏捷开发把客户的参与作为关键环节。这样引入了灵活性，提高客户满意度。\n\n如今的客户总是需要能立即发布的高质量应用产品，使得传统开发模式不能适应这种激烈的市场竞争环境。所以大多数企业更青睐像敏捷开发一般，轻量化、快速的开发方法。\n\n----------\n# How? #\n\n事实上，敏捷开发方法有很多种，比如：功能驱动开发（FDD）、开放统一过程等等。但最流行的是**极限编程（XP）**开发方法和**Scrum（进度跟踪）**项目管理方法。\n\n>**XP**是一种迭代式、增量式的开发模式，非常强调单元测试和验收测试，是现在最著名的敏捷方法。\n>**Scrum**是一种迭代式、增量式的项目管理方法，适用于所有的敏捷方法，用来度量开发速度和进度。两者相辅相成，形成了现今最流行的敏捷开发模式。\n\n## XP编程 ##\n\n面向对象的编程语言如Java/C#，都含有全功能的API，所以可以利用其迅速实现大型复杂应用。但正因如此，应用程序的质量经常得不到保证。\n\n>XP编程的目的就是**短时间**开发**高质量**的应用程序。所以，XP方法将主要精力集中在测试上，在产品设计阶段之后，必须首先生成单元测试用例，然后才编写代码通过测试。\n\nXP开发模型用12个核心实践来驱动该过程：\n\n- NO.1：需求分析（开发、客户、产品均参与）\n- NO.2：小规模、递增发布（增加实在/可增值的新功能，频繁发布新版本）\n- NO.3：系统隐喻（编程小组确认开发规则）\n- NO.4：简要设计（实现简要设计，通过单元测试，不需重复设计，只要不停实现）\n- NO.5：连续测试（编写模块之前先生成单元测试用例，模块在通过单元测试后才算完成，程序在通过所有单元测试和验收测试后才算结束）\n- NO.6：重构（清理调整代码库，任何重构之后需重新进行所有单元测试）\n- NO.7：结对编程（两位程序员在同一台机器协同开发代码库，便于对代码实时检查，提高缺陷发生纠正率）\n- NO.8：代码的集体所有权（所有代码归全体程序员所有，不存在某一个程序员只开发某一个代码库）\n- NO.9：持续集成（变更后的代码在通过单元测试之后将其集成到代码库中）\n- NO.10：每周工作40小时（不允许加班，如果每周都全力工作了40个小时，就不需要加班，在版本发布的前一周例外）\n- NO.11：客户在现场（编程小组可以随时与客户沟通）\n- NO.12：按标准编码（所有的代码需要满足编程小组设计的系统隐喻）\n\n## XP测试 ##\n\n>为满足XP方法的流程和思想，XP测试强调连续测试。主要由两种类型的测试组成：**单元测试**和**验收测试**。\n\n### XP单元测试 ###\n\n单元测试是XP测试采用的主要测试方法，具有两条规则：\n\n1.所有的代码模块在编码开始前必须设计好单元测试用例（最主要的优点在于可以更好理解程序需求，排除混淆）\n\n2.产品发布之前所有的代码模块必须通过单元测试\n\n为了迎合项目进度，单元测试通常要用自动化测试套件来减轻单元测试负担，测试套件可以生成测试报告并对程序中出现的缺陷进行分类，帮助修复bug。\n\n### XP验收测试 ###\n\n>验收测试是判断应用程序是否满足功能性和易用性及其他需求，在设计阶段，开发人员和客户设计验收测试，由客户执行。\n\n验收测试需注意以下几点：\n\n- 同单元测试一样，验收测试也可是自动化的。测试内容为计算/数据等，可用自动化测试；当测试内容为界面布局和颜色等，测试应该是非自动化的。\n- 与单元测试相同，验收测试过程中发现多个bug时，应对其进行优先级排序，每次bug修正后都要重新执行验收测试。所以验收测试也算是一种回归测试。\n\n\n## 一个完整XP项目的运作流程 ##\n\n下表给出了一个完整XP项目应进行的流程：\n\n步骤     | 内容\n-------- | --- \nStep1 | 程序员与客户进行产品需求分析会议，决定产品使用场景\nStep2 | 编程小组进行内部会议，将需求分解为独立的任务，并估计每个任务所需要的时间（StoryPoint）\nStep3    | 程序员向客户提交任务清单，并要求客户对任务清单进行优先级排序\nStep4  | 编程小组根据程序员具备的能力，将任务分配给对应结对程序员\nStep5  | 每对程序员按照程序需求和规格说明，编写相应任务的单元测试用例\nStep6  | 每对程序员编写完成通过其单元测试用例的任务代码，期间不断对代码进行修改和重测，并对代码库进行整合和集成\nStep7  | 编程小组发布应用程序的一个预览版本，由客户进行验收测试，并通过修改缺陷不断进行回归测试\nStep8  | 程序员在验收测试成功的基础上发布产品版本\n\n其他工作：程序员根据最新经验更新对客户需求的时间估计方式。\n\n##敏捷开发学习网站##\n\n[Scrum中文网](http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1)\n[Scrum指南](https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Simplified.pdf#zoom=100)\n","source":"_posts/敏捷开发与测试.md","raw":"---\ntitle: 敏捷开发与测试\ndate: 2018-03-12 16:14:48\nupdate: 2018-03-12 16:14:48\ntags: [敏捷测试,极限编程]\ncategories: 学习小记\ncopyright: true\ntop:\n---\n\n啥是敏捷，敏捷是啥？\n\n<!-- more -->\n\n先来首Music:\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=400581295&auto=1&height=66\"></iframe>\n\n# 与“敏捷开发”的初次接触 #\n\n开始接触到“敏捷”这个概念，是在公司实习的时候，因为所在项目组实行的是敏捷开发。后来又读了几本关于敏捷测试的书籍（软件测试的艺术第三版—Chapter9），有了更深入的理解。所以本文主要是博主的实习经历总结和读书笔记。\n\n\n----------\n\n>接下来我将从3个方面：What?（什么是敏捷开发）&Why（为什么要实行敏捷开发）&How（如何实施）来谈谈我对敏捷软件开发模式的理解。\n\n# What? #\n\n## 敏捷开发 ##\n简单来说，敏捷开发是一个**以用户为中心、客户需求为导向**的开发过程。强调客户合作、响应需求变化。是一种**迭代式、增量式**的开发模式。主要有以下特点：\n\n- 依赖客户参与\n- 测试驱动开发（TDD）\n- 开发周期短\n\n## 敏捷测试 ##\n对应敏捷开发模式，敏捷测试要求每个人都参与到测试过程中，所以需要团队人员之间进行大量的沟通与协作。\n\n- 客户：定义用例和程序属性参与验收测试\n- 开发和测试：共同打造可以进行功能自动化的测试配件\n\n与传统测试过程相比，敏捷测试主要有以下特征：\n\n- 测试并不是一个独立的阶段，而是和开发过程紧密联系并**驱动开发**（TDD）。\n- 开发者先创建**单元测试**用例（失败验证测试），然后实现软件单元代码。\n- 敏捷测试依赖于**自动化测试**。\n- 测试者要通过持续的测试反馈推动项目前行，并**帮助开发者修复bug**。\n\n\n----------\n# Why? #\n\n>与传统软件开发模式相比，敏捷开发把客户的参与作为关键环节。这样引入了灵活性，提高客户满意度。\n\n如今的客户总是需要能立即发布的高质量应用产品，使得传统开发模式不能适应这种激烈的市场竞争环境。所以大多数企业更青睐像敏捷开发一般，轻量化、快速的开发方法。\n\n----------\n# How? #\n\n事实上，敏捷开发方法有很多种，比如：功能驱动开发（FDD）、开放统一过程等等。但最流行的是**极限编程（XP）**开发方法和**Scrum（进度跟踪）**项目管理方法。\n\n>**XP**是一种迭代式、增量式的开发模式，非常强调单元测试和验收测试，是现在最著名的敏捷方法。\n>**Scrum**是一种迭代式、增量式的项目管理方法，适用于所有的敏捷方法，用来度量开发速度和进度。两者相辅相成，形成了现今最流行的敏捷开发模式。\n\n## XP编程 ##\n\n面向对象的编程语言如Java/C#，都含有全功能的API，所以可以利用其迅速实现大型复杂应用。但正因如此，应用程序的质量经常得不到保证。\n\n>XP编程的目的就是**短时间**开发**高质量**的应用程序。所以，XP方法将主要精力集中在测试上，在产品设计阶段之后，必须首先生成单元测试用例，然后才编写代码通过测试。\n\nXP开发模型用12个核心实践来驱动该过程：\n\n- NO.1：需求分析（开发、客户、产品均参与）\n- NO.2：小规模、递增发布（增加实在/可增值的新功能，频繁发布新版本）\n- NO.3：系统隐喻（编程小组确认开发规则）\n- NO.4：简要设计（实现简要设计，通过单元测试，不需重复设计，只要不停实现）\n- NO.5：连续测试（编写模块之前先生成单元测试用例，模块在通过单元测试后才算完成，程序在通过所有单元测试和验收测试后才算结束）\n- NO.6：重构（清理调整代码库，任何重构之后需重新进行所有单元测试）\n- NO.7：结对编程（两位程序员在同一台机器协同开发代码库，便于对代码实时检查，提高缺陷发生纠正率）\n- NO.8：代码的集体所有权（所有代码归全体程序员所有，不存在某一个程序员只开发某一个代码库）\n- NO.9：持续集成（变更后的代码在通过单元测试之后将其集成到代码库中）\n- NO.10：每周工作40小时（不允许加班，如果每周都全力工作了40个小时，就不需要加班，在版本发布的前一周例外）\n- NO.11：客户在现场（编程小组可以随时与客户沟通）\n- NO.12：按标准编码（所有的代码需要满足编程小组设计的系统隐喻）\n\n## XP测试 ##\n\n>为满足XP方法的流程和思想，XP测试强调连续测试。主要由两种类型的测试组成：**单元测试**和**验收测试**。\n\n### XP单元测试 ###\n\n单元测试是XP测试采用的主要测试方法，具有两条规则：\n\n1.所有的代码模块在编码开始前必须设计好单元测试用例（最主要的优点在于可以更好理解程序需求，排除混淆）\n\n2.产品发布之前所有的代码模块必须通过单元测试\n\n为了迎合项目进度，单元测试通常要用自动化测试套件来减轻单元测试负担，测试套件可以生成测试报告并对程序中出现的缺陷进行分类，帮助修复bug。\n\n### XP验收测试 ###\n\n>验收测试是判断应用程序是否满足功能性和易用性及其他需求，在设计阶段，开发人员和客户设计验收测试，由客户执行。\n\n验收测试需注意以下几点：\n\n- 同单元测试一样，验收测试也可是自动化的。测试内容为计算/数据等，可用自动化测试；当测试内容为界面布局和颜色等，测试应该是非自动化的。\n- 与单元测试相同，验收测试过程中发现多个bug时，应对其进行优先级排序，每次bug修正后都要重新执行验收测试。所以验收测试也算是一种回归测试。\n\n\n## 一个完整XP项目的运作流程 ##\n\n下表给出了一个完整XP项目应进行的流程：\n\n步骤     | 内容\n-------- | --- \nStep1 | 程序员与客户进行产品需求分析会议，决定产品使用场景\nStep2 | 编程小组进行内部会议，将需求分解为独立的任务，并估计每个任务所需要的时间（StoryPoint）\nStep3    | 程序员向客户提交任务清单，并要求客户对任务清单进行优先级排序\nStep4  | 编程小组根据程序员具备的能力，将任务分配给对应结对程序员\nStep5  | 每对程序员按照程序需求和规格说明，编写相应任务的单元测试用例\nStep6  | 每对程序员编写完成通过其单元测试用例的任务代码，期间不断对代码进行修改和重测，并对代码库进行整合和集成\nStep7  | 编程小组发布应用程序的一个预览版本，由客户进行验收测试，并通过修改缺陷不断进行回归测试\nStep8  | 程序员在验收测试成功的基础上发布产品版本\n\n其他工作：程序员根据最新经验更新对客户需求的时间估计方式。\n\n##敏捷开发学习网站##\n\n[Scrum中文网](http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1)\n[Scrum指南](https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Simplified.pdf#zoom=100)\n","slug":"敏捷开发与测试","published":1,"updated":"2019-05-16T08:25:03.172Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk98000df36322gakdwc","content":"<p>啥是敏捷，敏捷是啥？</p>\n<a id=\"more\"></a>\n<p>先来首Music:</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=400581295&auto=1&height=66\"></iframe>\n\n<h1 id=\"与“敏捷开发”的初次接触\"><a href=\"#与“敏捷开发”的初次接触\" class=\"headerlink\" title=\"与“敏捷开发”的初次接触\"></a>与“敏捷开发”的初次接触</h1><p>开始接触到“敏捷”这个概念，是在公司实习的时候，因为所在项目组实行的是敏捷开发。后来又读了几本关于敏捷测试的书籍（软件测试的艺术第三版—Chapter9），有了更深入的理解。所以本文主要是博主的实习经历总结和读书笔记。</p>\n<hr>\n<blockquote>\n<p>接下来我将从3个方面：What?（什么是敏捷开发）&Why（为什么要实行敏捷开发）&How（如何实施）来谈谈我对敏捷软件开发模式的理解。</p>\n</blockquote>\n<h1 id=\"What\"><a href=\"#What\" class=\"headerlink\" title=\"What?\"></a>What?</h1><h2 id=\"敏捷开发\"><a href=\"#敏捷开发\" class=\"headerlink\" title=\"敏捷开发\"></a>敏捷开发</h2><p>简单来说，敏捷开发是一个<strong>以用户为中心、客户需求为导向</strong>的开发过程。强调客户合作、响应需求变化。是一种<strong>迭代式、增量式</strong>的开发模式。主要有以下特点：</p>\n<ul>\n<li>依赖客户参与</li>\n<li>测试驱动开发（TDD）</li>\n<li>开发周期短</li>\n</ul>\n<h2 id=\"敏捷测试\"><a href=\"#敏捷测试\" class=\"headerlink\" title=\"敏捷测试\"></a>敏捷测试</h2><p>对应敏捷开发模式，敏捷测试要求每个人都参与到测试过程中，所以需要团队人员之间进行大量的沟通与协作。</p>\n<ul>\n<li>客户：定义用例和程序属性参与验收测试</li>\n<li>开发和测试：共同打造可以进行功能自动化的测试配件</li>\n</ul>\n<p>与传统测试过程相比，敏捷测试主要有以下特征：</p>\n<ul>\n<li>测试并不是一个独立的阶段，而是和开发过程紧密联系并<strong>驱动开发</strong>（TDD）。</li>\n<li>开发者先创建<strong>单元测试</strong>用例（失败验证测试），然后实现软件单元代码。</li>\n<li>敏捷测试依赖于<strong>自动化测试</strong>。</li>\n<li>测试者要通过持续的测试反馈推动项目前行，并<strong>帮助开发者修复bug</strong>。</li>\n</ul>\n<hr>\n<h1 id=\"Why\"><a href=\"#Why\" class=\"headerlink\" title=\"Why?\"></a>Why?</h1><blockquote>\n<p>与传统软件开发模式相比，敏捷开发把客户的参与作为关键环节。这样引入了灵活性，提高客户满意度。</p>\n</blockquote>\n<p>如今的客户总是需要能立即发布的高质量应用产品，使得传统开发模式不能适应这种激烈的市场竞争环境。所以大多数企业更青睐像敏捷开发一般，轻量化、快速的开发方法。</p>\n<hr>\n<h1 id=\"How\"><a href=\"#How\" class=\"headerlink\" title=\"How?\"></a>How?</h1><p>事实上，敏捷开发方法有很多种，比如：功能驱动开发（FDD）、开放统一过程等等。但最流行的是<strong>极限编程（XP）</strong>开发方法和<strong>Scrum（进度跟踪）</strong>项目管理方法。</p>\n<blockquote>\n<p><strong>XP</strong>是一种迭代式、增量式的开发模式，非常强调单元测试和验收测试，是现在最著名的敏捷方法。<br><strong>Scrum</strong>是一种迭代式、增量式的项目管理方法，适用于所有的敏捷方法，用来度量开发速度和进度。两者相辅相成，形成了现今最流行的敏捷开发模式。</p>\n</blockquote>\n<h2 id=\"XP编程\"><a href=\"#XP编程\" class=\"headerlink\" title=\"XP编程\"></a>XP编程</h2><p>面向对象的编程语言如Java/C#，都含有全功能的API，所以可以利用其迅速实现大型复杂应用。但正因如此，应用程序的质量经常得不到保证。</p>\n<blockquote>\n<p>XP编程的目的就是<strong>短时间</strong>开发<strong>高质量</strong>的应用程序。所以，XP方法将主要精力集中在测试上，在产品设计阶段之后，必须首先生成单元测试用例，然后才编写代码通过测试。</p>\n</blockquote>\n<p>XP开发模型用12个核心实践来驱动该过程：</p>\n<ul>\n<li>NO.1：需求分析（开发、客户、产品均参与）</li>\n<li>NO.2：小规模、递增发布（增加实在/可增值的新功能，频繁发布新版本）</li>\n<li>NO.3：系统隐喻（编程小组确认开发规则）</li>\n<li>NO.4：简要设计（实现简要设计，通过单元测试，不需重复设计，只要不停实现）</li>\n<li>NO.5：连续测试（编写模块之前先生成单元测试用例，模块在通过单元测试后才算完成，程序在通过所有单元测试和验收测试后才算结束）</li>\n<li>NO.6：重构（清理调整代码库，任何重构之后需重新进行所有单元测试）</li>\n<li>NO.7：结对编程（两位程序员在同一台机器协同开发代码库，便于对代码实时检查，提高缺陷发生纠正率）</li>\n<li>NO.8：代码的集体所有权（所有代码归全体程序员所有，不存在某一个程序员只开发某一个代码库）</li>\n<li>NO.9：持续集成（变更后的代码在通过单元测试之后将其集成到代码库中）</li>\n<li>NO.10：每周工作40小时（不允许加班，如果每周都全力工作了40个小时，就不需要加班，在版本发布的前一周例外）</li>\n<li>NO.11：客户在现场（编程小组可以随时与客户沟通）</li>\n<li>NO.12：按标准编码（所有的代码需要满足编程小组设计的系统隐喻）</li>\n</ul>\n<h2 id=\"XP测试\"><a href=\"#XP测试\" class=\"headerlink\" title=\"XP测试\"></a>XP测试</h2><blockquote>\n<p>为满足XP方法的流程和思想，XP测试强调连续测试。主要由两种类型的测试组成：<strong>单元测试</strong>和<strong>验收测试</strong>。</p>\n</blockquote>\n<h3 id=\"XP单元测试\"><a href=\"#XP单元测试\" class=\"headerlink\" title=\"XP单元测试\"></a>XP单元测试</h3><p>单元测试是XP测试采用的主要测试方法，具有两条规则：</p>\n<p>1.所有的代码模块在编码开始前必须设计好单元测试用例（最主要的优点在于可以更好理解程序需求，排除混淆）</p>\n<p>2.产品发布之前所有的代码模块必须通过单元测试</p>\n<p>为了迎合项目进度，单元测试通常要用自动化测试套件来减轻单元测试负担，测试套件可以生成测试报告并对程序中出现的缺陷进行分类，帮助修复bug。</p>\n<h3 id=\"XP验收测试\"><a href=\"#XP验收测试\" class=\"headerlink\" title=\"XP验收测试\"></a>XP验收测试</h3><blockquote>\n<p>验收测试是判断应用程序是否满足功能性和易用性及其他需求，在设计阶段，开发人员和客户设计验收测试，由客户执行。</p>\n</blockquote>\n<p>验收测试需注意以下几点：</p>\n<ul>\n<li>同单元测试一样，验收测试也可是自动化的。测试内容为计算/数据等，可用自动化测试；当测试内容为界面布局和颜色等，测试应该是非自动化的。</li>\n<li>与单元测试相同，验收测试过程中发现多个bug时，应对其进行优先级排序，每次bug修正后都要重新执行验收测试。所以验收测试也算是一种回归测试。</li>\n</ul>\n<h2 id=\"一个完整XP项目的运作流程\"><a href=\"#一个完整XP项目的运作流程\" class=\"headerlink\" title=\"一个完整XP项目的运作流程\"></a>一个完整XP项目的运作流程</h2><p>下表给出了一个完整XP项目应进行的流程：</p>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Step1</td>\n<td>程序员与客户进行产品需求分析会议，决定产品使用场景</td>\n</tr>\n<tr>\n<td>Step2</td>\n<td>编程小组进行内部会议，将需求分解为独立的任务，并估计每个任务所需要的时间（StoryPoint）</td>\n</tr>\n<tr>\n<td>Step3</td>\n<td>程序员向客户提交任务清单，并要求客户对任务清单进行优先级排序</td>\n</tr>\n<tr>\n<td>Step4</td>\n<td>编程小组根据程序员具备的能力，将任务分配给对应结对程序员</td>\n</tr>\n<tr>\n<td>Step5</td>\n<td>每对程序员按照程序需求和规格说明，编写相应任务的单元测试用例</td>\n</tr>\n<tr>\n<td>Step6</td>\n<td>每对程序员编写完成通过其单元测试用例的任务代码，期间不断对代码进行修改和重测，并对代码库进行整合和集成</td>\n</tr>\n<tr>\n<td>Step7</td>\n<td>编程小组发布应用程序的一个预览版本，由客户进行验收测试，并通过修改缺陷不断进行回归测试</td>\n</tr>\n<tr>\n<td>Step8</td>\n<td>程序员在验收测试成功的基础上发布产品版本</td>\n</tr>\n</tbody>\n</table>\n<p>其他工作：程序员根据最新经验更新对客户需求的时间估计方式。</p>\n<p>##敏捷开发学习网站##</p>\n<p><a href=\"http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1\" target=\"_blank\" rel=\"noopener\">Scrum中文网</a><br><a href=\"https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Simplified.pdf#zoom=100\" target=\"_blank\" rel=\"noopener\">Scrum指南</a></p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":2455,"excerpt":"<p>啥是敏捷，敏捷是啥？</p>","more":"<p>先来首Music:</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=400581295&auto=1&height=66\"></iframe>\n\n<h1 id=\"与“敏捷开发”的初次接触\"><a href=\"#与“敏捷开发”的初次接触\" class=\"headerlink\" title=\"与“敏捷开发”的初次接触\"></a>与“敏捷开发”的初次接触</h1><p>开始接触到“敏捷”这个概念，是在公司实习的时候，因为所在项目组实行的是敏捷开发。后来又读了几本关于敏捷测试的书籍（软件测试的艺术第三版—Chapter9），有了更深入的理解。所以本文主要是博主的实习经历总结和读书笔记。</p>\n<hr>\n<blockquote>\n<p>接下来我将从3个方面：What?（什么是敏捷开发）&amp;Why（为什么要实行敏捷开发）&amp;How（如何实施）来谈谈我对敏捷软件开发模式的理解。</p>\n</blockquote>\n<h1 id=\"What\"><a href=\"#What\" class=\"headerlink\" title=\"What?\"></a>What?</h1><h2 id=\"敏捷开发\"><a href=\"#敏捷开发\" class=\"headerlink\" title=\"敏捷开发\"></a>敏捷开发</h2><p>简单来说，敏捷开发是一个<strong>以用户为中心、客户需求为导向</strong>的开发过程。强调客户合作、响应需求变化。是一种<strong>迭代式、增量式</strong>的开发模式。主要有以下特点：</p>\n<ul>\n<li>依赖客户参与</li>\n<li>测试驱动开发（TDD）</li>\n<li>开发周期短</li>\n</ul>\n<h2 id=\"敏捷测试\"><a href=\"#敏捷测试\" class=\"headerlink\" title=\"敏捷测试\"></a>敏捷测试</h2><p>对应敏捷开发模式，敏捷测试要求每个人都参与到测试过程中，所以需要团队人员之间进行大量的沟通与协作。</p>\n<ul>\n<li>客户：定义用例和程序属性参与验收测试</li>\n<li>开发和测试：共同打造可以进行功能自动化的测试配件</li>\n</ul>\n<p>与传统测试过程相比，敏捷测试主要有以下特征：</p>\n<ul>\n<li>测试并不是一个独立的阶段，而是和开发过程紧密联系并<strong>驱动开发</strong>（TDD）。</li>\n<li>开发者先创建<strong>单元测试</strong>用例（失败验证测试），然后实现软件单元代码。</li>\n<li>敏捷测试依赖于<strong>自动化测试</strong>。</li>\n<li>测试者要通过持续的测试反馈推动项目前行，并<strong>帮助开发者修复bug</strong>。</li>\n</ul>\n<hr>\n<h1 id=\"Why\"><a href=\"#Why\" class=\"headerlink\" title=\"Why?\"></a>Why?</h1><blockquote>\n<p>与传统软件开发模式相比，敏捷开发把客户的参与作为关键环节。这样引入了灵活性，提高客户满意度。</p>\n</blockquote>\n<p>如今的客户总是需要能立即发布的高质量应用产品，使得传统开发模式不能适应这种激烈的市场竞争环境。所以大多数企业更青睐像敏捷开发一般，轻量化、快速的开发方法。</p>\n<hr>\n<h1 id=\"How\"><a href=\"#How\" class=\"headerlink\" title=\"How?\"></a>How?</h1><p>事实上，敏捷开发方法有很多种，比如：功能驱动开发（FDD）、开放统一过程等等。但最流行的是<strong>极限编程（XP）</strong>开发方法和<strong>Scrum（进度跟踪）</strong>项目管理方法。</p>\n<blockquote>\n<p><strong>XP</strong>是一种迭代式、增量式的开发模式，非常强调单元测试和验收测试，是现在最著名的敏捷方法。<br><strong>Scrum</strong>是一种迭代式、增量式的项目管理方法，适用于所有的敏捷方法，用来度量开发速度和进度。两者相辅相成，形成了现今最流行的敏捷开发模式。</p>\n</blockquote>\n<h2 id=\"XP编程\"><a href=\"#XP编程\" class=\"headerlink\" title=\"XP编程\"></a>XP编程</h2><p>面向对象的编程语言如Java/C#，都含有全功能的API，所以可以利用其迅速实现大型复杂应用。但正因如此，应用程序的质量经常得不到保证。</p>\n<blockquote>\n<p>XP编程的目的就是<strong>短时间</strong>开发<strong>高质量</strong>的应用程序。所以，XP方法将主要精力集中在测试上，在产品设计阶段之后，必须首先生成单元测试用例，然后才编写代码通过测试。</p>\n</blockquote>\n<p>XP开发模型用12个核心实践来驱动该过程：</p>\n<ul>\n<li>NO.1：需求分析（开发、客户、产品均参与）</li>\n<li>NO.2：小规模、递增发布（增加实在/可增值的新功能，频繁发布新版本）</li>\n<li>NO.3：系统隐喻（编程小组确认开发规则）</li>\n<li>NO.4：简要设计（实现简要设计，通过单元测试，不需重复设计，只要不停实现）</li>\n<li>NO.5：连续测试（编写模块之前先生成单元测试用例，模块在通过单元测试后才算完成，程序在通过所有单元测试和验收测试后才算结束）</li>\n<li>NO.6：重构（清理调整代码库，任何重构之后需重新进行所有单元测试）</li>\n<li>NO.7：结对编程（两位程序员在同一台机器协同开发代码库，便于对代码实时检查，提高缺陷发生纠正率）</li>\n<li>NO.8：代码的集体所有权（所有代码归全体程序员所有，不存在某一个程序员只开发某一个代码库）</li>\n<li>NO.9：持续集成（变更后的代码在通过单元测试之后将其集成到代码库中）</li>\n<li>NO.10：每周工作40小时（不允许加班，如果每周都全力工作了40个小时，就不需要加班，在版本发布的前一周例外）</li>\n<li>NO.11：客户在现场（编程小组可以随时与客户沟通）</li>\n<li>NO.12：按标准编码（所有的代码需要满足编程小组设计的系统隐喻）</li>\n</ul>\n<h2 id=\"XP测试\"><a href=\"#XP测试\" class=\"headerlink\" title=\"XP测试\"></a>XP测试</h2><blockquote>\n<p>为满足XP方法的流程和思想，XP测试强调连续测试。主要由两种类型的测试组成：<strong>单元测试</strong>和<strong>验收测试</strong>。</p>\n</blockquote>\n<h3 id=\"XP单元测试\"><a href=\"#XP单元测试\" class=\"headerlink\" title=\"XP单元测试\"></a>XP单元测试</h3><p>单元测试是XP测试采用的主要测试方法，具有两条规则：</p>\n<p>1.所有的代码模块在编码开始前必须设计好单元测试用例（最主要的优点在于可以更好理解程序需求，排除混淆）</p>\n<p>2.产品发布之前所有的代码模块必须通过单元测试</p>\n<p>为了迎合项目进度，单元测试通常要用自动化测试套件来减轻单元测试负担，测试套件可以生成测试报告并对程序中出现的缺陷进行分类，帮助修复bug。</p>\n<h3 id=\"XP验收测试\"><a href=\"#XP验收测试\" class=\"headerlink\" title=\"XP验收测试\"></a>XP验收测试</h3><blockquote>\n<p>验收测试是判断应用程序是否满足功能性和易用性及其他需求，在设计阶段，开发人员和客户设计验收测试，由客户执行。</p>\n</blockquote>\n<p>验收测试需注意以下几点：</p>\n<ul>\n<li>同单元测试一样，验收测试也可是自动化的。测试内容为计算/数据等，可用自动化测试；当测试内容为界面布局和颜色等，测试应该是非自动化的。</li>\n<li>与单元测试相同，验收测试过程中发现多个bug时，应对其进行优先级排序，每次bug修正后都要重新执行验收测试。所以验收测试也算是一种回归测试。</li>\n</ul>\n<h2 id=\"一个完整XP项目的运作流程\"><a href=\"#一个完整XP项目的运作流程\" class=\"headerlink\" title=\"一个完整XP项目的运作流程\"></a>一个完整XP项目的运作流程</h2><p>下表给出了一个完整XP项目应进行的流程：</p>\n<table>\n<thead>\n<tr>\n<th>步骤</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Step1</td>\n<td>程序员与客户进行产品需求分析会议，决定产品使用场景</td>\n</tr>\n<tr>\n<td>Step2</td>\n<td>编程小组进行内部会议，将需求分解为独立的任务，并估计每个任务所需要的时间（StoryPoint）</td>\n</tr>\n<tr>\n<td>Step3</td>\n<td>程序员向客户提交任务清单，并要求客户对任务清单进行优先级排序</td>\n</tr>\n<tr>\n<td>Step4</td>\n<td>编程小组根据程序员具备的能力，将任务分配给对应结对程序员</td>\n</tr>\n<tr>\n<td>Step5</td>\n<td>每对程序员按照程序需求和规格说明，编写相应任务的单元测试用例</td>\n</tr>\n<tr>\n<td>Step6</td>\n<td>每对程序员编写完成通过其单元测试用例的任务代码，期间不断对代码进行修改和重测，并对代码库进行整合和集成</td>\n</tr>\n<tr>\n<td>Step7</td>\n<td>编程小组发布应用程序的一个预览版本，由客户进行验收测试，并通过修改缺陷不断进行回归测试</td>\n</tr>\n<tr>\n<td>Step8</td>\n<td>程序员在验收测试成功的基础上发布产品版本</td>\n</tr>\n</tbody>\n</table>\n<p>其他工作：程序员根据最新经验更新对客户需求的时间估计方式。</p>\n<p>##敏捷开发学习网站##</p>\n<p><a href=\"http://www.scrumcn.com/agile/scrum-knowledge-library/scrum.html#tab-id-1\" target=\"_blank\" rel=\"noopener\">Scrum中文网</a><br><a href=\"https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-Chinese-Simplified.pdf#zoom=100\" target=\"_blank\" rel=\"noopener\">Scrum指南</a></p>"},{"title":"未来是星辰大海_Part2","date":"2018-04-09T05:22:15.000Z","update":"2018-04-09T05:22:15.000Z","copyright":null,"top":null,"_content":"\n\n记录一下博主小半年的心路历程。\n\n<!-- more -->\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=475207921&auto=1&height=66\"></iframe>\n\n## Part1 尘埃落定(2017.10-2017.11) ##\n\n自从去年9月份拿到第一个offer后，就直接签了，后来也没有再找过。当时的想法是找到一个还不错的就行，毕竟事少离家近嘛。于是安排好自己毕业前的计划，开始了在宿舍颓废的生活，期间将自己的游戏账号打到了钻石，吃饭靠舍友投喂。。\n\n两个月后，按照计划，我怀着紧张中带着一丝小激动的心情出发去公司实习。\n\n\n## Part2 心态有点崩(2017.12-2018.02) ##\n\nemmm...刚开始实习的时候，也没啥感觉。毕竟需要学习的东西有很多，每天下来也能收获不少东西。\n\n但是时间长了，问题就开始出现了。\n\n无脑病态的加班、毫无技术难度可言的工作、传话筒一般的工作感受让我觉得有些幻灭。\n\n其实对于软件测试这个岗位呢，我也知道刚开始一般都是功能（黑盒）测试，比较基础。我也是愿意从基础打起的。但我想学习更多的测试技术，利用一些工具来提高工作效率。这样能提高自己以后的竞争力和学习能力。但这些，在我两个多月的实习工作中，没有感受到。\n\n此外，繁琐的管理制度和考核流程也在考验我的耐性。这样的工作环境无法达到我“还不错”的标准，如果长期这样下去，我可能连Hello World都不会写了。无脑病态的加班更是占用了我的个人时间，基本上失去了利用空闲时间提升自己的可能性。\n\n总的来说，这绝对不是我要的生活，我需要重新开始找工作（论早点实习的重要性）。\n\n## Part3 重新开始(2018.03) ##\n\n过年那会，我就开始寻找目标。经过实习之后，我更加明确自己想要什么，完善了自己的简历。所以很快就确定了目标。\n\n开学之后，我参加了宣讲会。提问环节HR说测试这个岗位在我所在的城市只招5个人。这意味着我要跟好多985/211的学生甚至研究生竞争，作为一个普通一本的本科生，在学历上，我可以说是毫无胜算。\n\n不过我还是想尽力一试，毕竟这是我还有应届生光环的最后一次找工作机会。而且他们公司的工作理念很吸引我，岗位需求描述也和我很贴合，我确实很想成为他们的一员。\n\n- 笔试\n\n宣讲之后的几天，他们公司提供了线上笔试题（全英文），我有4天时间去完成。处理完学校的杂事（学校真是一个让人又爱又恨的地方），我在图书馆泡了两天做完了笔试题（答案也是全英文），半张纸的题目我写了10张纸的答案。\n\n之后开始了几天的等待期，等待的过程是煎熬的。就在我怀疑自己要挂了的时候（是不是嫌弃我答案太长了/上传答案的时候我没有改文件名等等猜测），HR给我打了电话，让我去参加面试。感觉整个世界都晴朗了。\n\n- 面试\n\n在经过了精心的打扮（两天没洗头），一路畅通无阻（坐反了公交车到终点站才发现，最后叫了辆滴滴），心情舒畅（电梯里跟他们公司的外国小哥哥用英语尬聊了一分钟）之后，我到达了面试地点。没有我想象中的人山人海，因为那天只面试3个人。\n\n由于我非常缺乏面试经验（秋招只面试了一家拿到offer就签了，这是人生中第二次面试），所以对我而言面试的过程是漫长的，还是紧张的（两个面试官，一男一女）。坐在大会议室的我有一种任人宰割的感觉。。，在面试官的调节下（面试官很友好的），我渐渐没了紧张的感觉。在后边的面试中，做到了知无不言，言无不尽。还跟面试官聊起了人生和理想。整体感觉挺High的。就这样，原本只给我40分钟的面试时间，愣是聊了一个多小时。最后由于别人要在会议室开会，我们还是结束了面试。\n\n- offer\n\n在经过1天的等待后，HR给我发了口头offer，之后几天再去公司签了正式offer。\n\n没错，这家公司就是传说中的TW(ThoughtWorks)。\n\n## Part4 最后的规划(2018.04-2018.06) ##\n\n今天已经4月9号了，离毕业论文答辩还有两个月的时间。这两个月我需要闭关修炼，完成3件大事：\n\n- 做毕设\n- 完成TW毕业生入职前的线上培训学习并完成所有任务卡（所以后边也会发表一些技术相关的学习总结博客）\n- 拿到驾照\n\nemmm...有点理想主义，毕竟只有两个月，不过时间是挤出来的嘛，祝我好运。","source":"_posts/未来是星辰大海-Part2.md","raw":"---\ntitle: 未来是星辰大海_Part2\ndate: 2018-04-09 13:22:15\nupdate: 2018-04-09 13:22:15\ntags: 人生规划\ncategories: 生活随想\ncopyright:\ntop:\n---\n\n\n记录一下博主小半年的心路历程。\n\n<!-- more -->\n\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=475207921&auto=1&height=66\"></iframe>\n\n## Part1 尘埃落定(2017.10-2017.11) ##\n\n自从去年9月份拿到第一个offer后，就直接签了，后来也没有再找过。当时的想法是找到一个还不错的就行，毕竟事少离家近嘛。于是安排好自己毕业前的计划，开始了在宿舍颓废的生活，期间将自己的游戏账号打到了钻石，吃饭靠舍友投喂。。\n\n两个月后，按照计划，我怀着紧张中带着一丝小激动的心情出发去公司实习。\n\n\n## Part2 心态有点崩(2017.12-2018.02) ##\n\nemmm...刚开始实习的时候，也没啥感觉。毕竟需要学习的东西有很多，每天下来也能收获不少东西。\n\n但是时间长了，问题就开始出现了。\n\n无脑病态的加班、毫无技术难度可言的工作、传话筒一般的工作感受让我觉得有些幻灭。\n\n其实对于软件测试这个岗位呢，我也知道刚开始一般都是功能（黑盒）测试，比较基础。我也是愿意从基础打起的。但我想学习更多的测试技术，利用一些工具来提高工作效率。这样能提高自己以后的竞争力和学习能力。但这些，在我两个多月的实习工作中，没有感受到。\n\n此外，繁琐的管理制度和考核流程也在考验我的耐性。这样的工作环境无法达到我“还不错”的标准，如果长期这样下去，我可能连Hello World都不会写了。无脑病态的加班更是占用了我的个人时间，基本上失去了利用空闲时间提升自己的可能性。\n\n总的来说，这绝对不是我要的生活，我需要重新开始找工作（论早点实习的重要性）。\n\n## Part3 重新开始(2018.03) ##\n\n过年那会，我就开始寻找目标。经过实习之后，我更加明确自己想要什么，完善了自己的简历。所以很快就确定了目标。\n\n开学之后，我参加了宣讲会。提问环节HR说测试这个岗位在我所在的城市只招5个人。这意味着我要跟好多985/211的学生甚至研究生竞争，作为一个普通一本的本科生，在学历上，我可以说是毫无胜算。\n\n不过我还是想尽力一试，毕竟这是我还有应届生光环的最后一次找工作机会。而且他们公司的工作理念很吸引我，岗位需求描述也和我很贴合，我确实很想成为他们的一员。\n\n- 笔试\n\n宣讲之后的几天，他们公司提供了线上笔试题（全英文），我有4天时间去完成。处理完学校的杂事（学校真是一个让人又爱又恨的地方），我在图书馆泡了两天做完了笔试题（答案也是全英文），半张纸的题目我写了10张纸的答案。\n\n之后开始了几天的等待期，等待的过程是煎熬的。就在我怀疑自己要挂了的时候（是不是嫌弃我答案太长了/上传答案的时候我没有改文件名等等猜测），HR给我打了电话，让我去参加面试。感觉整个世界都晴朗了。\n\n- 面试\n\n在经过了精心的打扮（两天没洗头），一路畅通无阻（坐反了公交车到终点站才发现，最后叫了辆滴滴），心情舒畅（电梯里跟他们公司的外国小哥哥用英语尬聊了一分钟）之后，我到达了面试地点。没有我想象中的人山人海，因为那天只面试3个人。\n\n由于我非常缺乏面试经验（秋招只面试了一家拿到offer就签了，这是人生中第二次面试），所以对我而言面试的过程是漫长的，还是紧张的（两个面试官，一男一女）。坐在大会议室的我有一种任人宰割的感觉。。，在面试官的调节下（面试官很友好的），我渐渐没了紧张的感觉。在后边的面试中，做到了知无不言，言无不尽。还跟面试官聊起了人生和理想。整体感觉挺High的。就这样，原本只给我40分钟的面试时间，愣是聊了一个多小时。最后由于别人要在会议室开会，我们还是结束了面试。\n\n- offer\n\n在经过1天的等待后，HR给我发了口头offer，之后几天再去公司签了正式offer。\n\n没错，这家公司就是传说中的TW(ThoughtWorks)。\n\n## Part4 最后的规划(2018.04-2018.06) ##\n\n今天已经4月9号了，离毕业论文答辩还有两个月的时间。这两个月我需要闭关修炼，完成3件大事：\n\n- 做毕设\n- 完成TW毕业生入职前的线上培训学习并完成所有任务卡（所以后边也会发表一些技术相关的学习总结博客）\n- 拿到驾照\n\nemmm...有点理想主义，毕竟只有两个月，不过时间是挤出来的嘛，祝我好运。","slug":"未来是星辰大海-Part2","published":1,"updated":"2019-05-16T08:25:26.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk9a000hf363haq3gap1","content":"<p>记录一下博主小半年的心路历程。</p>\n<a id=\"more\"></a>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=475207921&auto=1&height=66\"></iframe>\n\n<h2 id=\"Part1-尘埃落定-2017-10-2017-11\"><a href=\"#Part1-尘埃落定-2017-10-2017-11\" class=\"headerlink\" title=\"Part1 尘埃落定(2017.10-2017.11)\"></a>Part1 尘埃落定(2017.10-2017.11)</h2><p>自从去年9月份拿到第一个offer后，就直接签了，后来也没有再找过。当时的想法是找到一个还不错的就行，毕竟事少离家近嘛。于是安排好自己毕业前的计划，开始了在宿舍颓废的生活，期间将自己的游戏账号打到了钻石，吃饭靠舍友投喂。。</p>\n<p>两个月后，按照计划，我怀着紧张中带着一丝小激动的心情出发去公司实习。</p>\n<h2 id=\"Part2-心态有点崩-2017-12-2018-02\"><a href=\"#Part2-心态有点崩-2017-12-2018-02\" class=\"headerlink\" title=\"Part2 心态有点崩(2017.12-2018.02)\"></a>Part2 心态有点崩(2017.12-2018.02)</h2><p>emmm…刚开始实习的时候，也没啥感觉。毕竟需要学习的东西有很多，每天下来也能收获不少东西。</p>\n<p>但是时间长了，问题就开始出现了。</p>\n<p>无脑病态的加班、毫无技术难度可言的工作、传话筒一般的工作感受让我觉得有些幻灭。</p>\n<p>其实对于软件测试这个岗位呢，我也知道刚开始一般都是功能（黑盒）测试，比较基础。我也是愿意从基础打起的。但我想学习更多的测试技术，利用一些工具来提高工作效率。这样能提高自己以后的竞争力和学习能力。但这些，在我两个多月的实习工作中，没有感受到。</p>\n<p>此外，繁琐的管理制度和考核流程也在考验我的耐性。这样的工作环境无法达到我“还不错”的标准，如果长期这样下去，我可能连Hello World都不会写了。无脑病态的加班更是占用了我的个人时间，基本上失去了利用空闲时间提升自己的可能性。</p>\n<p>总的来说，这绝对不是我要的生活，我需要重新开始找工作（论早点实习的重要性）。</p>\n<h2 id=\"Part3-重新开始-2018-03\"><a href=\"#Part3-重新开始-2018-03\" class=\"headerlink\" title=\"Part3 重新开始(2018.03)\"></a>Part3 重新开始(2018.03)</h2><p>过年那会，我就开始寻找目标。经过实习之后，我更加明确自己想要什么，完善了自己的简历。所以很快就确定了目标。</p>\n<p>开学之后，我参加了宣讲会。提问环节HR说测试这个岗位在我所在的城市只招5个人。这意味着我要跟好多985/211的学生甚至研究生竞争，作为一个普通一本的本科生，在学历上，我可以说是毫无胜算。</p>\n<p>不过我还是想尽力一试，毕竟这是我还有应届生光环的最后一次找工作机会。而且他们公司的工作理念很吸引我，岗位需求描述也和我很贴合，我确实很想成为他们的一员。</p>\n<ul>\n<li>笔试</li>\n</ul>\n<p>宣讲之后的几天，他们公司提供了线上笔试题（全英文），我有4天时间去完成。处理完学校的杂事（学校真是一个让人又爱又恨的地方），我在图书馆泡了两天做完了笔试题（答案也是全英文），半张纸的题目我写了10张纸的答案。</p>\n<p>之后开始了几天的等待期，等待的过程是煎熬的。就在我怀疑自己要挂了的时候（是不是嫌弃我答案太长了/上传答案的时候我没有改文件名等等猜测），HR给我打了电话，让我去参加面试。感觉整个世界都晴朗了。</p>\n<ul>\n<li>面试</li>\n</ul>\n<p>在经过了精心的打扮（两天没洗头），一路畅通无阻（坐反了公交车到终点站才发现，最后叫了辆滴滴），心情舒畅（电梯里跟他们公司的外国小哥哥用英语尬聊了一分钟）之后，我到达了面试地点。没有我想象中的人山人海，因为那天只面试3个人。</p>\n<p>由于我非常缺乏面试经验（秋招只面试了一家拿到offer就签了，这是人生中第二次面试），所以对我而言面试的过程是漫长的，还是紧张的（两个面试官，一男一女）。坐在大会议室的我有一种任人宰割的感觉。。，在面试官的调节下（面试官很友好的），我渐渐没了紧张的感觉。在后边的面试中，做到了知无不言，言无不尽。还跟面试官聊起了人生和理想。整体感觉挺High的。就这样，原本只给我40分钟的面试时间，愣是聊了一个多小时。最后由于别人要在会议室开会，我们还是结束了面试。</p>\n<ul>\n<li>offer</li>\n</ul>\n<p>在经过1天的等待后，HR给我发了口头offer，之后几天再去公司签了正式offer。</p>\n<p>没错，这家公司就是传说中的TW(ThoughtWorks)。</p>\n<h2 id=\"Part4-最后的规划-2018-04-2018-06\"><a href=\"#Part4-最后的规划-2018-04-2018-06\" class=\"headerlink\" title=\"Part4 最后的规划(2018.04-2018.06)\"></a>Part4 最后的规划(2018.04-2018.06)</h2><p>今天已经4月9号了，离毕业论文答辩还有两个月的时间。这两个月我需要闭关修炼，完成3件大事：</p>\n<ul>\n<li>做毕设</li>\n<li>完成TW毕业生入职前的线上培训学习并完成所有任务卡（所以后边也会发表一些技术相关的学习总结博客）</li>\n<li>拿到驾照</li>\n</ul>\n<p>emmm…有点理想主义，毕竟只有两个月，不过时间是挤出来的嘛，祝我好运。</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":1650,"excerpt":"<p>记录一下博主小半年的心路历程。</p>","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=475207921&auto=1&height=66\"></iframe>\n\n<h2 id=\"Part1-尘埃落定-2017-10-2017-11\"><a href=\"#Part1-尘埃落定-2017-10-2017-11\" class=\"headerlink\" title=\"Part1 尘埃落定(2017.10-2017.11)\"></a>Part1 尘埃落定(2017.10-2017.11)</h2><p>自从去年9月份拿到第一个offer后，就直接签了，后来也没有再找过。当时的想法是找到一个还不错的就行，毕竟事少离家近嘛。于是安排好自己毕业前的计划，开始了在宿舍颓废的生活，期间将自己的游戏账号打到了钻石，吃饭靠舍友投喂。。</p>\n<p>两个月后，按照计划，我怀着紧张中带着一丝小激动的心情出发去公司实习。</p>\n<h2 id=\"Part2-心态有点崩-2017-12-2018-02\"><a href=\"#Part2-心态有点崩-2017-12-2018-02\" class=\"headerlink\" title=\"Part2 心态有点崩(2017.12-2018.02)\"></a>Part2 心态有点崩(2017.12-2018.02)</h2><p>emmm…刚开始实习的时候，也没啥感觉。毕竟需要学习的东西有很多，每天下来也能收获不少东西。</p>\n<p>但是时间长了，问题就开始出现了。</p>\n<p>无脑病态的加班、毫无技术难度可言的工作、传话筒一般的工作感受让我觉得有些幻灭。</p>\n<p>其实对于软件测试这个岗位呢，我也知道刚开始一般都是功能（黑盒）测试，比较基础。我也是愿意从基础打起的。但我想学习更多的测试技术，利用一些工具来提高工作效率。这样能提高自己以后的竞争力和学习能力。但这些，在我两个多月的实习工作中，没有感受到。</p>\n<p>此外，繁琐的管理制度和考核流程也在考验我的耐性。这样的工作环境无法达到我“还不错”的标准，如果长期这样下去，我可能连Hello World都不会写了。无脑病态的加班更是占用了我的个人时间，基本上失去了利用空闲时间提升自己的可能性。</p>\n<p>总的来说，这绝对不是我要的生活，我需要重新开始找工作（论早点实习的重要性）。</p>\n<h2 id=\"Part3-重新开始-2018-03\"><a href=\"#Part3-重新开始-2018-03\" class=\"headerlink\" title=\"Part3 重新开始(2018.03)\"></a>Part3 重新开始(2018.03)</h2><p>过年那会，我就开始寻找目标。经过实习之后，我更加明确自己想要什么，完善了自己的简历。所以很快就确定了目标。</p>\n<p>开学之后，我参加了宣讲会。提问环节HR说测试这个岗位在我所在的城市只招5个人。这意味着我要跟好多985/211的学生甚至研究生竞争，作为一个普通一本的本科生，在学历上，我可以说是毫无胜算。</p>\n<p>不过我还是想尽力一试，毕竟这是我还有应届生光环的最后一次找工作机会。而且他们公司的工作理念很吸引我，岗位需求描述也和我很贴合，我确实很想成为他们的一员。</p>\n<ul>\n<li>笔试</li>\n</ul>\n<p>宣讲之后的几天，他们公司提供了线上笔试题（全英文），我有4天时间去完成。处理完学校的杂事（学校真是一个让人又爱又恨的地方），我在图书馆泡了两天做完了笔试题（答案也是全英文），半张纸的题目我写了10张纸的答案。</p>\n<p>之后开始了几天的等待期，等待的过程是煎熬的。就在我怀疑自己要挂了的时候（是不是嫌弃我答案太长了/上传答案的时候我没有改文件名等等猜测），HR给我打了电话，让我去参加面试。感觉整个世界都晴朗了。</p>\n<ul>\n<li>面试</li>\n</ul>\n<p>在经过了精心的打扮（两天没洗头），一路畅通无阻（坐反了公交车到终点站才发现，最后叫了辆滴滴），心情舒畅（电梯里跟他们公司的外国小哥哥用英语尬聊了一分钟）之后，我到达了面试地点。没有我想象中的人山人海，因为那天只面试3个人。</p>\n<p>由于我非常缺乏面试经验（秋招只面试了一家拿到offer就签了，这是人生中第二次面试），所以对我而言面试的过程是漫长的，还是紧张的（两个面试官，一男一女）。坐在大会议室的我有一种任人宰割的感觉。。，在面试官的调节下（面试官很友好的），我渐渐没了紧张的感觉。在后边的面试中，做到了知无不言，言无不尽。还跟面试官聊起了人生和理想。整体感觉挺High的。就这样，原本只给我40分钟的面试时间，愣是聊了一个多小时。最后由于别人要在会议室开会，我们还是结束了面试。</p>\n<ul>\n<li>offer</li>\n</ul>\n<p>在经过1天的等待后，HR给我发了口头offer，之后几天再去公司签了正式offer。</p>\n<p>没错，这家公司就是传说中的TW(ThoughtWorks)。</p>\n<h2 id=\"Part4-最后的规划-2018-04-2018-06\"><a href=\"#Part4-最后的规划-2018-04-2018-06\" class=\"headerlink\" title=\"Part4 最后的规划(2018.04-2018.06)\"></a>Part4 最后的规划(2018.04-2018.06)</h2><p>今天已经4月9号了，离毕业论文答辩还有两个月的时间。这两个月我需要闭关修炼，完成3件大事：</p>\n<ul>\n<li>做毕设</li>\n<li>完成TW毕业生入职前的线上培训学习并完成所有任务卡（所以后边也会发表一些技术相关的学习总结博客）</li>\n<li>拿到驾照</li>\n</ul>\n<p>emmm…有点理想主义，毕竟只有两个月，不过时间是挤出来的嘛，祝我好运。</p>"},{"title":"未来是星辰大海","date":"2017-10-13T12:01:46.000Z","update":"2017-10-13T12:01:46.000Z","copyright":null,"top":null,"_content":"\n\n\n今天去签了三方，所以，我的大学生活也许真的要结束了。\n\n<!-- more -->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28366791&auto=1&height=66\"></iframe>\n\n# 大学三年 #\n\n\n以前常听别人说，大学其实只有短短三年。开始我是不信的，现在却不得不信了。\n\n## 大四安排 ##\n\n大四刚开始，金九银十。秋招开始了：\n\n- 大佬：一个offer接一个offer，择优录取\n- 我：找了一个offer，得，还不错，签了吧\n\n没错，作为第一次面试就拿到了offer，还签了三方的我。确实是一个很容易满足的人，当然，这跟实力也有关系，我等渣滓不敢跟大佬比。。。\n\n其实offer拿到有段时间了，到今天才去签。（中间那段时间把段位从黄金升到了铂金，再也没人说我是黄金狗了），当然，还干了点别的事情。\n\n唉，本来想深沉一下，咋越写越欢脱。。。\n\n后边的安排可能就是先把照学到手，不过最近改革了，估计很难成为老司机的一员了。然后去实习，春节前刚好结束（说不定还能参加下公司年会）。\n\n学期末确定下毕设题目，然后开整。解决完了去旅个游，毕竟大学生优惠什么的不能浪费。。。\n\n然后毕业照走一波，之后再去公司报到，咱也是社会人了。\n\n## 三年回首 ##\n\n这个只能在心里默默吐槽了，不过怎么说呢，有句话是成长的过程就是越来越觉得以前的自己是个xx的过程。\n\n嗯，我想了一想，说的还真对。\n\n\n\n## 那些让我后悔的事 ##\n\n>说实话，还真没啥。\n\n说自己没好好学习吧，那是我懒我认了。不过咱好歹还拿过奖学金不是~\n\n说自己没挂过科把，谁说的，挂过一门。。。（说起来既拿过奖学金，又挂过科的，估计我也是独一份）\n\n说没谈过恋爱吧，有那个时间我还不如去睡觉，省事省心还自由不是~\n\n其实吧，哪有那么多后悔的事情。\n\n人嘛，该干嘛的时候就得干嘛，每个时间段都有自己该做的事情。做完了你才有资格搞其它有的没的。结果是你自己没做，后来又说后悔，你说这不是耍流氓这是啥？\n\n或许你觉得当时没有做好，但人的身心发展都是分阶段的，几年之后再回想之前做的事情，肯定觉得不对味呀。人要是一直钻这个牛角尖，那就没啥意思了。\n\n\n# 对未来的一点小小畅想 #\n\n梦想还是要有的，万一实现了呢。\n\n\n## 想要坚持的 ##\n\n- 健身（身体最重要）\n- 读书（腹有诗书气自华（老脸一红））\n- 学习（行业特殊，为了不被淘汰掉，坚持学习真的很重要）\n- 坚持给父母的全民K歌账号打call（真的超爱唱歌）\n\n除了最后一条，我还真不敢保证每天都做，毕竟谁都不是圣人。但是要尽量坚持下去。\n\n## 想要实现的 ##\n\n等我有钱了，要啥啥没有？┑(￣Д ￣)┍\n\n## 其它有的没的 ##\n\n都在心里。\n\n\n>好了，也该收收心了。看这个日子，上次发文都在一月前了。之后得给自己博客上点干货了。","source":"_posts/未来是星辰大海.md","raw":"---\ntitle: 未来是星辰大海\ndate: 2017-10-13 20:01:46\nupdate: 2017-10-13 20:01:46\ntags: [未来,人生]\ncategories: 生活随想\ncopyright:\ntop:\n---\n\n\n\n今天去签了三方，所以，我的大学生活也许真的要结束了。\n\n<!-- more -->\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=28366791&auto=1&height=66\"></iframe>\n\n# 大学三年 #\n\n\n以前常听别人说，大学其实只有短短三年。开始我是不信的，现在却不得不信了。\n\n## 大四安排 ##\n\n大四刚开始，金九银十。秋招开始了：\n\n- 大佬：一个offer接一个offer，择优录取\n- 我：找了一个offer，得，还不错，签了吧\n\n没错，作为第一次面试就拿到了offer，还签了三方的我。确实是一个很容易满足的人，当然，这跟实力也有关系，我等渣滓不敢跟大佬比。。。\n\n其实offer拿到有段时间了，到今天才去签。（中间那段时间把段位从黄金升到了铂金，再也没人说我是黄金狗了），当然，还干了点别的事情。\n\n唉，本来想深沉一下，咋越写越欢脱。。。\n\n后边的安排可能就是先把照学到手，不过最近改革了，估计很难成为老司机的一员了。然后去实习，春节前刚好结束（说不定还能参加下公司年会）。\n\n学期末确定下毕设题目，然后开整。解决完了去旅个游，毕竟大学生优惠什么的不能浪费。。。\n\n然后毕业照走一波，之后再去公司报到，咱也是社会人了。\n\n## 三年回首 ##\n\n这个只能在心里默默吐槽了，不过怎么说呢，有句话是成长的过程就是越来越觉得以前的自己是个xx的过程。\n\n嗯，我想了一想，说的还真对。\n\n\n\n## 那些让我后悔的事 ##\n\n>说实话，还真没啥。\n\n说自己没好好学习吧，那是我懒我认了。不过咱好歹还拿过奖学金不是~\n\n说自己没挂过科把，谁说的，挂过一门。。。（说起来既拿过奖学金，又挂过科的，估计我也是独一份）\n\n说没谈过恋爱吧，有那个时间我还不如去睡觉，省事省心还自由不是~\n\n其实吧，哪有那么多后悔的事情。\n\n人嘛，该干嘛的时候就得干嘛，每个时间段都有自己该做的事情。做完了你才有资格搞其它有的没的。结果是你自己没做，后来又说后悔，你说这不是耍流氓这是啥？\n\n或许你觉得当时没有做好，但人的身心发展都是分阶段的，几年之后再回想之前做的事情，肯定觉得不对味呀。人要是一直钻这个牛角尖，那就没啥意思了。\n\n\n# 对未来的一点小小畅想 #\n\n梦想还是要有的，万一实现了呢。\n\n\n## 想要坚持的 ##\n\n- 健身（身体最重要）\n- 读书（腹有诗书气自华（老脸一红））\n- 学习（行业特殊，为了不被淘汰掉，坚持学习真的很重要）\n- 坚持给父母的全民K歌账号打call（真的超爱唱歌）\n\n除了最后一条，我还真不敢保证每天都做，毕竟谁都不是圣人。但是要尽量坚持下去。\n\n## 想要实现的 ##\n\n等我有钱了，要啥啥没有？┑(￣Д ￣)┍\n\n## 其它有的没的 ##\n\n都在心里。\n\n\n>好了，也该收收心了。看这个日子，上次发文都在一月前了。之后得给自己博客上点干货了。","slug":"未来是星辰大海","published":1,"updated":"2019-05-16T08:25:21.772Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk9c000jf3630y0jxfng","content":"<p>今天去签了三方，所以，我的大学生活也许真的要结束了。</p>\n<a id=\"more\"></a>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28366791&auto=1&height=66\"></iframe>\n\n<h1 id=\"大学三年\"><a href=\"#大学三年\" class=\"headerlink\" title=\"大学三年\"></a>大学三年</h1><p>以前常听别人说，大学其实只有短短三年。开始我是不信的，现在却不得不信了。</p>\n<h2 id=\"大四安排\"><a href=\"#大四安排\" class=\"headerlink\" title=\"大四安排\"></a>大四安排</h2><p>大四刚开始，金九银十。秋招开始了：</p>\n<ul>\n<li>大佬：一个offer接一个offer，择优录取</li>\n<li>我：找了一个offer，得，还不错，签了吧</li>\n</ul>\n<p>没错，作为第一次面试就拿到了offer，还签了三方的我。确实是一个很容易满足的人，当然，这跟实力也有关系，我等渣滓不敢跟大佬比。。。</p>\n<p>其实offer拿到有段时间了，到今天才去签。（中间那段时间把段位从黄金升到了铂金，再也没人说我是黄金狗了），当然，还干了点别的事情。</p>\n<p>唉，本来想深沉一下，咋越写越欢脱。。。</p>\n<p>后边的安排可能就是先把照学到手，不过最近改革了，估计很难成为老司机的一员了。然后去实习，春节前刚好结束（说不定还能参加下公司年会）。</p>\n<p>学期末确定下毕设题目，然后开整。解决完了去旅个游，毕竟大学生优惠什么的不能浪费。。。</p>\n<p>然后毕业照走一波，之后再去公司报到，咱也是社会人了。</p>\n<h2 id=\"三年回首\"><a href=\"#三年回首\" class=\"headerlink\" title=\"三年回首\"></a>三年回首</h2><p>这个只能在心里默默吐槽了，不过怎么说呢，有句话是成长的过程就是越来越觉得以前的自己是个xx的过程。</p>\n<p>嗯，我想了一想，说的还真对。</p>\n<h2 id=\"那些让我后悔的事\"><a href=\"#那些让我后悔的事\" class=\"headerlink\" title=\"那些让我后悔的事\"></a>那些让我后悔的事</h2><blockquote>\n<p>说实话，还真没啥。</p>\n</blockquote>\n<p>说自己没好好学习吧，那是我懒我认了。不过咱好歹还拿过奖学金不是~</p>\n<p>说自己没挂过科把，谁说的，挂过一门。。。（说起来既拿过奖学金，又挂过科的，估计我也是独一份）</p>\n<p>说没谈过恋爱吧，有那个时间我还不如去睡觉，省事省心还自由不是~</p>\n<p>其实吧，哪有那么多后悔的事情。</p>\n<p>人嘛，该干嘛的时候就得干嘛，每个时间段都有自己该做的事情。做完了你才有资格搞其它有的没的。结果是你自己没做，后来又说后悔，你说这不是耍流氓这是啥？</p>\n<p>或许你觉得当时没有做好，但人的身心发展都是分阶段的，几年之后再回想之前做的事情，肯定觉得不对味呀。人要是一直钻这个牛角尖，那就没啥意思了。</p>\n<h1 id=\"对未来的一点小小畅想\"><a href=\"#对未来的一点小小畅想\" class=\"headerlink\" title=\"对未来的一点小小畅想\"></a>对未来的一点小小畅想</h1><p>梦想还是要有的，万一实现了呢。</p>\n<h2 id=\"想要坚持的\"><a href=\"#想要坚持的\" class=\"headerlink\" title=\"想要坚持的\"></a>想要坚持的</h2><ul>\n<li>健身（身体最重要）</li>\n<li>读书（腹有诗书气自华（老脸一红））</li>\n<li>学习（行业特殊，为了不被淘汰掉，坚持学习真的很重要）</li>\n<li>坚持给父母的全民K歌账号打call（真的超爱唱歌）</li>\n</ul>\n<p>除了最后一条，我还真不敢保证每天都做，毕竟谁都不是圣人。但是要尽量坚持下去。</p>\n<h2 id=\"想要实现的\"><a href=\"#想要实现的\" class=\"headerlink\" title=\"想要实现的\"></a>想要实现的</h2><p>等我有钱了，要啥啥没有？┑(￣Д ￣)┍</p>\n<h2 id=\"其它有的没的\"><a href=\"#其它有的没的\" class=\"headerlink\" title=\"其它有的没的\"></a>其它有的没的</h2><p>都在心里。</p>\n<blockquote>\n<p>好了，也该收收心了。看这个日子，上次发文都在一月前了。之后得给自己博客上点干货了。</p>\n</blockquote>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":1028,"excerpt":"<p>今天去签了三方，所以，我的大学生活也许真的要结束了。</p>","more":"<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=28366791&auto=1&height=66\"></iframe>\n\n<h1 id=\"大学三年\"><a href=\"#大学三年\" class=\"headerlink\" title=\"大学三年\"></a>大学三年</h1><p>以前常听别人说，大学其实只有短短三年。开始我是不信的，现在却不得不信了。</p>\n<h2 id=\"大四安排\"><a href=\"#大四安排\" class=\"headerlink\" title=\"大四安排\"></a>大四安排</h2><p>大四刚开始，金九银十。秋招开始了：</p>\n<ul>\n<li>大佬：一个offer接一个offer，择优录取</li>\n<li>我：找了一个offer，得，还不错，签了吧</li>\n</ul>\n<p>没错，作为第一次面试就拿到了offer，还签了三方的我。确实是一个很容易满足的人，当然，这跟实力也有关系，我等渣滓不敢跟大佬比。。。</p>\n<p>其实offer拿到有段时间了，到今天才去签。（中间那段时间把段位从黄金升到了铂金，再也没人说我是黄金狗了），当然，还干了点别的事情。</p>\n<p>唉，本来想深沉一下，咋越写越欢脱。。。</p>\n<p>后边的安排可能就是先把照学到手，不过最近改革了，估计很难成为老司机的一员了。然后去实习，春节前刚好结束（说不定还能参加下公司年会）。</p>\n<p>学期末确定下毕设题目，然后开整。解决完了去旅个游，毕竟大学生优惠什么的不能浪费。。。</p>\n<p>然后毕业照走一波，之后再去公司报到，咱也是社会人了。</p>\n<h2 id=\"三年回首\"><a href=\"#三年回首\" class=\"headerlink\" title=\"三年回首\"></a>三年回首</h2><p>这个只能在心里默默吐槽了，不过怎么说呢，有句话是成长的过程就是越来越觉得以前的自己是个xx的过程。</p>\n<p>嗯，我想了一想，说的还真对。</p>\n<h2 id=\"那些让我后悔的事\"><a href=\"#那些让我后悔的事\" class=\"headerlink\" title=\"那些让我后悔的事\"></a>那些让我后悔的事</h2><blockquote>\n<p>说实话，还真没啥。</p>\n</blockquote>\n<p>说自己没好好学习吧，那是我懒我认了。不过咱好歹还拿过奖学金不是~</p>\n<p>说自己没挂过科把，谁说的，挂过一门。。。（说起来既拿过奖学金，又挂过科的，估计我也是独一份）</p>\n<p>说没谈过恋爱吧，有那个时间我还不如去睡觉，省事省心还自由不是~</p>\n<p>其实吧，哪有那么多后悔的事情。</p>\n<p>人嘛，该干嘛的时候就得干嘛，每个时间段都有自己该做的事情。做完了你才有资格搞其它有的没的。结果是你自己没做，后来又说后悔，你说这不是耍流氓这是啥？</p>\n<p>或许你觉得当时没有做好，但人的身心发展都是分阶段的，几年之后再回想之前做的事情，肯定觉得不对味呀。人要是一直钻这个牛角尖，那就没啥意思了。</p>\n<h1 id=\"对未来的一点小小畅想\"><a href=\"#对未来的一点小小畅想\" class=\"headerlink\" title=\"对未来的一点小小畅想\"></a>对未来的一点小小畅想</h1><p>梦想还是要有的，万一实现了呢。</p>\n<h2 id=\"想要坚持的\"><a href=\"#想要坚持的\" class=\"headerlink\" title=\"想要坚持的\"></a>想要坚持的</h2><ul>\n<li>健身（身体最重要）</li>\n<li>读书（腹有诗书气自华（老脸一红））</li>\n<li>学习（行业特殊，为了不被淘汰掉，坚持学习真的很重要）</li>\n<li>坚持给父母的全民K歌账号打call（真的超爱唱歌）</li>\n</ul>\n<p>除了最后一条，我还真不敢保证每天都做，毕竟谁都不是圣人。但是要尽量坚持下去。</p>\n<h2 id=\"想要实现的\"><a href=\"#想要实现的\" class=\"headerlink\" title=\"想要实现的\"></a>想要实现的</h2><p>等我有钱了，要啥啥没有？┑(￣Д ￣)┍</p>\n<h2 id=\"其它有的没的\"><a href=\"#其它有的没的\" class=\"headerlink\" title=\"其它有的没的\"></a>其它有的没的</h2><p>都在心里。</p>\n<blockquote>\n<p>好了，也该收收心了。看这个日子，上次发文都在一月前了。之后得给自己博客上点干货了。</p>\n</blockquote>"},{"title":"测试矩阵","date":"2018-03-12T09:05:11.000Z","update":"2018-03-12T09:05:11.000Z","copyright":true,"top":null,"_content":"\n\n\n谈谈对各种测试方法做二维定位后形成的测试矩阵.\n\n<!-- more -->\n\n最近在ThoughtWorks的#TW洞见#栏目看到了[测试矩阵](http://insights.thoughtworks.cn/test-matrix/)的概念和介绍，觉得很有意思。也让我在另一种层面上理解了各种测试方法。\n\n# 你晕了没 #\n\n相信大家在初学测试的时候一定听过下列测试名词：单元测试、集成测试、性能测试、API测试、UI测试、压力测试、冒烟测试等等。诸如此类，不胜枚举。这么多的“测试”不知道你晕了没，反正博主开始是挺晕的。\n\n此外，不同的人对这些测试的理解也不尽相同，比如“单元测试”，在Java中，有人说一个类就是一个单元，有人说一个方法就是一个单元，甚至有人说一个完整的API就是一个单元。一千个人眼里有一千种单元测试。。。\n\n# 测试矩阵 #\n\n>既然有这么多的测试方法，在实际的测试工作中，我们到底怎么测试呢。像上边说的，测试种类如此繁多，难于理解，所以在测试时也难以沟通。\n\n其实，我们可以从两个维度来理解这些测试方法，并将其应用到实际工作中。\n\n其中，第一个维度就是测试实现的层次和粒度，说白了就是测哪。是方法，类，还是API？是应用、系统、还是整个平台？\n\n而我们常说的性能测试，功能测试，安全测试等等，都可以归为第二个维度，即测试的目标，也就是测什么，咋测。\n\n这两个维度结合起来就形成了下边的测试矩阵：\n\n|  测哪\\咋测  |   功能测试 | 集成测试  | 性能测试  | 安全测试 |\n| :-------- | :--------| :-- | :-- |  :-- |\n| 端到端 | test | test | test | test |\n|   API | test | test | test | test |\n|   类  | test | test | test | test |\n|  方法  | test | test | test | test |\n\n有了这样的认识，以后进行测试工作时工作起来就方便多了。我们可以进行“方法级别的功能测试”、“API级别的性能测试”等等。这样，使测试内容变得更加清晰。\n\n>事实上，在实际测试工作中，大多数情况下都进行的是功能测试，而常常忽略了第二个维度，即咋测。所以，根据测试矩阵进行测试，可以避免这种问题。","source":"_posts/测试矩阵.md","raw":"---\ntitle: 测试矩阵\ndate: 2018-03-12 17:05:11\nupdate: 2018-03-12 17:05:11\ntags: 软件测试\ncategories: 软件测试\ncopyright: true\ntop:\n---\n\n\n\n谈谈对各种测试方法做二维定位后形成的测试矩阵.\n\n<!-- more -->\n\n最近在ThoughtWorks的#TW洞见#栏目看到了[测试矩阵](http://insights.thoughtworks.cn/test-matrix/)的概念和介绍，觉得很有意思。也让我在另一种层面上理解了各种测试方法。\n\n# 你晕了没 #\n\n相信大家在初学测试的时候一定听过下列测试名词：单元测试、集成测试、性能测试、API测试、UI测试、压力测试、冒烟测试等等。诸如此类，不胜枚举。这么多的“测试”不知道你晕了没，反正博主开始是挺晕的。\n\n此外，不同的人对这些测试的理解也不尽相同，比如“单元测试”，在Java中，有人说一个类就是一个单元，有人说一个方法就是一个单元，甚至有人说一个完整的API就是一个单元。一千个人眼里有一千种单元测试。。。\n\n# 测试矩阵 #\n\n>既然有这么多的测试方法，在实际的测试工作中，我们到底怎么测试呢。像上边说的，测试种类如此繁多，难于理解，所以在测试时也难以沟通。\n\n其实，我们可以从两个维度来理解这些测试方法，并将其应用到实际工作中。\n\n其中，第一个维度就是测试实现的层次和粒度，说白了就是测哪。是方法，类，还是API？是应用、系统、还是整个平台？\n\n而我们常说的性能测试，功能测试，安全测试等等，都可以归为第二个维度，即测试的目标，也就是测什么，咋测。\n\n这两个维度结合起来就形成了下边的测试矩阵：\n\n|  测哪\\咋测  |   功能测试 | 集成测试  | 性能测试  | 安全测试 |\n| :-------- | :--------| :-- | :-- |  :-- |\n| 端到端 | test | test | test | test |\n|   API | test | test | test | test |\n|   类  | test | test | test | test |\n|  方法  | test | test | test | test |\n\n有了这样的认识，以后进行测试工作时工作起来就方便多了。我们可以进行“方法级别的功能测试”、“API级别的性能测试”等等。这样，使测试内容变得更加清晰。\n\n>事实上，在实际测试工作中，大多数情况下都进行的是功能测试，而常常忽略了第二个维度，即咋测。所以，根据测试矩阵进行测试，可以避免这种问题。","slug":"测试矩阵","published":1,"updated":"2019-05-16T08:25:17.820Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk9d000of363qvscquu4","content":"<p>谈谈对各种测试方法做二维定位后形成的测试矩阵.</p>\n<a id=\"more\"></a>\n<p>最近在ThoughtWorks的#TW洞见#栏目看到了<a href=\"http://insights.thoughtworks.cn/test-matrix/\" target=\"_blank\" rel=\"noopener\">测试矩阵</a>的概念和介绍，觉得很有意思。也让我在另一种层面上理解了各种测试方法。</p>\n<h1 id=\"你晕了没\"><a href=\"#你晕了没\" class=\"headerlink\" title=\"你晕了没\"></a>你晕了没</h1><p>相信大家在初学测试的时候一定听过下列测试名词：单元测试、集成测试、性能测试、API测试、UI测试、压力测试、冒烟测试等等。诸如此类，不胜枚举。这么多的“测试”不知道你晕了没，反正博主开始是挺晕的。</p>\n<p>此外，不同的人对这些测试的理解也不尽相同，比如“单元测试”，在Java中，有人说一个类就是一个单元，有人说一个方法就是一个单元，甚至有人说一个完整的API就是一个单元。一千个人眼里有一千种单元测试。。。</p>\n<h1 id=\"测试矩阵\"><a href=\"#测试矩阵\" class=\"headerlink\" title=\"测试矩阵\"></a>测试矩阵</h1><blockquote>\n<p>既然有这么多的测试方法，在实际的测试工作中，我们到底怎么测试呢。像上边说的，测试种类如此繁多，难于理解，所以在测试时也难以沟通。</p>\n</blockquote>\n<p>其实，我们可以从两个维度来理解这些测试方法，并将其应用到实际工作中。</p>\n<p>其中，第一个维度就是测试实现的层次和粒度，说白了就是测哪。是方法，类，还是API？是应用、系统、还是整个平台？</p>\n<p>而我们常说的性能测试，功能测试，安全测试等等，都可以归为第二个维度，即测试的目标，也就是测什么，咋测。</p>\n<p>这两个维度结合起来就形成了下边的测试矩阵：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">测哪\\咋测</th>\n<th style=\"text-align:left\">功能测试</th>\n<th style=\"text-align:left\">集成测试</th>\n<th style=\"text-align:left\">性能测试</th>\n<th style=\"text-align:left\">安全测试</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">端到端</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">API</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">类</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n</tbody>\n</table>\n<p>有了这样的认识，以后进行测试工作时工作起来就方便多了。我们可以进行“方法级别的功能测试”、“API级别的性能测试”等等。这样，使测试内容变得更加清晰。</p>\n<blockquote>\n<p>事实上，在实际测试工作中，大多数情况下都进行的是功能测试，而常常忽略了第二个维度，即咋测。所以，根据测试矩阵进行测试，可以避免这种问题。</p>\n</blockquote>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":814,"excerpt":"<p>谈谈对各种测试方法做二维定位后形成的测试矩阵.</p>","more":"<p>最近在ThoughtWorks的#TW洞见#栏目看到了<a href=\"http://insights.thoughtworks.cn/test-matrix/\" target=\"_blank\" rel=\"noopener\">测试矩阵</a>的概念和介绍，觉得很有意思。也让我在另一种层面上理解了各种测试方法。</p>\n<h1 id=\"你晕了没\"><a href=\"#你晕了没\" class=\"headerlink\" title=\"你晕了没\"></a>你晕了没</h1><p>相信大家在初学测试的时候一定听过下列测试名词：单元测试、集成测试、性能测试、API测试、UI测试、压力测试、冒烟测试等等。诸如此类，不胜枚举。这么多的“测试”不知道你晕了没，反正博主开始是挺晕的。</p>\n<p>此外，不同的人对这些测试的理解也不尽相同，比如“单元测试”，在Java中，有人说一个类就是一个单元，有人说一个方法就是一个单元，甚至有人说一个完整的API就是一个单元。一千个人眼里有一千种单元测试。。。</p>\n<h1 id=\"测试矩阵\"><a href=\"#测试矩阵\" class=\"headerlink\" title=\"测试矩阵\"></a>测试矩阵</h1><blockquote>\n<p>既然有这么多的测试方法，在实际的测试工作中，我们到底怎么测试呢。像上边说的，测试种类如此繁多，难于理解，所以在测试时也难以沟通。</p>\n</blockquote>\n<p>其实，我们可以从两个维度来理解这些测试方法，并将其应用到实际工作中。</p>\n<p>其中，第一个维度就是测试实现的层次和粒度，说白了就是测哪。是方法，类，还是API？是应用、系统、还是整个平台？</p>\n<p>而我们常说的性能测试，功能测试，安全测试等等，都可以归为第二个维度，即测试的目标，也就是测什么，咋测。</p>\n<p>这两个维度结合起来就形成了下边的测试矩阵：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">测哪\\咋测</th>\n<th style=\"text-align:left\">功能测试</th>\n<th style=\"text-align:left\">集成测试</th>\n<th style=\"text-align:left\">性能测试</th>\n<th style=\"text-align:left\">安全测试</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">端到端</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">API</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">类</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">方法</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n<td style=\"text-align:left\">test</td>\n</tr>\n</tbody>\n</table>\n<p>有了这样的认识，以后进行测试工作时工作起来就方便多了。我们可以进行“方法级别的功能测试”、“API级别的性能测试”等等。这样，使测试内容变得更加清晰。</p>\n<blockquote>\n<p>事实上，在实际测试工作中，大多数情况下都进行的是功能测试，而常常忽略了第二个维度，即咋测。所以，根据测试矩阵进行测试，可以避免这种问题。</p>\n</blockquote>"},{"title":"爱你就像爱生命","date":"2017-08-08T08:06:07.000Z","update":"2017-08-08T08:06:07.000Z","copyright":null,"top":null,"_content":"\n\n你要是愿意，我就永远爱你，你要是不愿意，我就永远相思。\n\n<!-- more -->\n\n王小波一直是我喜欢的作家之一，更令人惊讶的是，他竟然还是个程序员。\n\n>虽然他的作品部部经典，引人深思。但这一篇写给他妻子李银河的情书，却能真正打进人的内心。每看一遍都回味无穷，这是一篇极美的文章，堪称史上写的最好的情书，原来世间仍有这么好的爱。\n\n\n----------\n\n\n你要是喜欢了别人我会哭，但是还是喜欢你。\n\n你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。\n\n我是爱你的，看见就爱上了，我爱你爱到不自私的地步，就像一个人手里一只鸽子飞走了，他从心里祝福那只鸽子的飞翔。你也飞吧，我会难过，也会高兴，到底会怎么样我也不知道。\n\n不管我本人多么平庸，我总觉得我对你的爱很美。\n\n我现在已经养成了一种习惯，就是每天要对你说几句不想对别人说的话。\n\n有时候你难过了，这个时候我更爱你，只要你不拒绝我我就拥抱你，我会告诉你这是因为什么，就是我不知道是为了什么。\n\n我爱你，这是我的命运。\n\n我决不为了仪式爱你，我是正经爱你呢。我一正经起来，就觉得自己不坏，生活也真不坏。真的，也许不坏？我觉得信心就在这里。\n\n**但愿我和你，是一支唱不完的歌。**\n\n我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为别人做好事，尤其是对你，我真想把我做出的一切好事全献给你了。\n\n我们是两个在宇宙里游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关。我把我的整个灵魂给你，连同它的怪癖耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。\n\n只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。\n\n说吧，和我好吗？\n\n","source":"_posts/爱你就像爱生命.md","raw":"---\ntitle: 爱你就像爱生命\ndate: 2017-08-08 16:06:07\nupdate: 2017-08-08 16:06:07\ntags: 王小波\ncategories: 美文\ncopyright:\ntop:\n---\n\n\n你要是愿意，我就永远爱你，你要是不愿意，我就永远相思。\n\n<!-- more -->\n\n王小波一直是我喜欢的作家之一，更令人惊讶的是，他竟然还是个程序员。\n\n>虽然他的作品部部经典，引人深思。但这一篇写给他妻子李银河的情书，却能真正打进人的内心。每看一遍都回味无穷，这是一篇极美的文章，堪称史上写的最好的情书，原来世间仍有这么好的爱。\n\n\n----------\n\n\n你要是喜欢了别人我会哭，但是还是喜欢你。\n\n你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。\n\n我是爱你的，看见就爱上了，我爱你爱到不自私的地步，就像一个人手里一只鸽子飞走了，他从心里祝福那只鸽子的飞翔。你也飞吧，我会难过，也会高兴，到底会怎么样我也不知道。\n\n不管我本人多么平庸，我总觉得我对你的爱很美。\n\n我现在已经养成了一种习惯，就是每天要对你说几句不想对别人说的话。\n\n有时候你难过了，这个时候我更爱你，只要你不拒绝我我就拥抱你，我会告诉你这是因为什么，就是我不知道是为了什么。\n\n我爱你，这是我的命运。\n\n我决不为了仪式爱你，我是正经爱你呢。我一正经起来，就觉得自己不坏，生活也真不坏。真的，也许不坏？我觉得信心就在这里。\n\n**但愿我和你，是一支唱不完的歌。**\n\n我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为别人做好事，尤其是对你，我真想把我做出的一切好事全献给你了。\n\n我们是两个在宇宙里游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关。我把我的整个灵魂给你，连同它的怪癖耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。\n\n只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。\n\n说吧，和我好吗？\n\n","slug":"爱你就像爱生命","published":1,"updated":"2019-05-15T09:09:16.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk9e000qf3637ii4248e","content":"<p>你要是愿意，我就永远爱你，你要是不愿意，我就永远相思。</p>\n<a id=\"more\"></a>\n<p>王小波一直是我喜欢的作家之一，更令人惊讶的是，他竟然还是个程序员。</p>\n<blockquote>\n<p>虽然他的作品部部经典，引人深思。但这一篇写给他妻子李银河的情书，却能真正打进人的内心。每看一遍都回味无穷，这是一篇极美的文章，堪称史上写的最好的情书，原来世间仍有这么好的爱。</p>\n</blockquote>\n<hr>\n<p>你要是喜欢了别人我会哭，但是还是喜欢你。</p>\n<p>你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。</p>\n<p>我是爱你的，看见就爱上了，我爱你爱到不自私的地步，就像一个人手里一只鸽子飞走了，他从心里祝福那只鸽子的飞翔。你也飞吧，我会难过，也会高兴，到底会怎么样我也不知道。</p>\n<p>不管我本人多么平庸，我总觉得我对你的爱很美。</p>\n<p>我现在已经养成了一种习惯，就是每天要对你说几句不想对别人说的话。</p>\n<p>有时候你难过了，这个时候我更爱你，只要你不拒绝我我就拥抱你，我会告诉你这是因为什么，就是我不知道是为了什么。</p>\n<p>我爱你，这是我的命运。</p>\n<p>我决不为了仪式爱你，我是正经爱你呢。我一正经起来，就觉得自己不坏，生活也真不坏。真的，也许不坏？我觉得信心就在这里。</p>\n<p><strong>但愿我和你，是一支唱不完的歌。</strong></p>\n<p>我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为别人做好事，尤其是对你，我真想把我做出的一切好事全献给你了。</p>\n<p>我们是两个在宇宙里游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关。我把我的整个灵魂给你，连同它的怪癖耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。</p>\n<p>只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。</p>\n<p>说吧，和我好吗？</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":696,"excerpt":"<p>你要是愿意，我就永远爱你，你要是不愿意，我就永远相思。</p>","more":"<p>王小波一直是我喜欢的作家之一，更令人惊讶的是，他竟然还是个程序员。</p>\n<blockquote>\n<p>虽然他的作品部部经典，引人深思。但这一篇写给他妻子李银河的情书，却能真正打进人的内心。每看一遍都回味无穷，这是一篇极美的文章，堪称史上写的最好的情书，原来世间仍有这么好的爱。</p>\n</blockquote>\n<hr>\n<p>你要是喜欢了别人我会哭，但是还是喜欢你。</p>\n<p>你是非常可爱的人，真应该遇到最好的人，我也真希望我就是。</p>\n<p>我是爱你的，看见就爱上了，我爱你爱到不自私的地步，就像一个人手里一只鸽子飞走了，他从心里祝福那只鸽子的飞翔。你也飞吧，我会难过，也会高兴，到底会怎么样我也不知道。</p>\n<p>不管我本人多么平庸，我总觉得我对你的爱很美。</p>\n<p>我现在已经养成了一种习惯，就是每天要对你说几句不想对别人说的话。</p>\n<p>有时候你难过了，这个时候我更爱你，只要你不拒绝我我就拥抱你，我会告诉你这是因为什么，就是我不知道是为了什么。</p>\n<p>我爱你，这是我的命运。</p>\n<p>我决不为了仪式爱你，我是正经爱你呢。我一正经起来，就觉得自己不坏，生活也真不坏。真的，也许不坏？我觉得信心就在这里。</p>\n<p><strong>但愿我和你，是一支唱不完的歌。</strong></p>\n<p>我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为别人做好事，尤其是对你，我真想把我做出的一切好事全献给你了。</p>\n<p>我们是两个在宇宙里游荡的灵魂，我们不愿孤独，走到一起来，别人与我们无关。我把我的整个灵魂给你，连同它的怪癖耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。</p>\n<p>只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。</p>\n<p>说吧，和我好吗？</p>"},{"title":"递归求解1到100求和","date":"2017-08-16T12:59:27.000Z","update":"2017-08-16T12:59:27.000Z","copyright":true,"top":null,"_content":"\n\n\n递归求解1到100的和是一个常见面试题。\n\n<!-- more -->\n\n**思想：**\n\n思考一下，从1加到100可以分解成：\n\n- 1+（2加到100的和）\n- 1+2+（3加到100的和）\n- 1+2+3+（4加到100的和）\n- ......\n\n怎么样，这样是不是有点递归的味道了？递归的出口就是1。\n\n所以，可以编写如下代码：\n\n**代码：**\n\n```C++  \nint count(int n)\n{\n\tif (n > 1)\n\t{\n\t\treturn n + count(n - 1);\n\t}\n\telse\n\treturn 1;\n}\n```\n\n\n\n这样，不仅可以求1到100的和，还可以求任意区间数字的和。只要改变递归出口和上限即可。\n\n","source":"_posts/递归求解1到100求和.md","raw":"---\ntitle: 递归求解1到100求和\ndate: 2017-08-16 20:59:27\nupdate: 2017-08-16 20:59:27\ntags: 递归\ncategories: 笔试面试题\ncopyright: true\ntop:\n---\n\n\n\n递归求解1到100的和是一个常见面试题。\n\n<!-- more -->\n\n**思想：**\n\n思考一下，从1加到100可以分解成：\n\n- 1+（2加到100的和）\n- 1+2+（3加到100的和）\n- 1+2+3+（4加到100的和）\n- ......\n\n怎么样，这样是不是有点递归的味道了？递归的出口就是1。\n\n所以，可以编写如下代码：\n\n**代码：**\n\n```C++  \nint count(int n)\n{\n\tif (n > 1)\n\t{\n\t\treturn n + count(n - 1);\n\t}\n\telse\n\treturn 1;\n}\n```\n\n\n\n这样，不仅可以求1到100的和，还可以求任意区间数字的和。只要改变递归出口和上限即可。\n\n","slug":"递归求解1到100求和","published":1,"updated":"2019-05-15T09:09:16.460Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnk9f000uf363hjno0h4w","content":"<p>递归求解1到100的和是一个常见面试题。</p>\n<a id=\"more\"></a>\n<p><strong>思想：</strong></p>\n<p>思考一下，从1加到100可以分解成：</p>\n<ul>\n<li>1+（2加到100的和）</li>\n<li>1+2+（3加到100的和）</li>\n<li>1+2+3+（4加到100的和）</li>\n<li>……</li>\n</ul>\n<p>怎么样，这样是不是有点递归的味道了？递归的出口就是1。</p>\n<p>所以，可以编写如下代码：</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">count</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>{</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n > <span class=\"number\">1</span>)</span><br><span class=\"line\">\t{</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n + count(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t}</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>这样，不仅可以求1到100的和，还可以求任意区间数字的和。只要改变递归出口和上限即可。</p>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":282,"excerpt":"<p>递归求解1到100的和是一个常见面试题。</p>","more":"<p><strong>思想：</strong></p>\n<p>思考一下，从1加到100可以分解成：</p>\n<ul>\n<li>1+（2加到100的和）</li>\n<li>1+2+（3加到100的和）</li>\n<li>1+2+3+（4加到100的和）</li>\n<li>……</li>\n</ul>\n<p>怎么样，这样是不是有点递归的味道了？递归的出口就是1。</p>\n<p>所以，可以编写如下代码：</p>\n<p><strong>代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">count</span><span class=\"params\">(<span class=\"keyword\">int</span> n)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (n &gt; <span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> n + count(n - <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样，不仅可以求1到100的和，还可以求任意区间数字的和。只要改变递归出口和上限即可。</p>"},{"title":"十一旅行中的小插曲","date":"2019-10-11T06:01:49.000Z","update":"2019-10-11T06:01:49.000Z","copyright":null,"top":null,"_content":"\n我人生的这一部分，叫做冒傻气。\n\n<!-- more -->\n\n大西北的糙人果然不适合呆在苏州上海这种湿热气候的城市。这次经历让我明白，有些事情，你做了，才会知道以后再也不想做:joy: 这个认知的过程也是很重要的。\n\n# 动卧 #\n\n按计划1号早上出发去苏州，高铁票。\n\n6点起床去赶9点半的高铁。但交通拥堵还是没赶上车:sob: 。。。无奈只能改签当晚的动车卧铺，小一千块的车费。\n\n于是国庆第一天，在高铁站看闯关东度过:joy:。\n<img src=\"https://i.loli.net/2019/10/12/3saEzBhb7NOS1Xi.jpg\" width = \"250\" height = \"300\" alt=\"看闯关东\">(这样看图有助于治疗颈椎)\n\n第一次坐卧铺，感觉挺新奇。环境还不错。\n<img src=\"https://i.loli.net/2019/10/11/aZUYzu1rVdic5vG.jpg\" width = \"250\" height = \"300\" alt=\"动卧\">\n\n刚开始只有我一个人，本来都快睡着了。后来上来了一对去南京的中年夫妇，然后。。。我就再也睡不着了。\n\n记得是大妈先开始的，打呼声虽然有些大，但还能勉强眯会眼。睡在大妈上铺的大叔表示不服，亲自示范给我们啥叫震耳欲聋，振聋发聩:hear_no_evil: 大妈不打呼了，因为她也被吵醒了，整个房间瞬间变成了大叔的主场。。。\n\n睡在我上铺的兄弟也睡不着了，穿上外套出去了，我知道，他一定是想去静静。也或许他是想出去问问，能不能把之前另一个女生跟他交换的铺位换回来:satisfied:\n\n我觉得自己有义务提醒大叔控制下自己，于是起身敲大叔的床板，没醒。求救的眼神投向大妈，大妈顿时会意也起身，敲床板。大叔醒了。但显然大叔还没有完全清醒，嘟囔了两句家乡话。两人交谈了几句，大叔转身又睡了。\n\n声音虽然小了下来，但我知道，这只是暴风雨前的宁静。睡在我上铺的兄弟回来了，不知他是否意识到房间里的声音小了很多:relieved:。\n\n果然，不一会，打鼾声又开始了。不幸的是，我没有赶在这之前睡着。\n\n南京站到了，大叔大妈终于下车了。但这时离苏州也只有不到一小时的车程，看来睡觉是不可能了。天将降大任于斯人也，必将苦其心志。苦就苦吧:confounded:。\n\n5点20分，苏州到了，我也下车了。\n\n\n# 看电影 #\n\n既然是国庆，那咱也该应个景。其他电影不说，《我和我的祖国》得看吧，电影虽说得两个多小时，但也安排上了。\n然后，我眼睛就瞎了:see_no_evil: \n\n最不忍直视的是'白昼流星'这一篇，接宇航员和老大爷死的这两幕，简直尬到了极点。还我的陈飞宇小哥哥!!!\n<img src=\"https://i.loli.net/2019/10/14/KmAZaWJP5qYk19z.jpg\" width=\"250\" height=\"300\" alt=\"白昼流星\">(有多尬大家参考[这篇回答](https://www.zhihu.com/question/348312976/answer/843634337))\n\n只能说电影想把剧情和祖国重大事件联系起来的初衷是好的，但联系不上，也不能强制联系啊。。。\n槽点最少的一篇，当属'回归'篇了。朱一龙简直太帅了吧///\n<img src=\"https://i.loli.net/2019/10/14/5gD27LwOvRiGcl6.jpg\" width=\"400\" height=\"300\" alt=\"回归\">\n\n至于《中国机长》，据说也是戴着[3D眼镜可以看出4D效果](https://www.zhihu.com/question/346282105/answer/841583568)，也是槽点满满啊。所以说假期电影，不能盲目从众，爱护眼睛，从我做起。\n\n# 拙政园 #\n\n到了苏州，拙政园是必定要去的，原计划到苏州的第二天去，但我低估了国庆节的客流量，只能预定第三天的票了。\n\n于是，第三天早上十点半，和家人一起兴致勃勃的到了拙政园景区，还没到门口，我们就傻眼了。这哪是看景，这分明是看人嘛 :weary: 门口早就拍好了二百米的长队。但我有点疑惑，因为拙政园的门票，在网上是按入园时间段订票的，我预订了10点半到11点半的票。这才刚刚10点半，没道理有这么多人。跟保安小哥沟通后，我们得到了答案。\n\n原来，网上所谓的‘入园时间’不过是个摆设。按照常理，如果预定的是9点半到10点半的入园票，那么10点半以后才来，票应该是作废的。然而并不是，只要预订了今天的票，今天内任何时间段都可以入园，大家都想早点去，在里面多呆点时间，当然会有这么多人了。我心里有点气愤，质问保安小哥那为什么要按时间段预定票？小哥只说他们只负责维持秩序，订票规则他也不清楚。\n\n尽管心里好气，但已经到了，总不能又折回去，所以只好从队伍的最后边开始排队。后面有人打电话投诉，火气很大。嗯，我很佛系了:expressionless:\n\n排队这件事，精髓不在于排在你前边的人变少，而在于排在你后边的人越来越多，这样心里就会有一种莫名的满足感。半小时后，终于排到了最前面，下一波就可以进去了。后面一个插队进来的北京大叔，说山东人素质不好，还插队，只能在心里默默鄙视一下，五十步笑百步，彼此彼此罢了。\n\n终于入园了，然而此刻我已经完全没了游玩的心情，只想走马观花看一遍林子，然后就离开。然而现实连这个机会都不肯给我。入园之后，我才明白‘看人’这个词的含义。尽管园子已经足够大，但游玩的的人更多，进去之后完全没有下脚的地方。整个园林像极了一座围城，里面的人想出去，外边的人想进来。过了一会，竟然下起雨来，找了个满是人的亭子避了会雨，想着这么大的林子，古时候住在里面的人该多有钱。\n\n转悠了一会，想去看看园林博物馆，于是跟着路标出去，越走越觉得不对劲。转悠出去才发现再也进不去了，博物馆呢？！完全没看着，我们就这样被忽悠出去了。这时候，天又下起了大雨，没有伞的我们就像一群逃兵一样，匆忙打了车逃离了这个[围城]，围城外，旅游大巴还在源源不断的像城里开去。\n\n放一张[走马观花]的时候，拍的一张园林照。听解说员介绍，右侧的亭子是按照[神龙见首不见尾]的意境设计的：\n<img src=\"https://i.loli.net/2019/10/14/Wyamv3ucXGQ5ITA.jpg\" width=\"400\" height=\"300\" alt=\"园林\">\n\n\n\n# 商务座 #\n\n# 找酒店 #\n\n# 坐班车 #","source":"_posts/记十一旅行中的小插曲.md","raw":"---\ntitle: 十一旅行中的小插曲\ndate: 2019-10-11 14:01:49\nupdate: 2019-10-11 14:01:49\ntags: [苏州,旅行]\ncategories: 生活随想\ncopyright:\ntop:\n---\n\n我人生的这一部分，叫做冒傻气。\n\n<!-- more -->\n\n大西北的糙人果然不适合呆在苏州上海这种湿热气候的城市。这次经历让我明白，有些事情，你做了，才会知道以后再也不想做:joy: 这个认知的过程也是很重要的。\n\n# 动卧 #\n\n按计划1号早上出发去苏州，高铁票。\n\n6点起床去赶9点半的高铁。但交通拥堵还是没赶上车:sob: 。。。无奈只能改签当晚的动车卧铺，小一千块的车费。\n\n于是国庆第一天，在高铁站看闯关东度过:joy:。\n<img src=\"https://i.loli.net/2019/10/12/3saEzBhb7NOS1Xi.jpg\" width = \"250\" height = \"300\" alt=\"看闯关东\">(这样看图有助于治疗颈椎)\n\n第一次坐卧铺，感觉挺新奇。环境还不错。\n<img src=\"https://i.loli.net/2019/10/11/aZUYzu1rVdic5vG.jpg\" width = \"250\" height = \"300\" alt=\"动卧\">\n\n刚开始只有我一个人，本来都快睡着了。后来上来了一对去南京的中年夫妇，然后。。。我就再也睡不着了。\n\n记得是大妈先开始的，打呼声虽然有些大，但还能勉强眯会眼。睡在大妈上铺的大叔表示不服，亲自示范给我们啥叫震耳欲聋，振聋发聩:hear_no_evil: 大妈不打呼了，因为她也被吵醒了，整个房间瞬间变成了大叔的主场。。。\n\n睡在我上铺的兄弟也睡不着了，穿上外套出去了，我知道，他一定是想去静静。也或许他是想出去问问，能不能把之前另一个女生跟他交换的铺位换回来:satisfied:\n\n我觉得自己有义务提醒大叔控制下自己，于是起身敲大叔的床板，没醒。求救的眼神投向大妈，大妈顿时会意也起身，敲床板。大叔醒了。但显然大叔还没有完全清醒，嘟囔了两句家乡话。两人交谈了几句，大叔转身又睡了。\n\n声音虽然小了下来，但我知道，这只是暴风雨前的宁静。睡在我上铺的兄弟回来了，不知他是否意识到房间里的声音小了很多:relieved:。\n\n果然，不一会，打鼾声又开始了。不幸的是，我没有赶在这之前睡着。\n\n南京站到了，大叔大妈终于下车了。但这时离苏州也只有不到一小时的车程，看来睡觉是不可能了。天将降大任于斯人也，必将苦其心志。苦就苦吧:confounded:。\n\n5点20分，苏州到了，我也下车了。\n\n\n# 看电影 #\n\n既然是国庆，那咱也该应个景。其他电影不说，《我和我的祖国》得看吧，电影虽说得两个多小时，但也安排上了。\n然后，我眼睛就瞎了:see_no_evil: \n\n最不忍直视的是'白昼流星'这一篇，接宇航员和老大爷死的这两幕，简直尬到了极点。还我的陈飞宇小哥哥!!!\n<img src=\"https://i.loli.net/2019/10/14/KmAZaWJP5qYk19z.jpg\" width=\"250\" height=\"300\" alt=\"白昼流星\">(有多尬大家参考[这篇回答](https://www.zhihu.com/question/348312976/answer/843634337))\n\n只能说电影想把剧情和祖国重大事件联系起来的初衷是好的，但联系不上，也不能强制联系啊。。。\n槽点最少的一篇，当属'回归'篇了。朱一龙简直太帅了吧///\n<img src=\"https://i.loli.net/2019/10/14/5gD27LwOvRiGcl6.jpg\" width=\"400\" height=\"300\" alt=\"回归\">\n\n至于《中国机长》，据说也是戴着[3D眼镜可以看出4D效果](https://www.zhihu.com/question/346282105/answer/841583568)，也是槽点满满啊。所以说假期电影，不能盲目从众，爱护眼睛，从我做起。\n\n# 拙政园 #\n\n到了苏州，拙政园是必定要去的，原计划到苏州的第二天去，但我低估了国庆节的客流量，只能预定第三天的票了。\n\n于是，第三天早上十点半，和家人一起兴致勃勃的到了拙政园景区，还没到门口，我们就傻眼了。这哪是看景，这分明是看人嘛 :weary: 门口早就拍好了二百米的长队。但我有点疑惑，因为拙政园的门票，在网上是按入园时间段订票的，我预订了10点半到11点半的票。这才刚刚10点半，没道理有这么多人。跟保安小哥沟通后，我们得到了答案。\n\n原来，网上所谓的‘入园时间’不过是个摆设。按照常理，如果预定的是9点半到10点半的入园票，那么10点半以后才来，票应该是作废的。然而并不是，只要预订了今天的票，今天内任何时间段都可以入园，大家都想早点去，在里面多呆点时间，当然会有这么多人了。我心里有点气愤，质问保安小哥那为什么要按时间段预定票？小哥只说他们只负责维持秩序，订票规则他也不清楚。\n\n尽管心里好气，但已经到了，总不能又折回去，所以只好从队伍的最后边开始排队。后面有人打电话投诉，火气很大。嗯，我很佛系了:expressionless:\n\n排队这件事，精髓不在于排在你前边的人变少，而在于排在你后边的人越来越多，这样心里就会有一种莫名的满足感。半小时后，终于排到了最前面，下一波就可以进去了。后面一个插队进来的北京大叔，说山东人素质不好，还插队，只能在心里默默鄙视一下，五十步笑百步，彼此彼此罢了。\n\n终于入园了，然而此刻我已经完全没了游玩的心情，只想走马观花看一遍林子，然后就离开。然而现实连这个机会都不肯给我。入园之后，我才明白‘看人’这个词的含义。尽管园子已经足够大，但游玩的的人更多，进去之后完全没有下脚的地方。整个园林像极了一座围城，里面的人想出去，外边的人想进来。过了一会，竟然下起雨来，找了个满是人的亭子避了会雨，想着这么大的林子，古时候住在里面的人该多有钱。\n\n转悠了一会，想去看看园林博物馆，于是跟着路标出去，越走越觉得不对劲。转悠出去才发现再也进不去了，博物馆呢？！完全没看着，我们就这样被忽悠出去了。这时候，天又下起了大雨，没有伞的我们就像一群逃兵一样，匆忙打了车逃离了这个[围城]，围城外，旅游大巴还在源源不断的像城里开去。\n\n放一张[走马观花]的时候，拍的一张园林照。听解说员介绍，右侧的亭子是按照[神龙见首不见尾]的意境设计的：\n<img src=\"https://i.loli.net/2019/10/14/Wyamv3ucXGQ5ITA.jpg\" width=\"400\" height=\"300\" alt=\"园林\">\n\n\n\n# 商务座 #\n\n# 找酒店 #\n\n# 坐班车 #","slug":"记十一旅行中的小插曲","published":1,"updated":"2019-10-14T09:08:02.216Z","_id":"ck1lqnk9g000wf363o7urms86","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我人生的这一部分，叫做冒傻气。</p>\n<a id=\"more\"></a>\n<p>大西北的糙人果然不适合呆在苏州上海这种湿热气候的城市。这次经历让我明白，有些事情，你做了，才会知道以后再也不想做<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8\">😂</span> 这个认知的过程也是很重要的。</p>\n<h1 id=\"动卧\"><a href=\"#动卧\" class=\"headerlink\" title=\"动卧\"></a>动卧</h1><p>按计划1号早上出发去苏州，高铁票。</p>\n<p>6点起床去赶9点半的高铁。但交通拥堵还是没赶上车<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8\">😭</span> 。。。无奈只能改签当晚的动车卧铺，小一千块的车费。</p>\n<p>于是国庆第一天，在高铁站看闯关东度过<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8\">😂</span>。<br><img src=\"https://i.loli.net/2019/10/12/3saEzBhb7NOS1Xi.jpg\" width=\"250\" height=\"300\" alt=\"看闯关东\">(这样看图有助于治疗颈椎)</p>\n<p>第一次坐卧铺，感觉挺新奇。环境还不错。<br><img src=\"https://i.loli.net/2019/10/11/aZUYzu1rVdic5vG.jpg\" width=\"250\" height=\"300\" alt=\"动卧\"></p>\n<p>刚开始只有我一个人，本来都快睡着了。后来上来了一对去南京的中年夫妇，然后。。。我就再也睡不着了。</p>\n<p>记得是大妈先开始的，打呼声虽然有些大，但还能勉强眯会眼。睡在大妈上铺的大叔表示不服，亲自示范给我们啥叫震耳欲聋，振聋发聩<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f649.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f649.png?v8\">🙉</span> 大妈不打呼了，因为她也被吵醒了，整个房间瞬间变成了大叔的主场。。。</p>\n<p>睡在我上铺的兄弟也睡不着了，穿上外套出去了，我知道，他一定是想去静静。也或许他是想出去问问，能不能把之前另一个女生跟他交换的铺位换回来<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png?v8\">😆</span></p>\n<p>我觉得自己有义务提醒大叔控制下自己，于是起身敲大叔的床板，没醒。求救的眼神投向大妈，大妈顿时会意也起身，敲床板。大叔醒了。但显然大叔还没有完全清醒，嘟囔了两句家乡话。两人交谈了几句，大叔转身又睡了。</p>\n<p>声音虽然小了下来，但我知道，这只是暴风雨前的宁静。睡在我上铺的兄弟回来了，不知他是否意识到房间里的声音小了很多<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f60c.png?v8\">😌</span>。</p>\n<p>果然，不一会，打鼾声又开始了。不幸的是，我没有赶在这之前睡着。</p>\n<p>南京站到了，大叔大妈终于下车了。但这时离苏州也只有不到一小时的车程，看来睡觉是不可能了。天将降大任于斯人也，必将苦其心志。苦就苦吧<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f616.png?v8\">😖</span>。</p>\n<p>5点20分，苏州到了，我也下车了。</p>\n<h1 id=\"看电影\"><a href=\"#看电影\" class=\"headerlink\" title=\"看电影\"></a>看电影</h1><p>既然是国庆，那咱也该应个景。其他电影不说，《我和我的祖国》得看吧，电影虽说得两个多小时，但也安排上了。<br>然后，我眼睛就瞎了<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f648.png?v8\">🙈</span> </p>\n<p>最不忍直视的是’白昼流星’这一篇，接宇航员和老大爷死的这两幕，简直尬到了极点。还我的陈飞宇小哥哥!!!<br><img src=\"https://i.loli.net/2019/10/14/KmAZaWJP5qYk19z.jpg\" width=\"250\" height=\"300\" alt=\"白昼流星\">(有多尬大家参考<a href=\"https://www.zhihu.com/question/348312976/answer/843634337\" target=\"_blank\" rel=\"noopener\">这篇回答</a>)</p>\n<p>只能说电影想把剧情和祖国重大事件联系起来的初衷是好的，但联系不上，也不能强制联系啊。。。<br>槽点最少的一篇，当属’回归’篇了。朱一龙简直太帅了吧///<br><img src=\"https://i.loli.net/2019/10/14/5gD27LwOvRiGcl6.jpg\" width=\"400\" height=\"300\" alt=\"回归\"></p>\n<p>至于《中国机长》，据说也是戴着<a href=\"https://www.zhihu.com/question/346282105/answer/841583568\" target=\"_blank\" rel=\"noopener\">3D眼镜可以看出4D效果</a>，也是槽点满满啊。所以说假期电影，不能盲目从众，爱护眼睛，从我做起。</p>\n<h1 id=\"拙政园\"><a href=\"#拙政园\" class=\"headerlink\" title=\"拙政园\"></a>拙政园</h1><p>到了苏州，拙政园是必定要去的，原计划到苏州的第二天去，但我低估了国庆节的客流量，只能预定第三天的票了。</p>\n<p>于是，第三天早上十点半，和家人一起兴致勃勃的到了拙政园景区，还没到门口，我们就傻眼了。这哪是看景，这分明是看人嘛 <span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8\">😩</span> 门口早就拍好了二百米的长队。但我有点疑惑，因为拙政园的门票，在网上是按入园时间段订票的，我预订了10点半到11点半的票。这才刚刚10点半，没道理有这么多人。跟保安小哥沟通后，我们得到了答案。</p>\n<p>原来，网上所谓的‘入园时间’不过是个摆设。按照常理，如果预定的是9点半到10点半的入园票，那么10点半以后才来，票应该是作废的。然而并不是，只要预订了今天的票，今天内任何时间段都可以入园，大家都想早点去，在里面多呆点时间，当然会有这么多人了。我心里有点气愤，质问保安小哥那为什么要按时间段预定票？小哥只说他们只负责维持秩序，订票规则他也不清楚。</p>\n<p>尽管心里好气，但已经到了，总不能又折回去，所以只好从队伍的最后边开始排队。后面有人打电话投诉，火气很大。嗯，我很佛系了<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f611.png?v8\">😑</span></p>\n<p>排队这件事，精髓不在于排在你前边的人变少，而在于排在你后边的人越来越多，这样心里就会有一种莫名的满足感。半小时后，终于排到了最前面，下一波就可以进去了。后面一个插队进来的北京大叔，说山东人素质不好，还插队，只能在心里默默鄙视一下，五十步笑百步，彼此彼此罢了。</p>\n<p>终于入园了，然而此刻我已经完全没了游玩的心情，只想走马观花看一遍林子，然后就离开。然而现实连这个机会都不肯给我。入园之后，我才明白‘看人’这个词的含义。尽管园子已经足够大，但游玩的的人更多，进去之后完全没有下脚的地方。整个园林像极了一座围城，里面的人想出去，外边的人想进来。过了一会，竟然下起雨来，找了个满是人的亭子避了会雨，想着这么大的林子，古时候住在里面的人该多有钱。</p>\n<p>转悠了一会，想去看看园林博物馆，于是跟着路标出去，越走越觉得不对劲。转悠出去才发现再也进不去了，博物馆呢？！完全没看着，我们就这样被忽悠出去了。这时候，天又下起了大雨，没有伞的我们就像一群逃兵一样，匆忙打了车逃离了这个[围城]，围城外，旅游大巴还在源源不断的像城里开去。</p>\n<p>放一张[走马观花]的时候，拍的一张园林照。听解说员介绍，右侧的亭子是按照[神龙见首不见尾]的意境设计的：<br><img src=\"https://i.loli.net/2019/10/14/Wyamv3ucXGQ5ITA.jpg\" width=\"400\" height=\"300\" alt=\"园林\"></p>\n<h1 id=\"商务座\"><a href=\"#商务座\" class=\"headerlink\" title=\"商务座\"></a>商务座</h1><h1 id=\"找酒店\"><a href=\"#找酒店\" class=\"headerlink\" title=\"找酒店\"></a>找酒店</h1><h1 id=\"坐班车\"><a href=\"#坐班车\" class=\"headerlink\" title=\"坐班车\"></a>坐班车</h1><script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":2020,"excerpt":"<p>我人生的这一部分，叫做冒傻气。</p>","more":"<p>大西北的糙人果然不适合呆在苏州上海这种湿热气候的城市。这次经历让我明白，有些事情，你做了，才会知道以后再也不想做:joy: 这个认知的过程也是很重要的。</p>\n<h1 id=\"动卧\"><a href=\"#动卧\" class=\"headerlink\" title=\"动卧\"></a>动卧</h1><p>按计划1号早上出发去苏州，高铁票。</p>\n<p>6点起床去赶9点半的高铁。但交通拥堵还是没赶上车:sob: 。。。无奈只能改签当晚的动车卧铺，小一千块的车费。</p>\n<p>于是国庆第一天，在高铁站看闯关东度过:joy:。<br><img src=\"https://i.loli.net/2019/10/12/3saEzBhb7NOS1Xi.jpg\" width=\"250\" height=\"300\" alt=\"看闯关东\">(这样看图有助于治疗颈椎)</p>\n<p>第一次坐卧铺，感觉挺新奇。环境还不错。<br><img src=\"https://i.loli.net/2019/10/11/aZUYzu1rVdic5vG.jpg\" width=\"250\" height=\"300\" alt=\"动卧\"></p>\n<p>刚开始只有我一个人，本来都快睡着了。后来上来了一对去南京的中年夫妇，然后。。。我就再也睡不着了。</p>\n<p>记得是大妈先开始的，打呼声虽然有些大，但还能勉强眯会眼。睡在大妈上铺的大叔表示不服，亲自示范给我们啥叫震耳欲聋，振聋发聩:hear_no_evil: 大妈不打呼了，因为她也被吵醒了，整个房间瞬间变成了大叔的主场。。。</p>\n<p>睡在我上铺的兄弟也睡不着了，穿上外套出去了，我知道，他一定是想去静静。也或许他是想出去问问，能不能把之前另一个女生跟他交换的铺位换回来:satisfied:</p>\n<p>我觉得自己有义务提醒大叔控制下自己，于是起身敲大叔的床板，没醒。求救的眼神投向大妈，大妈顿时会意也起身，敲床板。大叔醒了。但显然大叔还没有完全清醒，嘟囔了两句家乡话。两人交谈了几句，大叔转身又睡了。</p>\n<p>声音虽然小了下来，但我知道，这只是暴风雨前的宁静。睡在我上铺的兄弟回来了，不知他是否意识到房间里的声音小了很多:relieved:。</p>\n<p>果然，不一会，打鼾声又开始了。不幸的是，我没有赶在这之前睡着。</p>\n<p>南京站到了，大叔大妈终于下车了。但这时离苏州也只有不到一小时的车程，看来睡觉是不可能了。天将降大任于斯人也，必将苦其心志。苦就苦吧:confounded:。</p>\n<p>5点20分，苏州到了，我也下车了。</p>\n<h1 id=\"看电影\"><a href=\"#看电影\" class=\"headerlink\" title=\"看电影\"></a>看电影</h1><p>既然是国庆，那咱也该应个景。其他电影不说，《我和我的祖国》得看吧，电影虽说得两个多小时，但也安排上了。<br>然后，我眼睛就瞎了:see_no_evil: </p>\n<p>最不忍直视的是’白昼流星’这一篇，接宇航员和老大爷死的这两幕，简直尬到了极点。还我的陈飞宇小哥哥!!!<br><img src=\"https://i.loli.net/2019/10/14/KmAZaWJP5qYk19z.jpg\" width=\"250\" height=\"300\" alt=\"白昼流星\">(有多尬大家参考<a href=\"https://www.zhihu.com/question/348312976/answer/843634337\" target=\"_blank\" rel=\"noopener\">这篇回答</a>)</p>\n<p>只能说电影想把剧情和祖国重大事件联系起来的初衷是好的，但联系不上，也不能强制联系啊。。。<br>槽点最少的一篇，当属’回归’篇了。朱一龙简直太帅了吧///<br><img src=\"https://i.loli.net/2019/10/14/5gD27LwOvRiGcl6.jpg\" width=\"400\" height=\"300\" alt=\"回归\"></p>\n<p>至于《中国机长》，据说也是戴着<a href=\"https://www.zhihu.com/question/346282105/answer/841583568\" target=\"_blank\" rel=\"noopener\">3D眼镜可以看出4D效果</a>，也是槽点满满啊。所以说假期电影，不能盲目从众，爱护眼睛，从我做起。</p>\n<h1 id=\"拙政园\"><a href=\"#拙政园\" class=\"headerlink\" title=\"拙政园\"></a>拙政园</h1><p>到了苏州，拙政园是必定要去的，原计划到苏州的第二天去，但我低估了国庆节的客流量，只能预定第三天的票了。</p>\n<p>于是，第三天早上十点半，和家人一起兴致勃勃的到了拙政园景区，还没到门口，我们就傻眼了。这哪是看景，这分明是看人嘛 :weary: 门口早就拍好了二百米的长队。但我有点疑惑，因为拙政园的门票，在网上是按入园时间段订票的，我预订了10点半到11点半的票。这才刚刚10点半，没道理有这么多人。跟保安小哥沟通后，我们得到了答案。</p>\n<p>原来，网上所谓的‘入园时间’不过是个摆设。按照常理，如果预定的是9点半到10点半的入园票，那么10点半以后才来，票应该是作废的。然而并不是，只要预订了今天的票，今天内任何时间段都可以入园，大家都想早点去，在里面多呆点时间，当然会有这么多人了。我心里有点气愤，质问保安小哥那为什么要按时间段预定票？小哥只说他们只负责维持秩序，订票规则他也不清楚。</p>\n<p>尽管心里好气，但已经到了，总不能又折回去，所以只好从队伍的最后边开始排队。后面有人打电话投诉，火气很大。嗯，我很佛系了:expressionless:</p>\n<p>排队这件事，精髓不在于排在你前边的人变少，而在于排在你后边的人越来越多，这样心里就会有一种莫名的满足感。半小时后，终于排到了最前面，下一波就可以进去了。后面一个插队进来的北京大叔，说山东人素质不好，还插队，只能在心里默默鄙视一下，五十步笑百步，彼此彼此罢了。</p>\n<p>终于入园了，然而此刻我已经完全没了游玩的心情，只想走马观花看一遍林子，然后就离开。然而现实连这个机会都不肯给我。入园之后，我才明白‘看人’这个词的含义。尽管园子已经足够大，但游玩的的人更多，进去之后完全没有下脚的地方。整个园林像极了一座围城，里面的人想出去，外边的人想进来。过了一会，竟然下起雨来，找了个满是人的亭子避了会雨，想着这么大的林子，古时候住在里面的人该多有钱。</p>\n<p>转悠了一会，想去看看园林博物馆，于是跟着路标出去，越走越觉得不对劲。转悠出去才发现再也进不去了，博物馆呢？！完全没看着，我们就这样被忽悠出去了。这时候，天又下起了大雨，没有伞的我们就像一群逃兵一样，匆忙打了车逃离了这个[围城]，围城外，旅游大巴还在源源不断的像城里开去。</p>\n<p>放一张[走马观花]的时候，拍的一张园林照。听解说员介绍，右侧的亭子是按照[神龙见首不见尾]的意境设计的：<br><img src=\"https://i.loli.net/2019/10/14/Wyamv3ucXGQ5ITA.jpg\" width=\"400\" height=\"300\" alt=\"园林\"></p>\n<h1 id=\"商务座\"><a href=\"#商务座\" class=\"headerlink\" title=\"商务座\"></a>商务座</h1><h1 id=\"找酒店\"><a href=\"#找酒店\" class=\"headerlink\" title=\"找酒店\"></a>找酒店</h1><h1 id=\"坐班车\"><a href=\"#坐班车\" class=\"headerlink\" title=\"坐班车\"></a>坐班车</h1>"},{"title":"博客搭建折腾记","date":"2017-08-06T14:27:56.000Z","update":"2017-08-06T14:27:56.000Z","copyright":true,"top":5,"_content":"\n搭建博客的正确姿势。\n\n\n\n<!-- more -->\n\n\n# 前言 #\n\n\n## 博客初识 ##\n\n开始写博客只是用CSDN发布，本来开开心心。\n\n然而有一天，我的一篇博客被系统直接删掉了，原因是含有敏感词汇。联系了管理员之后才恢复:neutral_face:。\n\n又想起之前一天发了好几篇，被系统禁发了。 有点小生气，发个博客也这么麻烦。索性就自己搭一个好了，然后就开始了折腾之旅。\n\n或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。\n\n说白了，搭建博客就是用一堆别人的东西，来做一个我们自己的东西。Hexo、主题、GithubPages、CodingPages，这些没一样是你的。而且这些都是免费的，除了买域名要花一只棒棒糖的钱（我搭建博客一共就花了3块钱:joy:）\n\n所以，人家设计的东西，只要拿来用就可以了。\n\n## 背景知识 ##\n\n\n- Github：建立一个github.io的库，没有账号的话可以注册一个。\n- Hexo：需要下载它的安装包和主题，你只需要知道一些部署博客的命令（不超过5条）。这些命令也可以不会，因为文档里都有。\n- GithubPages：是Github推出的功能，只要建立了github.io库，就默认在使用。它相当于一个服务器，可以保存所有博客文件，是电脑上博客站点的一份备份/\n- CodingPages：跟GithubPages作用相同，但这个是国内的。为了双重保障和你的博客运行速度。建立还是设置下它。\n\n所以，搭建博客时可以什么都不懂。但为了以后能更好的操作博客，建议在搭建成功之后，好好学习一下Github的使用。网上的教程也有很多，这里就不再赘述。\n\n虽然我们可以什么都不懂，但以下3样东西必须要有：\n\n- 耐心：搭建博客是一件非常折腾的事情，所以耐心很重要\n- 细心：一定要细心，确保每一步都是正确的。\n- 一定的学习能力和钻研精神，遇到困难一定要面对它，主动解决。\n\n\n\n## 为什么搭建博客？ ##\n\n这个问题相信你已经有了自己的答案，但我还是建议你看看这2篇文章：\n\n\n\n- [我为什么坚持写博客？](https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402564613&idx=1&sn=d2b7c75b11046a0dcf8df77e737d2b4c#rd)\n- [为什么你要写博客？](https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat)\n\n\n## 搭建博客需要多长时间？ ##\n\n这个因人而异，在我看来，有这么几种：\n\n- 半天：只是搭建，不涉及到换域名和个性化，并且了解背景知识。那么只要半天便可以搭建完成\n- 一天：需要了解背景知识，并且换了域名和主题，但没有太多的个性化\n- 两天：设置了评论，字数统计等各种个性化设置（比如我）\n- 三天甚至更多：各种找个性化插件和设置，一直在折腾的人\n\n当然，前两种都是你没有遇到太大的坑或者困难所给出的估计时间。如果你在搭建的时候碰到了很多的问题，那么这个时间就得延长了。因为这种问题一般不好查。\n\n----------\n\n\n# 背景知识 #\n\n搭建博客之前，你应该知道自己在做的是什么。先把事情做对，再把事情做好。所以你需要了解一些背景知识。\n\n## 建立博客的渠道 ##\n\n\n>通常来说，建立博客的通常渠道包括以下3种：\n\n\n- 在博客平台上注册，比如 博客园、CSDN、新浪博客 等。\n- 利用博客框架搭建，如 WordPress、Jekyll、hexo 等。\n- 自己用代码写一个。\n\n其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。\n\n而我们要做的，就是第二种：既不受限，难度也不大。\n\n## 为什么选择GithubPages和Hexo ##\n\n用第二种方式搭建博客也有很多方法，但主流的有两种：\n\n- Wordpress\n- GitHub Pages+Hexo\n\n很多人用 Wordpress，为什么我要用 GitHub Pages 来搭建？\n\n- 开始我也不知道用哪个，但在网上搜了教程后，发现wordpress比Hexo要麻烦很多。\n- Hexo是开源在Github上的，而且轻快便捷\n- GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。\n- 学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多\n- 顺便看看 GitHub 工作原理，最好的团队协作流程\n- GitHub 是趋势\n\n\n\n## 概念介绍 ##\n\n### HEXO ###\n\nHexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：[HexoGithub](https://github.com/hexojs/hexo \"HexoGithub\")，它主要有以下优点：\n\n- 极速生成静态页面\n- 一键部署博客\n- 丰富的插件支持\n- 支持 Markdown\n\n更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：[Hexdocs](https://hexo.io/docs/ \"Hexo\")\n\n\n### GitHub ###\n\nGitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。博主英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么，\n\n也有好多人调侃它是全球同性交友平台，其实我不太懂这个梗（女程序员也是很多的好么）\n\n\n### GitHub Pages ###\n\nGitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。\n\n### CodingPages ###\n\n和GithubPages功能相同，其对应的Coding平台也可以实现和Github相似的功能。但没有后者那么出名。是香港的公司，也算是国内的。\n\n看了这些，我相信你一定还是一脸懵逼的。但你可以简单理解成下边的的一段话：\n\n> 利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后利用网络将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。\n\n\n如果你还想了解更多背景知识，可以看看这篇文章：[搭建个人博客，你需要知道这些](http://www.jianshu.com/p/0c3663c4f0ef)\n\n----------\n\n\n# 搭建过程 #\n\n\n## 搭建步骤 ##\n\n一般来说，搭建博客有以下几个步骤：\n\n\n1. 获得个人网站域名\n2. GitHub创建个人仓库\n3. 安装Git\n4. 安装Node.js\n5. 安装Hexo\n6. 推送网站\n7. 绑定域名\n8. 在Coding上部署你的网站\n\n**其中，1.7.8你可以不做。但剩下的必须要做，一步都不能少，也不能错。在你看下边推荐的博客的时候，不要忘记看看我下边的建议。**\n\n1-7步请看：这篇博客不只前7步，如果你做完了就可以往下做，因为后边的都是属于个性化部分，所以博主在这里没有显示。[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&utm_medium=social \"搭建博客\")\n\n第8步请看：这篇博客是在你做完了前7步的基础上做的。[hexo干货系列：（四）将hexo博客同时托管到github和coding](http://www.jianshu.com/p/25587e049d54 \"双部署\")，这篇博客也讲了怎么在CodingPages部署，可以和上一篇对照着看：[我的Hexo博客站的创建历程(一)【Github&Coding双管齐下部署Hexo】](http://redredleaf.me/%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B%E4%B8%80.html#more)\n\n\n\n## 我的建议和踩过的坑 ##\n\n\n\n> 第一篇：\n\n- 域名建议买.top，比较便宜。当然，土豪随意。\n- 下载Node.js或Git时，由于众所周知的原因，下载速度会很慢。这时你需要看Hexo的官方文档，上边给出了离线下载的地址：[Hexdocs](https://hexo.io/docs/ \"Hexo\")\n- 在安装Hexo这一步，hexo init blog及其之后的命令都是在Blog/blog这个目录下进行的，一定要注意，不能弄错了。博主刚开始就是搞错了路径，结果一直报错。。。\n- 如果你在安装Hexo或者之前的步骤中有报错，建议你重新下载安装。因为这之前的过程全是安装的部分，一旦出错，没有别的原因，一定是你的操作有问题。而且你解决错误的时间一定要比重新安装耗费的时间长。\n- 关于Markdown，sublime是个好东西。\n\n\n> 第二篇：\n\n1.关于域名绑定，再次说明。血的教训告诉我们，Only需要添加两个解析。没有A记录，like this：\n\n![解析](https://i.loli.net/2019/05/16/5cdd170b0712c43179.png)\n\n之后可以在[此网站](http://ping.chinaz.com/)对你的博客进行测试，看看你的博客是否可以在国内解析到Coding，国外解析到Github。访问速度是否得到提升。\n\n2.coding配置完成后，加载博客时会出现其广告界面，如果你想去掉呢，coding给出的解决办法是在网站底部加上codingpages官网链接或者加logo\n\n\n\n\n----------\n\n\n# 个性化 #\n\n\n\n> 终于到了万众瞩目的个性化步骤了，到这里，想必你已经根据博主推荐的链接成功搭建好了博客。\n\n下面来具体说说个性化。\n\n## 主题选择 ##\n\n如果你按照上边搭建博客时推荐的文章那样，选择了next主题。那就不用多说。如果你觉得next主题不符合你的Style，可以参考这篇文章选择你喜欢的主题：[Hexo博客主题推荐](http://www.jianshu.com/p/bcdbe7347c8d)\n\n但我还是推荐你用next主题，原因：\n\n- next主题是github上最流行的主题，star和fork的数量远远超过了别的主题。所以相信群众的选择。\n- next主题的主题配置文件本就内置了许多插件，在个性化的过程中你只需要把flase改成true或者加上对应服务的id就可以直接使用。极为方便。这是其他很多主题没有做到的一点\n- next主题内部还分为4个主题方案：Muse、Mist、Pisces、Gemini，可以自由选择，更加多元化。\n- 界面高端大气，配色低调奢华。\n\n\n**ps：如果你没有用next主题，那么以下个性化设置就不用看了。因为它们都是next的配置。**\n\n\n## 按照主题文档设置 ##\n\n选定了主题后，建议先看看主题的文档进行个性化设置。里面是最基本的标签、分类设置，还有第三方服务设置：[next主题配置](http://theme-next.iissnan.com/theme-settings.html)\n\n\n\n## 其他的个性化设置 ##\n\n因为用的是next主题，所以这里也是针对于next主题的个性化配置。我博客的所有个性化都是来自这些链接：\n\n- 网易云音乐链接设置，参考博客搭建时推荐的第一篇博客\n- 这一篇看它的个性化设置部分：[Hexo搭建博客教程](https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/)\n- [RSS和High特效](http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/)\n- 这篇真的厉害了，有30种特效：[hexo的next主题个性化教程:打造炫酷网站](https://zhuanlan.zhihu.com/p/28128674)\n- 主讲第3方服务：[配置第三方服务](https://zhuanlan.zhihu.com/p/22745430)\n- 这个也很方便，创建新文章后不用再去找了：[Hexo添加文章时自动打开编辑器](https://notes.wanghao.work/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html)\n- 创建一个菜单页面作为文章目录：[hexo下新建页面下如何放多个文章](https://www.zhihu.com/question/33324071)\n- 博客加密：[加密插件Github，issue里有解决next主题兼容的方法](https://github.com/MikeCoder/hexo-blog-encrypt)\n\n上边这些链接里的设置，均为博主亲测有效。从这些链接可以看出，博主也是折腾了很久的。。。\n\n\n## 在Github上看issue或者提issue ##\n\n如果你还想折腾，还有两种途径：\n\n\n- 可以看看next在Github上的issue：这些都是别人提的，可能会有你想要的设置。如果你遇到了问题，也可以自己提issue。这是网址：[next/issues](https://github.com/iissnan/hexo-theme-next/issues)\n- 去Hexo的官方插件页面找，这里的插件很多。只有你想不到，没有你找不到：[Hexo插件](https://hexo.io/plugins/ \"Hexo插件\")\n\n## 我的建议 ##\n\n\n- 个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，Sublime你值得拥有\n- 关于图床，博主之前用的七牛云，但后来通知那些免费外链有效期过了，所以所有图片都没了。。。这里推荐[SM.MS](https://sm.ms/)和[PicGo](https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E)\n- 虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。\n- **强烈建议：** 将博客源文件用github托管，可参考[这篇回答](https://www.zhihu.com/question/21193762/answer/489124966)\n\n## 网站链接 ##\n\n>下面是博客搭建过程中用到的一些平台和网站的链接，比如Livere提供的评论功能，七牛图床等：\n\n\n\n- Hexo: [https://hexo.io/](https://hexo.io/) \n- 阿里云: [https://www.aliyun.com/](https://www.aliyun.com/)\n- Livere: [https://livere.com/ ](https://livere.com/ )\n- Leancloud: [https://leancloud.cn/](https://leancloud.cn/)\n- 七牛: [https://www.qiniu.com/ ](https://www.qiniu.com/ )\n\n\n","source":"_posts/Hexo-GithubPages-CodingPages搭建自己的个人博客.md","raw":"---\ntitle: 博客搭建折腾记\ndate: 2017-08-06 22:27:56\nupdate: 2017-08-06 22:27:56\ntags: [Hexo,GithubPages,CodingPages]\ncategories: 学习小记\ncopyright: true\ntop: 5\n---\n\n搭建博客的正确姿势。\n\n\n\n<!-- more -->\n\n\n# 前言 #\n\n\n## 博客初识 ##\n\n开始写博客只是用CSDN发布，本来开开心心。\n\n然而有一天，我的一篇博客被系统直接删掉了，原因是含有敏感词汇。联系了管理员之后才恢复:neutral_face:。\n\n又想起之前一天发了好几篇，被系统禁发了。 有点小生气，发个博客也这么麻烦。索性就自己搭一个好了，然后就开始了折腾之旅。\n\n或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。\n\n说白了，搭建博客就是用一堆别人的东西，来做一个我们自己的东西。Hexo、主题、GithubPages、CodingPages，这些没一样是你的。而且这些都是免费的，除了买域名要花一只棒棒糖的钱（我搭建博客一共就花了3块钱:joy:）\n\n所以，人家设计的东西，只要拿来用就可以了。\n\n## 背景知识 ##\n\n\n- Github：建立一个github.io的库，没有账号的话可以注册一个。\n- Hexo：需要下载它的安装包和主题，你只需要知道一些部署博客的命令（不超过5条）。这些命令也可以不会，因为文档里都有。\n- GithubPages：是Github推出的功能，只要建立了github.io库，就默认在使用。它相当于一个服务器，可以保存所有博客文件，是电脑上博客站点的一份备份/\n- CodingPages：跟GithubPages作用相同，但这个是国内的。为了双重保障和你的博客运行速度。建立还是设置下它。\n\n所以，搭建博客时可以什么都不懂。但为了以后能更好的操作博客，建议在搭建成功之后，好好学习一下Github的使用。网上的教程也有很多，这里就不再赘述。\n\n虽然我们可以什么都不懂，但以下3样东西必须要有：\n\n- 耐心：搭建博客是一件非常折腾的事情，所以耐心很重要\n- 细心：一定要细心，确保每一步都是正确的。\n- 一定的学习能力和钻研精神，遇到困难一定要面对它，主动解决。\n\n\n\n## 为什么搭建博客？ ##\n\n这个问题相信你已经有了自己的答案，但我还是建议你看看这2篇文章：\n\n\n\n- [我为什么坚持写博客？](https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402564613&idx=1&sn=d2b7c75b11046a0dcf8df77e737d2b4c#rd)\n- [为什么你要写博客？](https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat)\n\n\n## 搭建博客需要多长时间？ ##\n\n这个因人而异，在我看来，有这么几种：\n\n- 半天：只是搭建，不涉及到换域名和个性化，并且了解背景知识。那么只要半天便可以搭建完成\n- 一天：需要了解背景知识，并且换了域名和主题，但没有太多的个性化\n- 两天：设置了评论，字数统计等各种个性化设置（比如我）\n- 三天甚至更多：各种找个性化插件和设置，一直在折腾的人\n\n当然，前两种都是你没有遇到太大的坑或者困难所给出的估计时间。如果你在搭建的时候碰到了很多的问题，那么这个时间就得延长了。因为这种问题一般不好查。\n\n----------\n\n\n# 背景知识 #\n\n搭建博客之前，你应该知道自己在做的是什么。先把事情做对，再把事情做好。所以你需要了解一些背景知识。\n\n## 建立博客的渠道 ##\n\n\n>通常来说，建立博客的通常渠道包括以下3种：\n\n\n- 在博客平台上注册，比如 博客园、CSDN、新浪博客 等。\n- 利用博客框架搭建，如 WordPress、Jekyll、hexo 等。\n- 自己用代码写一个。\n\n其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。\n\n而我们要做的，就是第二种：既不受限，难度也不大。\n\n## 为什么选择GithubPages和Hexo ##\n\n用第二种方式搭建博客也有很多方法，但主流的有两种：\n\n- Wordpress\n- GitHub Pages+Hexo\n\n很多人用 Wordpress，为什么我要用 GitHub Pages 来搭建？\n\n- 开始我也不知道用哪个，但在网上搜了教程后，发现wordpress比Hexo要麻烦很多。\n- Hexo是开源在Github上的，而且轻快便捷\n- GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。\n- 学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多\n- 顺便看看 GitHub 工作原理，最好的团队协作流程\n- GitHub 是趋势\n\n\n\n## 概念介绍 ##\n\n### HEXO ###\n\nHexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：[HexoGithub](https://github.com/hexojs/hexo \"HexoGithub\")，它主要有以下优点：\n\n- 极速生成静态页面\n- 一键部署博客\n- 丰富的插件支持\n- 支持 Markdown\n\n更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：[Hexdocs](https://hexo.io/docs/ \"Hexo\")\n\n\n### GitHub ###\n\nGitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。博主英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么，\n\n也有好多人调侃它是全球同性交友平台，其实我不太懂这个梗（女程序员也是很多的好么）\n\n\n### GitHub Pages ###\n\nGitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。\n\n### CodingPages ###\n\n和GithubPages功能相同，其对应的Coding平台也可以实现和Github相似的功能。但没有后者那么出名。是香港的公司，也算是国内的。\n\n看了这些，我相信你一定还是一脸懵逼的。但你可以简单理解成下边的的一段话：\n\n> 利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后利用网络将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。\n\n\n如果你还想了解更多背景知识，可以看看这篇文章：[搭建个人博客，你需要知道这些](http://www.jianshu.com/p/0c3663c4f0ef)\n\n----------\n\n\n# 搭建过程 #\n\n\n## 搭建步骤 ##\n\n一般来说，搭建博客有以下几个步骤：\n\n\n1. 获得个人网站域名\n2. GitHub创建个人仓库\n3. 安装Git\n4. 安装Node.js\n5. 安装Hexo\n6. 推送网站\n7. 绑定域名\n8. 在Coding上部署你的网站\n\n**其中，1.7.8你可以不做。但剩下的必须要做，一步都不能少，也不能错。在你看下边推荐的博客的时候，不要忘记看看我下边的建议。**\n\n1-7步请看：这篇博客不只前7步，如果你做完了就可以往下做，因为后边的都是属于个性化部分，所以博主在这里没有显示。[GitHub+Hexo 搭建个人网站详细教程](https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&utm_medium=social \"搭建博客\")\n\n第8步请看：这篇博客是在你做完了前7步的基础上做的。[hexo干货系列：（四）将hexo博客同时托管到github和coding](http://www.jianshu.com/p/25587e049d54 \"双部署\")，这篇博客也讲了怎么在CodingPages部署，可以和上一篇对照着看：[我的Hexo博客站的创建历程(一)【Github&Coding双管齐下部署Hexo】](http://redredleaf.me/%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B%E4%B8%80.html#more)\n\n\n\n## 我的建议和踩过的坑 ##\n\n\n\n> 第一篇：\n\n- 域名建议买.top，比较便宜。当然，土豪随意。\n- 下载Node.js或Git时，由于众所周知的原因，下载速度会很慢。这时你需要看Hexo的官方文档，上边给出了离线下载的地址：[Hexdocs](https://hexo.io/docs/ \"Hexo\")\n- 在安装Hexo这一步，hexo init blog及其之后的命令都是在Blog/blog这个目录下进行的，一定要注意，不能弄错了。博主刚开始就是搞错了路径，结果一直报错。。。\n- 如果你在安装Hexo或者之前的步骤中有报错，建议你重新下载安装。因为这之前的过程全是安装的部分，一旦出错，没有别的原因，一定是你的操作有问题。而且你解决错误的时间一定要比重新安装耗费的时间长。\n- 关于Markdown，sublime是个好东西。\n\n\n> 第二篇：\n\n1.关于域名绑定，再次说明。血的教训告诉我们，Only需要添加两个解析。没有A记录，like this：\n\n![解析](https://i.loli.net/2019/05/16/5cdd170b0712c43179.png)\n\n之后可以在[此网站](http://ping.chinaz.com/)对你的博客进行测试，看看你的博客是否可以在国内解析到Coding，国外解析到Github。访问速度是否得到提升。\n\n2.coding配置完成后，加载博客时会出现其广告界面，如果你想去掉呢，coding给出的解决办法是在网站底部加上codingpages官网链接或者加logo\n\n\n\n\n----------\n\n\n# 个性化 #\n\n\n\n> 终于到了万众瞩目的个性化步骤了，到这里，想必你已经根据博主推荐的链接成功搭建好了博客。\n\n下面来具体说说个性化。\n\n## 主题选择 ##\n\n如果你按照上边搭建博客时推荐的文章那样，选择了next主题。那就不用多说。如果你觉得next主题不符合你的Style，可以参考这篇文章选择你喜欢的主题：[Hexo博客主题推荐](http://www.jianshu.com/p/bcdbe7347c8d)\n\n但我还是推荐你用next主题，原因：\n\n- next主题是github上最流行的主题，star和fork的数量远远超过了别的主题。所以相信群众的选择。\n- next主题的主题配置文件本就内置了许多插件，在个性化的过程中你只需要把flase改成true或者加上对应服务的id就可以直接使用。极为方便。这是其他很多主题没有做到的一点\n- next主题内部还分为4个主题方案：Muse、Mist、Pisces、Gemini，可以自由选择，更加多元化。\n- 界面高端大气，配色低调奢华。\n\n\n**ps：如果你没有用next主题，那么以下个性化设置就不用看了。因为它们都是next的配置。**\n\n\n## 按照主题文档设置 ##\n\n选定了主题后，建议先看看主题的文档进行个性化设置。里面是最基本的标签、分类设置，还有第三方服务设置：[next主题配置](http://theme-next.iissnan.com/theme-settings.html)\n\n\n\n## 其他的个性化设置 ##\n\n因为用的是next主题，所以这里也是针对于next主题的个性化配置。我博客的所有个性化都是来自这些链接：\n\n- 网易云音乐链接设置，参考博客搭建时推荐的第一篇博客\n- 这一篇看它的个性化设置部分：[Hexo搭建博客教程](https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/)\n- [RSS和High特效](http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/)\n- 这篇真的厉害了，有30种特效：[hexo的next主题个性化教程:打造炫酷网站](https://zhuanlan.zhihu.com/p/28128674)\n- 主讲第3方服务：[配置第三方服务](https://zhuanlan.zhihu.com/p/22745430)\n- 这个也很方便，创建新文章后不用再去找了：[Hexo添加文章时自动打开编辑器](https://notes.wanghao.work/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html)\n- 创建一个菜单页面作为文章目录：[hexo下新建页面下如何放多个文章](https://www.zhihu.com/question/33324071)\n- 博客加密：[加密插件Github，issue里有解决next主题兼容的方法](https://github.com/MikeCoder/hexo-blog-encrypt)\n\n上边这些链接里的设置，均为博主亲测有效。从这些链接可以看出，博主也是折腾了很久的。。。\n\n\n## 在Github上看issue或者提issue ##\n\n如果你还想折腾，还有两种途径：\n\n\n- 可以看看next在Github上的issue：这些都是别人提的，可能会有你想要的设置。如果你遇到了问题，也可以自己提issue。这是网址：[next/issues](https://github.com/iissnan/hexo-theme-next/issues)\n- 去Hexo的官方插件页面找，这里的插件很多。只有你想不到，没有你找不到：[Hexo插件](https://hexo.io/plugins/ \"Hexo插件\")\n\n## 我的建议 ##\n\n\n- 个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，Sublime你值得拥有\n- 关于图床，博主之前用的七牛云，但后来通知那些免费外链有效期过了，所以所有图片都没了。。。这里推荐[SM.MS](https://sm.ms/)和[PicGo](https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E)\n- 虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。\n- **强烈建议：** 将博客源文件用github托管，可参考[这篇回答](https://www.zhihu.com/question/21193762/answer/489124966)\n\n## 网站链接 ##\n\n>下面是博客搭建过程中用到的一些平台和网站的链接，比如Livere提供的评论功能，七牛图床等：\n\n\n\n- Hexo: [https://hexo.io/](https://hexo.io/) \n- 阿里云: [https://www.aliyun.com/](https://www.aliyun.com/)\n- Livere: [https://livere.com/ ](https://livere.com/ )\n- Leancloud: [https://leancloud.cn/](https://leancloud.cn/)\n- 七牛: [https://www.qiniu.com/ ](https://www.qiniu.com/ )\n\n\n","slug":"Hexo-GithubPages-CodingPages搭建自己的个人博客","published":1,"updated":"2019-10-11T06:13:47.700Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck1lqnkcv0021f363goy7kxh2","content":"<p>搭建博客的正确姿势。</p>\n<a id=\"more\"></a>\n<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"博客初识\"><a href=\"#博客初识\" class=\"headerlink\" title=\"博客初识\"></a>博客初识</h2><p>开始写博客只是用CSDN发布，本来开开心心。</p>\n<p>然而有一天，我的一篇博客被系统直接删掉了，原因是含有敏感词汇。联系了管理员之后才恢复<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f610.png?v8\">😐</span>。</p>\n<p>又想起之前一天发了好几篇，被系统禁发了。 有点小生气，发个博客也这么麻烦。索性就自己搭一个好了，然后就开始了折腾之旅。</p>\n<p>或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。</p>\n<p>说白了，搭建博客就是用一堆别人的东西，来做一个我们自己的东西。Hexo、主题、GithubPages、CodingPages，这些没一样是你的。而且这些都是免费的，除了买域名要花一只棒棒糖的钱（我搭建博客一共就花了3块钱<span class=\"github-emoji\" style=\"color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain\" data-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8\">😂</span>）</p>\n<p>所以，人家设计的东西，只要拿来用就可以了。</p>\n<h2 id=\"背景知识\"><a href=\"#背景知识\" class=\"headerlink\" title=\"背景知识\"></a>背景知识</h2><ul>\n<li>Github：建立一个github.io的库，没有账号的话可以注册一个。</li>\n<li>Hexo：需要下载它的安装包和主题，你只需要知道一些部署博客的命令（不超过5条）。这些命令也可以不会，因为文档里都有。</li>\n<li>GithubPages：是Github推出的功能，只要建立了github.io库，就默认在使用。它相当于一个服务器，可以保存所有博客文件，是电脑上博客站点的一份备份/</li>\n<li>CodingPages：跟GithubPages作用相同，但这个是国内的。为了双重保障和你的博客运行速度。建立还是设置下它。</li>\n</ul>\n<p>所以，搭建博客时可以什么都不懂。但为了以后能更好的操作博客，建议在搭建成功之后，好好学习一下Github的使用。网上的教程也有很多，这里就不再赘述。</p>\n<p>虽然我们可以什么都不懂，但以下3样东西必须要有：</p>\n<ul>\n<li>耐心：搭建博客是一件非常折腾的事情，所以耐心很重要</li>\n<li>细心：一定要细心，确保每一步都是正确的。</li>\n<li>一定的学习能力和钻研精神，遇到困难一定要面对它，主动解决。</li>\n</ul>\n<h2 id=\"为什么搭建博客？\"><a href=\"#为什么搭建博客？\" class=\"headerlink\" title=\"为什么搭建博客？\"></a>为什么搭建博客？</h2><p>这个问题相信你已经有了自己的答案，但我还是建议你看看这2篇文章：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402564613&idx=1&sn=d2b7c75b11046a0dcf8df77e737d2b4c#rd\" target=\"_blank\" rel=\"noopener\">我为什么坚持写博客？</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat\" target=\"_blank\" rel=\"noopener\">为什么你要写博客？</a></li>\n</ul>\n<h2 id=\"搭建博客需要多长时间？\"><a href=\"#搭建博客需要多长时间？\" class=\"headerlink\" title=\"搭建博客需要多长时间？\"></a>搭建博客需要多长时间？</h2><p>这个因人而异，在我看来，有这么几种：</p>\n<ul>\n<li>半天：只是搭建，不涉及到换域名和个性化，并且了解背景知识。那么只要半天便可以搭建完成</li>\n<li>一天：需要了解背景知识，并且换了域名和主题，但没有太多的个性化</li>\n<li>两天：设置了评论，字数统计等各种个性化设置（比如我）</li>\n<li>三天甚至更多：各种找个性化插件和设置，一直在折腾的人</li>\n</ul>\n<p>当然，前两种都是你没有遇到太大的坑或者困难所给出的估计时间。如果你在搭建的时候碰到了很多的问题，那么这个时间就得延长了。因为这种问题一般不好查。</p>\n<hr>\n<h1 id=\"背景知识-1\"><a href=\"#背景知识-1\" class=\"headerlink\" title=\"背景知识\"></a>背景知识</h1><p>搭建博客之前，你应该知道自己在做的是什么。先把事情做对，再把事情做好。所以你需要了解一些背景知识。</p>\n<h2 id=\"建立博客的渠道\"><a href=\"#建立博客的渠道\" class=\"headerlink\" title=\"建立博客的渠道\"></a>建立博客的渠道</h2><blockquote>\n<p>通常来说，建立博客的通常渠道包括以下3种：</p>\n</blockquote>\n<ul>\n<li>在博客平台上注册，比如 博客园、CSDN、新浪博客 等。</li>\n<li>利用博客框架搭建，如 WordPress、Jekyll、hexo 等。</li>\n<li>自己用代码写一个。</li>\n</ul>\n<p>其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。</p>\n<p>而我们要做的，就是第二种：既不受限，难度也不大。</p>\n<h2 id=\"为什么选择GithubPages和Hexo\"><a href=\"#为什么选择GithubPages和Hexo\" class=\"headerlink\" title=\"为什么选择GithubPages和Hexo\"></a>为什么选择GithubPages和Hexo</h2><p>用第二种方式搭建博客也有很多方法，但主流的有两种：</p>\n<ul>\n<li>Wordpress</li>\n<li>GitHub Pages+Hexo</li>\n</ul>\n<p>很多人用 Wordpress，为什么我要用 GitHub Pages 来搭建？</p>\n<ul>\n<li>开始我也不知道用哪个，但在网上搜了教程后，发现wordpress比Hexo要麻烦很多。</li>\n<li>Hexo是开源在Github上的，而且轻快便捷</li>\n<li>GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。</li>\n<li>学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多</li>\n<li>顺便看看 GitHub 工作原理，最好的团队协作流程</li>\n<li>GitHub 是趋势</li>\n</ul>\n<h2 id=\"概念介绍\"><a href=\"#概念介绍\" class=\"headerlink\" title=\"概念介绍\"></a>概念介绍</h2><h3 id=\"HEXO\"><a href=\"#HEXO\" class=\"headerlink\" title=\"HEXO\"></a>HEXO</h3><p>Hexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：<a href=\"https://github.com/hexojs/hexo\" title=\"HexoGithub\" target=\"_blank\" rel=\"noopener\">HexoGithub</a>，它主要有以下优点：</p>\n<ul>\n<li>极速生成静态页面</li>\n<li>一键部署博客</li>\n<li>丰富的插件支持</li>\n<li>支持 Markdown</li>\n</ul>\n<p>更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：<a href=\"https://hexo.io/docs/\" title=\"Hexo\" target=\"_blank\" rel=\"noopener\">Hexdocs</a></p>\n<h3 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h3><p>GitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。博主英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么，</p>\n<p>也有好多人调侃它是全球同性交友平台，其实我不太懂这个梗（女程序员也是很多的好么）</p>\n<h3 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h3><p>GitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。</p>\n<h3 id=\"CodingPages\"><a href=\"#CodingPages\" class=\"headerlink\" title=\"CodingPages\"></a>CodingPages</h3><p>和GithubPages功能相同，其对应的Coding平台也可以实现和Github相似的功能。但没有后者那么出名。是香港的公司，也算是国内的。</p>\n<p>看了这些，我相信你一定还是一脸懵逼的。但你可以简单理解成下边的的一段话：</p>\n<blockquote>\n<p>利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后利用网络将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。</p>\n</blockquote>\n<p>如果你还想了解更多背景知识，可以看看这篇文章：<a href=\"http://www.jianshu.com/p/0c3663c4f0ef\" target=\"_blank\" rel=\"noopener\">搭建个人博客，你需要知道这些</a></p>\n<hr>\n<h1 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h1><h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><p>一般来说，搭建博客有以下几个步骤：</p>\n<ol>\n<li>获得个人网站域名</li>\n<li>GitHub创建个人仓库</li>\n<li>安装Git</li>\n<li>安装Node.js</li>\n<li>安装Hexo</li>\n<li>推送网站</li>\n<li>绑定域名</li>\n<li>在Coding上部署你的网站</li>\n</ol>\n<p><strong>其中，1.7.8你可以不做。但剩下的必须要做，一步都不能少，也不能错。在你看下边推荐的博客的时候，不要忘记看看我下边的建议。</strong></p>\n<p>1-7步请看：这篇博客不只前7步，如果你做完了就可以往下做，因为后边的都是属于个性化部分，所以博主在这里没有显示。<a href=\"https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&utm_medium=social\" title=\"搭建博客\" target=\"_blank\" rel=\"noopener\">GitHub+Hexo 搭建个人网站详细教程</a></p>\n<p>第8步请看：这篇博客是在你做完了前7步的基础上做的。<a href=\"http://www.jianshu.com/p/25587e049d54\" title=\"双部署\" target=\"_blank\" rel=\"noopener\">hexo干货系列：（四）将hexo博客同时托管到github和coding</a>，这篇博客也讲了怎么在CodingPages部署，可以和上一篇对照着看：<a href=\"http://redredleaf.me/%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B%E4%B8%80.html#more\" target=\"_blank\" rel=\"noopener\">我的Hexo博客站的创建历程(一)【Github&Coding双管齐下部署Hexo】</a></p>\n<h2 id=\"我的建议和踩过的坑\"><a href=\"#我的建议和踩过的坑\" class=\"headerlink\" title=\"我的建议和踩过的坑\"></a>我的建议和踩过的坑</h2><blockquote>\n<p>第一篇：</p>\n</blockquote>\n<ul>\n<li>域名建议买.top，比较便宜。当然，土豪随意。</li>\n<li>下载Node.js或Git时，由于众所周知的原因，下载速度会很慢。这时你需要看Hexo的官方文档，上边给出了离线下载的地址：<a href=\"https://hexo.io/docs/\" title=\"Hexo\" target=\"_blank\" rel=\"noopener\">Hexdocs</a></li>\n<li>在安装Hexo这一步，hexo init blog及其之后的命令都是在Blog/blog这个目录下进行的，一定要注意，不能弄错了。博主刚开始就是搞错了路径，结果一直报错。。。</li>\n<li>如果你在安装Hexo或者之前的步骤中有报错，建议你重新下载安装。因为这之前的过程全是安装的部分，一旦出错，没有别的原因，一定是你的操作有问题。而且你解决错误的时间一定要比重新安装耗费的时间长。</li>\n<li>关于Markdown，sublime是个好东西。</li>\n</ul>\n<blockquote>\n<p>第二篇：</p>\n</blockquote>\n<p>1.关于域名绑定，再次说明。血的教训告诉我们，Only需要添加两个解析。没有A记录，like this：</p>\n<p><img src=\"https://i.loli.net/2019/05/16/5cdd170b0712c43179.png\" alt=\"解析\"></p>\n<p>之后可以在<a href=\"http://ping.chinaz.com/\" target=\"_blank\" rel=\"noopener\">此网站</a>对你的博客进行测试，看看你的博客是否可以在国内解析到Coding，国外解析到Github。访问速度是否得到提升。</p>\n<p>2.coding配置完成后，加载博客时会出现其广告界面，如果你想去掉呢，coding给出的解决办法是在网站底部加上codingpages官网链接或者加logo</p>\n<hr>\n<h1 id=\"个性化\"><a href=\"#个性化\" class=\"headerlink\" title=\"个性化\"></a>个性化</h1><blockquote>\n<p>终于到了万众瞩目的个性化步骤了，到这里，想必你已经根据博主推荐的链接成功搭建好了博客。</p>\n</blockquote>\n<p>下面来具体说说个性化。</p>\n<h2 id=\"主题选择\"><a href=\"#主题选择\" class=\"headerlink\" title=\"主题选择\"></a>主题选择</h2><p>如果你按照上边搭建博客时推荐的文章那样，选择了next主题。那就不用多说。如果你觉得next主题不符合你的Style，可以参考这篇文章选择你喜欢的主题：<a href=\"http://www.jianshu.com/p/bcdbe7347c8d\" target=\"_blank\" rel=\"noopener\">Hexo博客主题推荐</a></p>\n<p>但我还是推荐你用next主题，原因：</p>\n<ul>\n<li>next主题是github上最流行的主题，star和fork的数量远远超过了别的主题。所以相信群众的选择。</li>\n<li>next主题的主题配置文件本就内置了许多插件，在个性化的过程中你只需要把flase改成true或者加上对应服务的id就可以直接使用。极为方便。这是其他很多主题没有做到的一点</li>\n<li>next主题内部还分为4个主题方案：Muse、Mist、Pisces、Gemini，可以自由选择，更加多元化。</li>\n<li>界面高端大气，配色低调奢华。</li>\n</ul>\n<p><strong>ps：如果你没有用next主题，那么以下个性化设置就不用看了。因为它们都是next的配置。</strong></p>\n<h2 id=\"按照主题文档设置\"><a href=\"#按照主题文档设置\" class=\"headerlink\" title=\"按照主题文档设置\"></a>按照主题文档设置</h2><p>选定了主题后，建议先看看主题的文档进行个性化设置。里面是最基本的标签、分类设置，还有第三方服务设置：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">next主题配置</a></p>\n<h2 id=\"其他的个性化设置\"><a href=\"#其他的个性化设置\" class=\"headerlink\" title=\"其他的个性化设置\"></a>其他的个性化设置</h2><p>因为用的是next主题，所以这里也是针对于next主题的个性化配置。我博客的所有个性化都是来自这些链接：</p>\n<ul>\n<li>网易云音乐链接设置，参考博客搭建时推荐的第一篇博客</li>\n<li>这一篇看它的个性化设置部分：<a href=\"https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/\" target=\"_blank\" rel=\"noopener\">Hexo搭建博客教程</a></li>\n<li><a href=\"http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/\" target=\"_blank\" rel=\"noopener\">RSS和High特效</a></li>\n<li>这篇真的厉害了，有30种特效：<a href=\"https://zhuanlan.zhihu.com/p/28128674\" target=\"_blank\" rel=\"noopener\">hexo的next主题个性化教程:打造炫酷网站</a></li>\n<li>主讲第3方服务：<a href=\"https://zhuanlan.zhihu.com/p/22745430\" target=\"_blank\" rel=\"noopener\">配置第三方服务</a></li>\n<li>这个也很方便，创建新文章后不用再去找了：<a href=\"https://notes.wanghao.work/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html\" target=\"_blank\" rel=\"noopener\">Hexo添加文章时自动打开编辑器</a></li>\n<li>创建一个菜单页面作为文章目录：<a href=\"https://www.zhihu.com/question/33324071\" target=\"_blank\" rel=\"noopener\">hexo下新建页面下如何放多个文章</a></li>\n<li>博客加密：<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">加密插件Github，issue里有解决next主题兼容的方法</a></li>\n</ul>\n<p>上边这些链接里的设置，均为博主亲测有效。从这些链接可以看出，博主也是折腾了很久的。。。</p>\n<h2 id=\"在Github上看issue或者提issue\"><a href=\"#在Github上看issue或者提issue\" class=\"headerlink\" title=\"在Github上看issue或者提issue\"></a>在Github上看issue或者提issue</h2><p>如果你还想折腾，还有两种途径：</p>\n<ul>\n<li>可以看看next在Github上的issue：这些都是别人提的，可能会有你想要的设置。如果你遇到了问题，也可以自己提issue。这是网址：<a href=\"https://github.com/iissnan/hexo-theme-next/issues\" target=\"_blank\" rel=\"noopener\">next/issues</a></li>\n<li>去Hexo的官方插件页面找，这里的插件很多。只有你想不到，没有你找不到：<a href=\"https://hexo.io/plugins/\" title=\"Hexo插件\" target=\"_blank\" rel=\"noopener\">Hexo插件</a></li>\n</ul>\n<h2 id=\"我的建议\"><a href=\"#我的建议\" class=\"headerlink\" title=\"我的建议\"></a>我的建议</h2><ul>\n<li>个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，Sublime你值得拥有</li>\n<li>关于图床，博主之前用的七牛云，但后来通知那些免费外链有效期过了，所以所有图片都没了。。。这里推荐<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">SM.MS</a>和<a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">PicGo</a></li>\n<li>虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。</li>\n<li><strong>强烈建议：</strong> 将博客源文件用github托管，可参考<a href=\"https://www.zhihu.com/question/21193762/answer/489124966\" target=\"_blank\" rel=\"noopener\">这篇回答</a></li>\n</ul>\n<h2 id=\"网站链接\"><a href=\"#网站链接\" class=\"headerlink\" title=\"网站链接\"></a>网站链接</h2><blockquote>\n<p>下面是博客搭建过程中用到的一些平台和网站的链接，比如Livere提供的评论功能，七牛图床等：</p>\n</blockquote>\n<ul>\n<li>Hexo: <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a> </li>\n<li>阿里云: <a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://www.aliyun.com/</a></li>\n<li>Livere: <a href=\"https://livere.com/\" target=\"_blank\" rel=\"noopener\">https://livere.com/ </a></li>\n<li>Leancloud: <a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">https://leancloud.cn/</a></li>\n<li>七牛: <a href=\"https://www.qiniu.com/\" target=\"_blank\" rel=\"noopener\">https://www.qiniu.com/ </a></li>\n</ul>\n<script>\n        document.querySelectorAll('.github-emoji')\n          .forEach(el => {\n            if (!el.dataset.src) { return; }\n            const img = document.createElement('img');\n            img.style = 'display:none !important;';\n            img.src = el.dataset.src;\n            img.addEventListener('error', () => {\n              img.remove();\n              el.style.color = 'inherit';\n              el.style.backgroundImage = 'none';\n              el.style.background = 'none';\n            });\n            img.addEventListener('load', () => {\n              img.remove();\n            });\n            document.body.appendChild(img);\n          });\n      </script>","site":{"data":{}},"length":4801,"excerpt":"<p>搭建博客的正确姿势。</p>","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><h2 id=\"博客初识\"><a href=\"#博客初识\" class=\"headerlink\" title=\"博客初识\"></a>博客初识</h2><p>开始写博客只是用CSDN发布，本来开开心心。</p>\n<p>然而有一天，我的一篇博客被系统直接删掉了，原因是含有敏感词汇。联系了管理员之后才恢复:neutral_face:。</p>\n<p>又想起之前一天发了好几篇，被系统禁发了。 有点小生气，发个博客也这么麻烦。索性就自己搭一个好了，然后就开始了折腾之旅。</p>\n<p>或许你不相信，但我确实见过有许多非互联网行业的人也搭建了自己的博客。所以在搭建博客这件事上，确实没有专业之分。</p>\n<p>说白了，搭建博客就是用一堆别人的东西，来做一个我们自己的东西。Hexo、主题、GithubPages、CodingPages，这些没一样是你的。而且这些都是免费的，除了买域名要花一只棒棒糖的钱（我搭建博客一共就花了3块钱:joy:）</p>\n<p>所以，人家设计的东西，只要拿来用就可以了。</p>\n<h2 id=\"背景知识\"><a href=\"#背景知识\" class=\"headerlink\" title=\"背景知识\"></a>背景知识</h2><ul>\n<li>Github：建立一个github.io的库，没有账号的话可以注册一个。</li>\n<li>Hexo：需要下载它的安装包和主题，你只需要知道一些部署博客的命令（不超过5条）。这些命令也可以不会，因为文档里都有。</li>\n<li>GithubPages：是Github推出的功能，只要建立了github.io库，就默认在使用。它相当于一个服务器，可以保存所有博客文件，是电脑上博客站点的一份备份/</li>\n<li>CodingPages：跟GithubPages作用相同，但这个是国内的。为了双重保障和你的博客运行速度。建立还是设置下它。</li>\n</ul>\n<p>所以，搭建博客时可以什么都不懂。但为了以后能更好的操作博客，建议在搭建成功之后，好好学习一下Github的使用。网上的教程也有很多，这里就不再赘述。</p>\n<p>虽然我们可以什么都不懂，但以下3样东西必须要有：</p>\n<ul>\n<li>耐心：搭建博客是一件非常折腾的事情，所以耐心很重要</li>\n<li>细心：一定要细心，确保每一步都是正确的。</li>\n<li>一定的学习能力和钻研精神，遇到困难一定要面对它，主动解决。</li>\n</ul>\n<h2 id=\"为什么搭建博客？\"><a href=\"#为什么搭建博客？\" class=\"headerlink\" title=\"为什么搭建博客？\"></a>为什么搭建博客？</h2><p>这个问题相信你已经有了自己的答案，但我还是建议你看看这2篇文章：</p>\n<ul>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&amp;mid=402564613&amp;idx=1&amp;sn=d2b7c75b11046a0dcf8df77e737d2b4c#rd\" target=\"_blank\" rel=\"noopener\">我为什么坚持写博客？</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/19743861?columnSlug=cnfeat\" target=\"_blank\" rel=\"noopener\">为什么你要写博客？</a></li>\n</ul>\n<h2 id=\"搭建博客需要多长时间？\"><a href=\"#搭建博客需要多长时间？\" class=\"headerlink\" title=\"搭建博客需要多长时间？\"></a>搭建博客需要多长时间？</h2><p>这个因人而异，在我看来，有这么几种：</p>\n<ul>\n<li>半天：只是搭建，不涉及到换域名和个性化，并且了解背景知识。那么只要半天便可以搭建完成</li>\n<li>一天：需要了解背景知识，并且换了域名和主题，但没有太多的个性化</li>\n<li>两天：设置了评论，字数统计等各种个性化设置（比如我）</li>\n<li>三天甚至更多：各种找个性化插件和设置，一直在折腾的人</li>\n</ul>\n<p>当然，前两种都是你没有遇到太大的坑或者困难所给出的估计时间。如果你在搭建的时候碰到了很多的问题，那么这个时间就得延长了。因为这种问题一般不好查。</p>\n<hr>\n<h1 id=\"背景知识-1\"><a href=\"#背景知识-1\" class=\"headerlink\" title=\"背景知识\"></a>背景知识</h1><p>搭建博客之前，你应该知道自己在做的是什么。先把事情做对，再把事情做好。所以你需要了解一些背景知识。</p>\n<h2 id=\"建立博客的渠道\"><a href=\"#建立博客的渠道\" class=\"headerlink\" title=\"建立博客的渠道\"></a>建立博客的渠道</h2><blockquote>\n<p>通常来说，建立博客的通常渠道包括以下3种：</p>\n</blockquote>\n<ul>\n<li>在博客平台上注册，比如 博客园、CSDN、新浪博客 等。</li>\n<li>利用博客框架搭建，如 WordPress、Jekyll、hexo 等。</li>\n<li>自己用代码写一个。</li>\n</ul>\n<p>其中，第一种最简单，也最受限，说不定还会被删帖删号（我就遇到过这种情况）。第二种稍复杂，另外需要自己找部署的服务器，但可定制化较高，是很多人的选择。最后一种，是在重复造轮子，不过从另一个方面来看，倒是锻炼编程能力的好方式。</p>\n<p>而我们要做的，就是第二种：既不受限，难度也不大。</p>\n<h2 id=\"为什么选择GithubPages和Hexo\"><a href=\"#为什么选择GithubPages和Hexo\" class=\"headerlink\" title=\"为什么选择GithubPages和Hexo\"></a>为什么选择GithubPages和Hexo</h2><p>用第二种方式搭建博客也有很多方法，但主流的有两种：</p>\n<ul>\n<li>Wordpress</li>\n<li>GitHub Pages+Hexo</li>\n</ul>\n<p>很多人用 Wordpress，为什么我要用 GitHub Pages 来搭建？</p>\n<ul>\n<li>开始我也不知道用哪个，但在网上搜了教程后，发现wordpress比Hexo要麻烦很多。</li>\n<li>Hexo是开源在Github上的，而且轻快便捷</li>\n<li>GitHub Pages 有 300M 免费空间，资料自己管理，保存可靠。</li>\n<li>学着用 GitHub，享受 GitHub 的便利，上面有很多大牛，眼界会开阔很多</li>\n<li>顺便看看 GitHub 工作原理，最好的团队协作流程</li>\n<li>GitHub 是趋势</li>\n</ul>\n<h2 id=\"概念介绍\"><a href=\"#概念介绍\" class=\"headerlink\" title=\"概念介绍\"></a>概念介绍</h2><h3 id=\"HEXO\"><a href=\"#HEXO\" class=\"headerlink\" title=\"HEXO\"></a>HEXO</h3><p>Hexo 是一个简单、快速、强大的静态博客框架，基于Node.js。由台湾大学生tommy351创建。并把它开源到了Github上，这里是它在Github上的地址：<a href=\"https://github.com/hexojs/hexo\" title=\"HexoGithub\" target=\"_blank\" rel=\"noopener\">HexoGithub</a>，它主要有以下优点：</p>\n<ul>\n<li>极速生成静态页面</li>\n<li>一键部署博客</li>\n<li>丰富的插件支持</li>\n<li>支持 Markdown</li>\n</ul>\n<p>更多内容可以查看Hexo的官方文档，建议你只看看介绍部分，其它的你现在也看不太懂。等你搭建好了博客再去详细了解其他的内容就会轻松很多：<a href=\"https://hexo.io/docs/\" title=\"Hexo\" target=\"_blank\" rel=\"noopener\">Hexdocs</a></p>\n<h3 id=\"GitHub\"><a href=\"#GitHub\" class=\"headerlink\" title=\"GitHub\"></a>GitHub</h3><p>GitHub是一个代码托管网站和社交编程网站。这里聚集了世界上各路技术牛叉的大牛，和最优秀的代码库。是全球程序员的天堂。因为是国外的，所以界面全是英文。博主英语过了六级刚开始接触的时候心都突突，不过不要怕，不是还有翻译么，</p>\n<p>也有好多人调侃它是全球同性交友平台，其实我不太懂这个梗（女程序员也是很多的好么）</p>\n<h3 id=\"GitHub-Pages\"><a href=\"#GitHub-Pages\" class=\"headerlink\" title=\"GitHub Pages\"></a>GitHub Pages</h3><p>GitHub Pages是用来托管 GitHub 上静态网页的免费站点，其他的不多说。</p>\n<h3 id=\"CodingPages\"><a href=\"#CodingPages\" class=\"headerlink\" title=\"CodingPages\"></a>CodingPages</h3><p>和GithubPages功能相同，其对应的Coding平台也可以实现和Github相似的功能。但没有后者那么出名。是香港的公司，也算是国内的。</p>\n<p>看了这些，我相信你一定还是一脸懵逼的。但你可以简单理解成下边的的一段话：</p>\n<blockquote>\n<p>利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后利用网络将它传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。</p>\n</blockquote>\n<p>如果你还想了解更多背景知识，可以看看这篇文章：<a href=\"http://www.jianshu.com/p/0c3663c4f0ef\" target=\"_blank\" rel=\"noopener\">搭建个人博客，你需要知道这些</a></p>\n<hr>\n<h1 id=\"搭建过程\"><a href=\"#搭建过程\" class=\"headerlink\" title=\"搭建过程\"></a>搭建过程</h1><h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><p>一般来说，搭建博客有以下几个步骤：</p>\n<ol>\n<li>获得个人网站域名</li>\n<li>GitHub创建个人仓库</li>\n<li>安装Git</li>\n<li>安装Node.js</li>\n<li>安装Hexo</li>\n<li>推送网站</li>\n<li>绑定域名</li>\n<li>在Coding上部署你的网站</li>\n</ol>\n<p><strong>其中，1.7.8你可以不做。但剩下的必须要做，一步都不能少，也不能错。在你看下边推荐的博客的时候，不要忘记看看我下边的建议。</strong></p>\n<p>1-7步请看：这篇博客不只前7步，如果你做完了就可以往下做，因为后边的都是属于个性化部分，所以博主在这里没有显示。<a href=\"https://zhuanlan.zhihu.com/p/26625249?utm_source=qq&amp;utm_medium=social\" title=\"搭建博客\" target=\"_blank\" rel=\"noopener\">GitHub+Hexo 搭建个人网站详细教程</a></p>\n<p>第8步请看：这篇博客是在你做完了前7步的基础上做的。<a href=\"http://www.jianshu.com/p/25587e049d54\" title=\"双部署\" target=\"_blank\" rel=\"noopener\">hexo干货系列：（四）将hexo博客同时托管到github和coding</a>，这篇博客也讲了怎么在CodingPages部署，可以和上一篇对照着看：<a href=\"http://redredleaf.me/%E6%88%91%E7%9A%84Hexo%E5%8D%9A%E5%AE%A2%E7%AB%99%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B%E4%B8%80.html#more\" target=\"_blank\" rel=\"noopener\">我的Hexo博客站的创建历程(一)【Github&amp;Coding双管齐下部署Hexo】</a></p>\n<h2 id=\"我的建议和踩过的坑\"><a href=\"#我的建议和踩过的坑\" class=\"headerlink\" title=\"我的建议和踩过的坑\"></a>我的建议和踩过的坑</h2><blockquote>\n<p>第一篇：</p>\n</blockquote>\n<ul>\n<li>域名建议买.top，比较便宜。当然，土豪随意。</li>\n<li>下载Node.js或Git时，由于众所周知的原因，下载速度会很慢。这时你需要看Hexo的官方文档，上边给出了离线下载的地址：<a href=\"https://hexo.io/docs/\" title=\"Hexo\" target=\"_blank\" rel=\"noopener\">Hexdocs</a></li>\n<li>在安装Hexo这一步，hexo init blog及其之后的命令都是在Blog/blog这个目录下进行的，一定要注意，不能弄错了。博主刚开始就是搞错了路径，结果一直报错。。。</li>\n<li>如果你在安装Hexo或者之前的步骤中有报错，建议你重新下载安装。因为这之前的过程全是安装的部分，一旦出错，没有别的原因，一定是你的操作有问题。而且你解决错误的时间一定要比重新安装耗费的时间长。</li>\n<li>关于Markdown，sublime是个好东西。</li>\n</ul>\n<blockquote>\n<p>第二篇：</p>\n</blockquote>\n<p>1.关于域名绑定，再次说明。血的教训告诉我们，Only需要添加两个解析。没有A记录，like this：</p>\n<p><img src=\"https://i.loli.net/2019/05/16/5cdd170b0712c43179.png\" alt=\"解析\"></p>\n<p>之后可以在<a href=\"http://ping.chinaz.com/\" target=\"_blank\" rel=\"noopener\">此网站</a>对你的博客进行测试，看看你的博客是否可以在国内解析到Coding，国外解析到Github。访问速度是否得到提升。</p>\n<p>2.coding配置完成后，加载博客时会出现其广告界面，如果你想去掉呢，coding给出的解决办法是在网站底部加上codingpages官网链接或者加logo</p>\n<hr>\n<h1 id=\"个性化\"><a href=\"#个性化\" class=\"headerlink\" title=\"个性化\"></a>个性化</h1><blockquote>\n<p>终于到了万众瞩目的个性化步骤了，到这里，想必你已经根据博主推荐的链接成功搭建好了博客。</p>\n</blockquote>\n<p>下面来具体说说个性化。</p>\n<h2 id=\"主题选择\"><a href=\"#主题选择\" class=\"headerlink\" title=\"主题选择\"></a>主题选择</h2><p>如果你按照上边搭建博客时推荐的文章那样，选择了next主题。那就不用多说。如果你觉得next主题不符合你的Style，可以参考这篇文章选择你喜欢的主题：<a href=\"http://www.jianshu.com/p/bcdbe7347c8d\" target=\"_blank\" rel=\"noopener\">Hexo博客主题推荐</a></p>\n<p>但我还是推荐你用next主题，原因：</p>\n<ul>\n<li>next主题是github上最流行的主题，star和fork的数量远远超过了别的主题。所以相信群众的选择。</li>\n<li>next主题的主题配置文件本就内置了许多插件，在个性化的过程中你只需要把flase改成true或者加上对应服务的id就可以直接使用。极为方便。这是其他很多主题没有做到的一点</li>\n<li>next主题内部还分为4个主题方案：Muse、Mist、Pisces、Gemini，可以自由选择，更加多元化。</li>\n<li>界面高端大气，配色低调奢华。</li>\n</ul>\n<p><strong>ps：如果你没有用next主题，那么以下个性化设置就不用看了。因为它们都是next的配置。</strong></p>\n<h2 id=\"按照主题文档设置\"><a href=\"#按照主题文档设置\" class=\"headerlink\" title=\"按照主题文档设置\"></a>按照主题文档设置</h2><p>选定了主题后，建议先看看主题的文档进行个性化设置。里面是最基本的标签、分类设置，还有第三方服务设置：<a href=\"http://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">next主题配置</a></p>\n<h2 id=\"其他的个性化设置\"><a href=\"#其他的个性化设置\" class=\"headerlink\" title=\"其他的个性化设置\"></a>其他的个性化设置</h2><p>因为用的是next主题，所以这里也是针对于next主题的个性化配置。我博客的所有个性化都是来自这些链接：</p>\n<ul>\n<li>网易云音乐链接设置，参考博客搭建时推荐的第一篇博客</li>\n<li>这一篇看它的个性化设置部分：<a href=\"https://thief.one/2017/03/03/Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/\" target=\"_blank\" rel=\"noopener\">Hexo搭建博客教程</a></li>\n<li><a href=\"http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/\" target=\"_blank\" rel=\"noopener\">RSS和High特效</a></li>\n<li>这篇真的厉害了，有30种特效：<a href=\"https://zhuanlan.zhihu.com/p/28128674\" target=\"_blank\" rel=\"noopener\">hexo的next主题个性化教程:打造炫酷网站</a></li>\n<li>主讲第3方服务：<a href=\"https://zhuanlan.zhihu.com/p/22745430\" target=\"_blank\" rel=\"noopener\">配置第三方服务</a></li>\n<li>这个也很方便，创建新文章后不用再去找了：<a href=\"https://notes.wanghao.work/2015-06-29-Hexo%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E6%97%B6%E8%87%AA%E5%8A%A8%E6%89%93%E5%BC%80%E7%BC%96%E8%BE%91%E5%99%A8.html\" target=\"_blank\" rel=\"noopener\">Hexo添加文章时自动打开编辑器</a></li>\n<li>创建一个菜单页面作为文章目录：<a href=\"https://www.zhihu.com/question/33324071\" target=\"_blank\" rel=\"noopener\">hexo下新建页面下如何放多个文章</a></li>\n<li>博客加密：<a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">加密插件Github，issue里有解决next主题兼容的方法</a></li>\n</ul>\n<p>上边这些链接里的设置，均为博主亲测有效。从这些链接可以看出，博主也是折腾了很久的。。。</p>\n<h2 id=\"在Github上看issue或者提issue\"><a href=\"#在Github上看issue或者提issue\" class=\"headerlink\" title=\"在Github上看issue或者提issue\"></a>在Github上看issue或者提issue</h2><p>如果你还想折腾，还有两种途径：</p>\n<ul>\n<li>可以看看next在Github上的issue：这些都是别人提的，可能会有你想要的设置。如果你遇到了问题，也可以自己提issue。这是网址：<a href=\"https://github.com/iissnan/hexo-theme-next/issues\" target=\"_blank\" rel=\"noopener\">next/issues</a></li>\n<li>去Hexo的官方插件页面找，这里的插件很多。只有你想不到，没有你找不到：<a href=\"https://hexo.io/plugins/\" title=\"Hexo插件\" target=\"_blank\" rel=\"noopener\">Hexo插件</a></li>\n</ul>\n<h2 id=\"我的建议\"><a href=\"#我的建议\" class=\"headerlink\" title=\"我的建议\"></a>我的建议</h2><ul>\n<li>个性化固然好，但是在设置的时候一定要细心，这些都是要打开代码文件去修改的，Sublime你值得拥有</li>\n<li>关于图床，博主之前用的七牛云，但后来通知那些免费外链有效期过了，所以所有图片都没了。。。这里推荐<a href=\"https://sm.ms/\" target=\"_blank\" rel=\"noopener\">SM.MS</a>和<a href=\"https://picgo.github.io/PicGo-Doc/zh/guide/#%E5%BA%94%E7%94%A8%E8%AF%B4%E6%98%8E\" target=\"_blank\" rel=\"noopener\">PicGo</a></li>\n<li>虽然个性化是可以让你的博客看起来高大上许多，但是不要太过了。忘了自己搭建博客的初心，只有文章才是最重要的。</li>\n<li><strong>强烈建议：</strong> 将博客源文件用github托管，可参考<a href=\"https://www.zhihu.com/question/21193762/answer/489124966\" target=\"_blank\" rel=\"noopener\">这篇回答</a></li>\n</ul>\n<h2 id=\"网站链接\"><a href=\"#网站链接\" class=\"headerlink\" title=\"网站链接\"></a>网站链接</h2><blockquote>\n<p>下面是博客搭建过程中用到的一些平台和网站的链接，比如Livere提供的评论功能，七牛图床等：</p>\n</blockquote>\n<ul>\n<li>Hexo: <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a> </li>\n<li>阿里云: <a href=\"https://www.aliyun.com/\" target=\"_blank\" rel=\"noopener\">https://www.aliyun.com/</a></li>\n<li>Livere: <a href=\"https://livere.com/\" target=\"_blank\" rel=\"noopener\">https://livere.com/ </a></li>\n<li>Leancloud: <a href=\"https://leancloud.cn/\" target=\"_blank\" rel=\"noopener\">https://leancloud.cn/</a></li>\n<li>七牛: <a href=\"https://www.qiniu.com/\" target=\"_blank\" rel=\"noopener\">https://www.qiniu.com/ </a></li>\n</ul>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck1lqnk8u0000f3639c2d549l","category_id":"ck1lqnk910004f363405vldta","_id":"ck1lqnk99000ff363p75t4kmd"},{"post_id":"ck1lqnk8z0002f363jl4nhpgx","category_id":"ck1lqnk910004f363405vldta","_id":"ck1lqnk9c000kf363wros9la2"},{"post_id":"ck1lqnk9a000hf363haq3gap1","category_id":"ck1lqnk910004f363405vldta","_id":"ck1lqnk9e000rf3631lbj72go"},{"post_id":"ck1lqnk920006f363gnqifkg3","category_id":"ck1lqnk99000ef3638xkyub57","_id":"ck1lqnk9g000vf363phpxw0hd"},{"post_id":"ck1lqnk9c000jf3630y0jxfng","category_id":"ck1lqnk910004f363405vldta","_id":"ck1lqnk9h000xf363mko664hk"},{"post_id":"ck1lqnk940008f363t4lns67j","category_id":"ck1lqnk9c000mf363crblafhq","_id":"ck1lqnk9h000zf363rh63opjc"},{"post_id":"ck1lqnk950009f363oj5j4ar5","category_id":"ck1lqnk9c000mf363crblafhq","_id":"ck1lqnk9i0012f363smx4n3ks"},{"post_id":"ck1lqnk9g000wf363o7urms86","category_id":"ck1lqnk910004f363405vldta","_id":"ck1lqnk9i0016f363k0kgycvg"},{"post_id":"ck1lqnk97000cf363y79srtlr","category_id":"ck1lqnk9h000yf363zem0asd7","_id":"ck1lqnk9j0019f363ezin4r0p"},{"post_id":"ck1lqnk98000df36322gakdwc","category_id":"ck1lqnk99000ef3638xkyub57","_id":"ck1lqnk9k001cf363ci6q2nac"},{"post_id":"ck1lqnk9d000of363qvscquu4","category_id":"ck1lqnk9j0018f36365mh4iug","_id":"ck1lqnk9l001gf363low6y4b0"},{"post_id":"ck1lqnk9e000qf3637ii4248e","category_id":"ck1lqnk9l001df363hzo9ox8n","_id":"ck1lqnk9m001jf3631yuiqicf"},{"post_id":"ck1lqnk9f000uf363hjno0h4w","category_id":"ck1lqnk9l001hf3638iridq8t","_id":"ck1lqnk9n001mf363s4pmjix4"},{"post_id":"ck1lqnkcv0021f363goy7kxh2","category_id":"ck1lqnk99000ef3638xkyub57","_id":"ck1lqnkcx0023f363xuq3bsw9"}],"PostTag":[{"post_id":"ck1lqnk8u0000f3639c2d549l","tag_id":"ck1lqnk920005f363luklekot","_id":"ck1lqnk9b000if3634s8tk089"},{"post_id":"ck1lqnk8u0000f3639c2d549l","tag_id":"ck1lqnk95000bf3632kx0y172","_id":"ck1lqnk9c000lf363u8gdhrre"},{"post_id":"ck1lqnk8z0002f363jl4nhpgx","tag_id":"ck1lqnk9a000gf363i6c2mi6c","_id":"ck1lqnk9e000pf363rcxgwxlm"},{"post_id":"ck1lqnk920006f363gnqifkg3","tag_id":"ck1lqnk9d000nf3635lnxqnay","_id":"ck1lqnk9h0011f363vt6weh5x"},{"post_id":"ck1lqnk920006f363gnqifkg3","tag_id":"ck1lqnk9f000tf3639gzeqm4y","_id":"ck1lqnk9i0014f363ji96ekqm"},{"post_id":"ck1lqnk940008f363t4lns67j","tag_id":"ck1lqnk9h0010f363km9m3jli","_id":"ck1lqnk9i0017f3633vuc8p8l"},{"post_id":"ck1lqnk950009f363oj5j4ar5","tag_id":"ck1lqnk9i0015f363bg9l5kkb","_id":"ck1lqnk9k001bf363eftvvco6"},{"post_id":"ck1lqnk97000cf363y79srtlr","tag_id":"ck1lqnk9j001af3631nc1refp","_id":"ck1lqnk9l001ff363jmyyra93"},{"post_id":"ck1lqnk98000df36322gakdwc","tag_id":"ck1lqnk9l001ef36366a3s3ij","_id":"ck1lqnk9n001lf363y2m25p1y"},{"post_id":"ck1lqnk98000df36322gakdwc","tag_id":"ck1lqnk9m001if3638lf9j2ya","_id":"ck1lqnk9n001nf363xxnuygn4"},{"post_id":"ck1lqnk9a000hf363haq3gap1","tag_id":"ck1lqnk9m001kf3633e4ra1mt","_id":"ck1lqnk9n001pf363cnvxxf4m"},{"post_id":"ck1lqnk9c000jf3630y0jxfng","tag_id":"ck1lqnk9n001of363b8zqt0ha","_id":"ck1lqnk9o001sf3631w5kdqss"},{"post_id":"ck1lqnk9c000jf3630y0jxfng","tag_id":"ck1lqnk9o001qf363gm7j8rqv","_id":"ck1lqnk9o001tf363crw7x8wk"},{"post_id":"ck1lqnk9d000of363qvscquu4","tag_id":"ck1lqnk9o001rf3639xow7043","_id":"ck1lqnk9p001vf363vrqxguk5"},{"post_id":"ck1lqnk9e000qf3637ii4248e","tag_id":"ck1lqnk9o001uf3639s17yjpq","_id":"ck1lqnk9p001xf363bfe0ybek"},{"post_id":"ck1lqnk9f000uf363hjno0h4w","tag_id":"ck1lqnk9p001wf36352d0orzc","_id":"ck1lqnk9q001zf363zkozemnw"},{"post_id":"ck1lqnkcv0021f363goy7kxh2","tag_id":"ck1lqnkcx0022f363oddqhue0","_id":"ck1lqnkcy0026f363lvf5x77i"},{"post_id":"ck1lqnkcv0021f363goy7kxh2","tag_id":"ck1lqnkcx0024f363njqv0wr2","_id":"ck1lqnkcz0027f3638ls5bwo0"},{"post_id":"ck1lqnkcv0021f363goy7kxh2","tag_id":"ck1lqnkcy0025f363qomvttov","_id":"ck1lqnkcz0028f363i4xiaq9o"},{"post_id":"ck1lqnk9g000wf363o7urms86","tag_id":"ck1nciajd0002sp63quu6bvzl","_id":"ck1nciaje0004sp6388fftbjk"},{"post_id":"ck1lqnk9g000wf363o7urms86","tag_id":"ck1nciajd0003sp63u782lnp8","_id":"ck1nciaje0005sp63yv2c0tdg"}],"Tag":[{"name":"TED","_id":"ck1lqnk920005f363luklekot"},{"name":"告别拖延","_id":"ck1lqnk95000bf3632kx0y172"},{"name":"life","_id":"ck1lqnk9a000gf363i6c2mi6c"},{"name":"git","_id":"ck1lqnk9d000nf3635lnxqnay"},{"name":"学习笔记","_id":"ck1lqnk9f000tf3639gzeqm4y"},{"name":"判断素数","_id":"ck1lqnk9h0010f363km9m3jli"},{"name":"javaEE","_id":"ck1lqnk9i0015f363bg9l5kkb"},{"name":"闰年","_id":"ck1lqnk9j001af3631nc1refp"},{"name":"敏捷测试","_id":"ck1lqnk9l001ef36366a3s3ij"},{"name":"极限编程","_id":"ck1lqnk9m001if3638lf9j2ya"},{"name":"人生规划","_id":"ck1lqnk9m001kf3633e4ra1mt"},{"name":"未来","_id":"ck1lqnk9n001of363b8zqt0ha"},{"name":"人生","_id":"ck1lqnk9o001qf363gm7j8rqv"},{"name":"软件测试","_id":"ck1lqnk9o001rf3639xow7043"},{"name":"王小波","_id":"ck1lqnk9o001uf3639s17yjpq"},{"name":"递归","_id":"ck1lqnk9p001wf36352d0orzc"},{"name":"苏州 旅行","_id":"ck1lqnk9p001yf363yt6p8l3p"},{"name":"Hexo","_id":"ck1lqnkcx0022f363oddqhue0"},{"name":"GithubPages","_id":"ck1lqnkcx0024f363njqv0wr2"},{"name":"CodingPages","_id":"ck1lqnkcy0025f363qomvttov"},{"name":"苏州，旅行","_id":"ck1nchgoa0000sp6315mvxrop"},{"name":"苏州","_id":"ck1nciajd0002sp63quu6bvzl"},{"name":"旅行","_id":"ck1nciajd0003sp63u782lnp8"}]}}